
uart-driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000148  00800100  000011f0  00001284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800248  00800248  000013cc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015dc  00000000  00000000  000015cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d6f  00000000  00000000  00002ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c2f  00000000  00000000  00003917  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  00004548  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000624  00000000  00000000  0000484c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000079c  00000000  00000000  00004e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000560c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x234>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e0 ef       	ldi	r30, 0xF0	; 240
     37c:	f1 e1       	ldi	r31, 0x11	; 17
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 34       	cpi	r26, 0x48	; 72
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a8 e4       	ldi	r26, 0x48	; 72
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a2 35       	cpi	r26, 0x52	; 82
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <main>
     39e:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
	//TCCR3A |= (1 << WGM31);
	//TCCR3A |= (1 << WGM30);

void adc_init() {
	//All code in function inits pwm
	OCR3A = 0x02;
     3a6:	82 e0       	ldi	r24, 0x02	; 2
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     3ae:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	DDRD |= (1 << PD4);
     3b2:	81 b3       	in	r24, 0x11	; 17
     3b4:	80 61       	ori	r24, 0x10	; 16
     3b6:	81 bb       	out	0x11, r24	; 17
	//TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
	TCCR3B |= (1 << WGM32); //Setting CTC
     3b8:	ea e8       	ldi	r30, 0x8A	; 138
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	88 60       	ori	r24, 0x08	; 8
     3c0:	80 83       	st	Z, r24
	TCCR3A |= (1 << COM3A0); //Clear OC3A on Compare Match, set OC3A at TOP. or toggle or smth.
     3c2:	ab e8       	ldi	r26, 0x8B	; 139
     3c4:	b0 e0       	ldi	r27, 0x00	; 0
     3c6:	8c 91       	ld	r24, X
     3c8:	80 64       	ori	r24, 0x40	; 64
     3ca:	8c 93       	st	X, r24
	TCCR3B |= (1 << CS30);
     3cc:	80 81       	ld	r24, Z
     3ce:	81 60       	ori	r24, 0x01	; 1
     3d0:	80 83       	st	Z, r24
	printf("-PWM init-\n");
     3d2:	8a e0       	ldi	r24, 0x0A	; 10
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	0e 94 57 04 	call	0x8ae	; 0x8ae <puts>
     3da:	08 95       	ret

000003dc <joystick_init>:
#include "joystick.h"
#include "adc.h"
#include <avr/io.h>

void joystick_init(){
	PORTD |= (1 << PD5); //setup pullup for PD5 which is button input from Joystick
     3dc:	82 b3       	in	r24, 0x12	; 18
     3de:	80 62       	ori	r24, 0x20	; 32
     3e0:	82 bb       	out	0x12, r24	; 18
     3e2:	08 95       	ret

000003e4 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3e4:	2f e3       	ldi	r18, 0x3F	; 63
     3e6:	8d e0       	ldi	r24, 0x0D	; 13
     3e8:	93 e0       	ldi	r25, 0x03	; 3
     3ea:	21 50       	subi	r18, 0x01	; 1
     3ec:	80 40       	sbci	r24, 0x00	; 0
     3ee:	90 40       	sbci	r25, 0x00	; 0
     3f0:	e1 f7       	brne	.-8      	; 0x3ea <main+0x6>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <main+0x10>
     3f4:	00 00       	nop
	// Set main sleep time
	int sleep_time = 1000;
    _delay_ms(sleep_time);
	
	// Initialize functions
	usart_init(MYUBRR);
     3f6:	8f e1       	ldi	r24, 0x1F	; 31
     3f8:	0e 94 82 03 	call	0x704	; 0x704 <usart_init>
	xmem_init();
     3fc:	0e 94 8f 03 	call	0x71e	; 0x71e <xmem_init>
	adc_init();
     400:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	joystick_init();
     404:	0e 94 ee 01 	call	0x3dc	; 0x3dc <joystick_init>
	oled_init();
     408:	0e 94 72 02 	call	0x4e4	; 0x4e4 <oled_init>
	
	// Test SRAM functionality
	if (SRAM_test()) {
     40c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <SRAM_test>
     410:	89 2b       	or	r24, r25
     412:	59 f4       	brne	.+22     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
		return 0;
	}
	
	// MAIN LOOP
	
	oled_set_position(1,1);
     414:	61 e0       	ldi	r22, 0x01	; 1
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 42 02 	call	0x484	; 0x484 <oled_set_position>
	oled_print_string("NIGERIA");
     420:	88 e4       	ldi	r24, 0x48	; 72
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	0e 94 db 02 	call	0x5b6	; 0x5b6 <oled_print_string>
     428:	ff cf       	rjmp	.-2      	; 0x428 <__DATA_REGION_LENGTH__+0x28>
	joystick_init();
	oled_init();
	
	// Test SRAM functionality
	if (SRAM_test()) {
		printf("SRAM test failed\r\n");
     42a:	86 e3       	ldi	r24, 0x36	; 54
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	0e 94 57 04 	call	0x8ae	; 0x8ae <puts>
    while (1) {

	}

	return 0;
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	08 95       	ret

00000438 <write_command>:
	oled_goto_page(page);
	for (int i = 0; i < 128; i++)
	{
		write_data(0x00);
	}
}
     438:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xdae>
     43c:	08 95       	ret

0000043e <oled_goto_column>:
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
     442:	80 38       	cpi	r24, 0x80	; 128
     444:	91 05       	cpc	r25, r1
     446:	90 f4       	brcc	.+36     	; 0x46c <oled_goto_column+0x2e>
     448:	ec 01       	movw	r28, r24
     44a:	8f 70       	andi	r24, 0x0F	; 15
     44c:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     450:	ce 01       	movw	r24, r28
     452:	80 7f       	andi	r24, 0xF0	; 240
     454:	99 27       	eor	r25, r25
     456:	95 95       	asr	r25
     458:	87 95       	ror	r24
     45a:	95 95       	asr	r25
     45c:	87 95       	ror	r24
     45e:	95 95       	asr	r25
     460:	87 95       	ror	r24
     462:	95 95       	asr	r25
     464:	87 95       	ror	r24
     466:	80 5f       	subi	r24, 0xF0	; 240
     468:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	08 95       	ret

00000472 <oled_goto_page>:
     472:	28 2f       	mov	r18, r24
     474:	39 2f       	mov	r19, r25
     476:	28 30       	cpi	r18, 0x08	; 8
     478:	31 05       	cpc	r19, r1
     47a:	18 f4       	brcc	.+6      	; 0x482 <oled_goto_page+0x10>
     47c:	80 55       	subi	r24, 0x50	; 80
     47e:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     482:	08 95       	ret

00000484 <oled_set_position>:
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	eb 01       	movw	r28, r22
     48a:	0e 94 39 02 	call	0x472	; 0x472 <oled_goto_page>
     48e:	ce 01       	movw	r24, r28
     490:	0e 94 1f 02 	call	0x43e	; 0x43e <oled_goto_column>
     494:	df 91       	pop	r29
     496:	cf 91       	pop	r28
     498:	08 95       	ret

0000049a <write_data>:
     49a:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfae>
     49e:	08 95       	ret

000004a0 <oled_reset>:
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	00 eb       	ldi	r16, 0xB0	; 176
     4aa:	10 e0       	ldi	r17, 0x00	; 0
     4ac:	13 c0       	rjmp	.+38     	; 0x4d4 <oled_reset+0x34>
     4ae:	c8 01       	movw	r24, r16
     4b0:	0e 94 39 02 	call	0x472	; 0x472 <oled_goto_page>
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	0e 94 1f 02 	call	0x43e	; 0x43e <oled_goto_column>
     4bc:	c0 e0       	ldi	r28, 0x00	; 0
     4be:	d0 e0       	ldi	r29, 0x00	; 0
     4c0:	04 c0       	rjmp	.+8      	; 0x4ca <oled_reset+0x2a>
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	0e 94 4d 02 	call	0x49a	; 0x49a <write_data>
     4c8:	21 96       	adiw	r28, 0x01	; 1
     4ca:	c0 38       	cpi	r28, 0x80	; 128
     4cc:	d1 05       	cpc	r29, r1
     4ce:	cc f3       	brlt	.-14     	; 0x4c2 <oled_reset+0x22>
     4d0:	0f 5f       	subi	r16, 0xFF	; 255
     4d2:	1f 4f       	sbci	r17, 0xFF	; 255
     4d4:	08 3b       	cpi	r16, 0xB8	; 184
     4d6:	11 05       	cpc	r17, r1
     4d8:	54 f3       	brlt	.-44     	; 0x4ae <oled_reset+0xe>
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	1f 91       	pop	r17
     4e0:	0f 91       	pop	r16
     4e2:	08 95       	ret

000004e4 <oled_init>:
     4e4:	8e ea       	ldi	r24, 0xAE	; 174
     4e6:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     4ea:	81 ea       	ldi	r24, 0xA1	; 161
     4ec:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     4f0:	8a ed       	ldi	r24, 0xDA	; 218
     4f2:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     4f6:	82 e1       	ldi	r24, 0x12	; 18
     4f8:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     4fc:	88 ec       	ldi	r24, 0xC8	; 200
     4fe:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     502:	88 ea       	ldi	r24, 0xA8	; 168
     504:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     508:	8f e3       	ldi	r24, 0x3F	; 63
     50a:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     50e:	85 ed       	ldi	r24, 0xD5	; 213
     510:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     514:	80 e8       	ldi	r24, 0x80	; 128
     516:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     51a:	81 e8       	ldi	r24, 0x81	; 129
     51c:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     520:	80 e5       	ldi	r24, 0x50	; 80
     522:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     526:	89 ed       	ldi	r24, 0xD9	; 217
     528:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     52c:	81 e2       	ldi	r24, 0x21	; 33
     52e:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     532:	80 e2       	ldi	r24, 0x20	; 32
     534:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     538:	82 e0       	ldi	r24, 0x02	; 2
     53a:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     53e:	8b ed       	ldi	r24, 0xDB	; 219
     540:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     544:	80 e3       	ldi	r24, 0x30	; 48
     546:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     54a:	8d ea       	ldi	r24, 0xAD	; 173
     54c:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     556:	84 ea       	ldi	r24, 0xA4	; 164
     558:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     55c:	86 ea       	ldi	r24, 0xA6	; 166
     55e:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     562:	8f ea       	ldi	r24, 0xAF	; 175
     564:	0e 94 1c 02 	call	0x438	; 0x438 <write_command>
     568:	0e 94 50 02 	call	0x4a0	; 0x4a0 <oled_reset>
     56c:	08 95       	ret

0000056e <oled_print_char>:
		//int byte = pgm_read_byte(&font8[A][i]); // Henter data fra PROGMEM
		//write_data(byte);
	//}
//}

void oled_print_char(char c) {
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
	if (' ' <= c && c <= '~') {
     574:	90 ee       	ldi	r25, 0xE0	; 224
     576:	98 0f       	add	r25, r24
     578:	9f 35       	cpi	r25, 0x5F	; 95
     57a:	98 f0       	brcs	.+38     	; 0x5a2 <oled_print_char+0x34>
     57c:	18 c0       	rjmp	.+48     	; 0x5ae <oled_print_char+0x40>
		for (int i = 0; i < 8; i++) {
			uint8_t character = pgm_read_byte(&(font8[c - 32][i]));
     57e:	e1 2f       	mov	r30, r17
     580:	f0 e0       	ldi	r31, 0x00	; 0
     582:	b0 97       	sbiw	r30, 0x20	; 32
     584:	ee 0f       	add	r30, r30
     586:	ff 1f       	adc	r31, r31
     588:	ee 0f       	add	r30, r30
     58a:	ff 1f       	adc	r31, r31
     58c:	ee 0f       	add	r30, r30
     58e:	ff 1f       	adc	r31, r31
     590:	ec 0f       	add	r30, r28
     592:	fd 1f       	adc	r31, r29
     594:	e0 59       	subi	r30, 0x90	; 144
     596:	ff 4f       	sbci	r31, 0xFF	; 255
     598:	84 91       	lpm	r24, Z
			write_data(character);
     59a:	0e 94 4d 02 	call	0x49a	; 0x49a <write_data>
	//}
//}

void oled_print_char(char c) {
	if (' ' <= c && c <= '~') {
		for (int i = 0; i < 8; i++) {
     59e:	21 96       	adiw	r28, 0x01	; 1
     5a0:	03 c0       	rjmp	.+6      	; 0x5a8 <oled_print_char+0x3a>
     5a2:	18 2f       	mov	r17, r24
     5a4:	c0 e0       	ldi	r28, 0x00	; 0
     5a6:	d0 e0       	ldi	r29, 0x00	; 0
     5a8:	c8 30       	cpi	r28, 0x08	; 8
     5aa:	d1 05       	cpc	r29, r1
     5ac:	44 f3       	brlt	.-48     	; 0x57e <oled_print_char+0x10>
			uint8_t character = pgm_read_byte(&(font8[c - 32][i]));
			write_data(character);
		}
	}
}
     5ae:	df 91       	pop	r29
     5b0:	cf 91       	pop	r28
     5b2:	1f 91       	pop	r17
     5b4:	08 95       	ret

000005b6 <oled_print_string>:

void oled_print_string(const char* string) {
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	8c 01       	movw	r16, r24
	int i = 0;
     5c0:	c0 e0       	ldi	r28, 0x00	; 0
     5c2:	d0 e0       	ldi	r29, 0x00	; 0
	while (string[i] != '\0') {
     5c4:	03 c0       	rjmp	.+6      	; 0x5cc <oled_print_string+0x16>
		oled_print_char(string[i]);
     5c6:	0e 94 b7 02 	call	0x56e	; 0x56e <oled_print_char>
		++i;
     5ca:	21 96       	adiw	r28, 0x01	; 1
	}
}

void oled_print_string(const char* string) {
	int i = 0;
	while (string[i] != '\0') {
     5cc:	f8 01       	movw	r30, r16
     5ce:	ec 0f       	add	r30, r28
     5d0:	fd 1f       	adc	r31, r29
     5d2:	80 81       	ld	r24, Z
     5d4:	81 11       	cpse	r24, r1
     5d6:	f7 cf       	rjmp	.-18     	; 0x5c6 <oled_print_string+0x10>
		oled_print_char(string[i]);
		++i;
	}
}
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	08 95       	ret

000005e2 <SRAM_test>:
#include "sram_test.h"

#include <stdlib.h>
#include <stdint.h>
int SRAM_test(void)
{
     5e2:	ef 92       	push	r14
     5e4:	ff 92       	push	r15
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\r\n");
     5ee:	80 e5       	ldi	r24, 0x50	; 80
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 57 04 	call	0x8ae	; 0x8ae <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     5f6:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
     5fa:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     5fc:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     600:	c0 e0       	ldi	r28, 0x00	; 0
     602:	d0 e0       	ldi	r29, 0x00	; 0
#include <stdint.h>
int SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
     604:	00 e0       	ldi	r16, 0x00	; 0
     606:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     608:	20 c0       	rjmp	.+64     	; 0x64a <SRAM_test+0x68>
		uint8_t some_value = rand();
     60a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
		ext_ram[i] = some_value;
     60e:	fe 01       	movw	r30, r28
     610:	f8 5e       	subi	r31, 0xE8	; 232
     612:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     614:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     616:	28 17       	cp	r18, r24
     618:	b9 f0       	breq	.+46     	; 0x648 <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
     61a:	99 27       	eor	r25, r25
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	1f 92       	push	r1
     622:	2f 93       	push	r18
     624:	df 93       	push	r29
     626:	cf 93       	push	r28
     628:	87 e6       	ldi	r24, 0x67	; 103
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	9f 93       	push	r25
     62e:	8f 93       	push	r24
     630:	0e 94 41 04 	call	0x882	; 0x882 <printf>
			write_errors++;
     634:	0f 5f       	subi	r16, 0xFF	; 255
     636:	1f 4f       	sbci	r17, 0xFF	; 255
     638:	8d b7       	in	r24, 0x3d	; 61
     63a:	9e b7       	in	r25, 0x3e	; 62
     63c:	08 96       	adiw	r24, 0x08	; 8
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	f8 94       	cli
     642:	9e bf       	out	0x3e, r25	; 62
     644:	0f be       	out	0x3f, r0	; 63
     646:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     648:	21 96       	adiw	r28, 0x01	; 1
     64a:	c1 15       	cp	r28, r1
     64c:	98 e0       	ldi	r25, 0x08	; 8
     64e:	d9 07       	cpc	r29, r25
     650:	e0 f2       	brcs	.-72     	; 0x60a <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
     652:	c7 01       	movw	r24, r14
     654:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     658:	c0 e0       	ldi	r28, 0x00	; 0
     65a:	d0 e0       	ldi	r29, 0x00	; 0
int SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
     65c:	e1 2c       	mov	r14, r1
     65e:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     660:	20 c0       	rjmp	.+64     	; 0x6a2 <SRAM_test+0xc0>
		uint8_t some_value = rand();
     662:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
		uint8_t retreived_value = ext_ram[i];
     666:	fe 01       	movw	r30, r28
     668:	f8 5e       	subi	r31, 0xE8	; 232
     66a:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     66c:	28 17       	cp	r18, r24
     66e:	c1 f0       	breq	.+48     	; 0x6a0 <SRAM_test+0xbe>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
     670:	99 27       	eor	r25, r25
     672:	9f 93       	push	r25
     674:	8f 93       	push	r24
     676:	1f 92       	push	r1
     678:	2f 93       	push	r18
     67a:	df 93       	push	r29
     67c:	cf 93       	push	r28
     67e:	81 ea       	ldi	r24, 0xA1	; 161
     680:	91 e0       	ldi	r25, 0x01	; 1
     682:	9f 93       	push	r25
     684:	8f 93       	push	r24
     686:	0e 94 41 04 	call	0x882	; 0x882 <printf>
			retrieval_errors++;
     68a:	8f ef       	ldi	r24, 0xFF	; 255
     68c:	e8 1a       	sub	r14, r24
     68e:	f8 0a       	sbc	r15, r24
     690:	8d b7       	in	r24, 0x3d	; 61
     692:	9e b7       	in	r25, 0x3e	; 62
     694:	08 96       	adiw	r24, 0x08	; 8
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	9e bf       	out	0x3e, r25	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     6a0:	21 96       	adiw	r28, 0x01	; 1
     6a2:	c1 15       	cp	r28, r1
     6a4:	98 e0       	ldi	r25, 0x08	; 8
     6a6:	d9 07       	cpc	r29, r25
     6a8:	e0 f2       	brcs	.-72     	; 0x662 <SRAM_test+0x80>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	if (retrieval_errors || write_errors) {
     6aa:	e1 14       	cp	r14, r1
     6ac:	f1 04       	cpc	r15, r1
     6ae:	b1 f4       	brne	.+44     	; 0x6dc <SRAM_test+0xfa>
     6b0:	01 15       	cp	r16, r1
     6b2:	11 05       	cpc	r17, r1
     6b4:	b1 f4       	brne	.+44     	; 0x6e2 <SRAM_test+0x100>
		return 1;
	}
	printf("SRAM test completed with \r\n%4d errors in write phase and \r\n%4d errors in retrieval phase\r\n\r\n", write_errors, retrieval_errors);
     6b6:	ff 92       	push	r15
     6b8:	ef 92       	push	r14
     6ba:	1f 93       	push	r17
     6bc:	0f 93       	push	r16
     6be:	8f ed       	ldi	r24, 0xDF	; 223
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	9f 93       	push	r25
     6c4:	8f 93       	push	r24
     6c6:	0e 94 41 04 	call	0x882	; 0x882 <printf>
	return 0;
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	05 c0       	rjmp	.+10     	; 0x6e6 <SRAM_test+0x104>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	if (retrieval_errors || write_errors) {
		return 1;
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <SRAM_test+0x104>
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	90 e0       	ldi	r25, 0x00	; 0
	}
	printf("SRAM test completed with \r\n%4d errors in write phase and \r\n%4d errors in retrieval phase\r\n\r\n", write_errors, retrieval_errors);
	return 0;
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	1f 91       	pop	r17
     6ec:	0f 91       	pop	r16
     6ee:	ff 90       	pop	r15
     6f0:	ef 90       	pop	r14
     6f2:	08 95       	ret

000006f4 <usart_transmit>:



void usart_transmit(unsigned char data) {
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) ) {	
     6f4:	5d 9b       	sbis	0x0b, 5	; 11
     6f6:	fe cf       	rjmp	.-4      	; 0x6f4 <usart_transmit>
	}
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     6f8:	8c b9       	out	0x0c, r24	; 12
     6fa:	08 95       	ret

000006fc <usart_receive>:
}

unsigned char usart_receive(void) {
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) ) {
     6fc:	5f 9b       	sbis	0x0b, 7	; 11
     6fe:	fe cf       	rjmp	.-4      	; 0x6fc <usart_receive>
	}
	/* Get and return received data from buffer */
	return UDR0;
     700:	8c b1       	in	r24, 0x0c	; 12
}
     702:	08 95       	ret

00000704 <usart_init>:
#include <avr/io.h>
#include "uart_driver.h"

void usart_init(uint8_t ubrr) {
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     704:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)ubrr;
     706:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     708:	88 e1       	ldi	r24, 0x18	; 24
     70a:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (1<<URSEL0)|(3<<UCSZ00);
     70c:	86 e8       	ldi	r24, 0x86	; 134
     70e:	80 bd       	out	0x20, r24	; 32
	fdevopen(usart_transmit, usart_receive);
     710:	6e e7       	ldi	r22, 0x7E	; 126
     712:	73 e0       	ldi	r23, 0x03	; 3
     714:	8a e7       	ldi	r24, 0x7A	; 122
     716:	93 e0       	ldi	r25, 0x03	; 3
     718:	0e 94 f6 03 	call	0x7ec	; 0x7ec <fdevopen>
     71c:	08 95       	ret

0000071e <xmem_init>:
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1 << SRE); //enable XMEM
     71e:	85 b7       	in	r24, 0x35	; 53
     720:	80 68       	ori	r24, 0x80	; 128
     722:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //bit masking
     724:	80 b7       	in	r24, 0x30	; 48
     726:	80 62       	ori	r24, 0x20	; 32
     728:	80 bf       	out	0x30, r24	; 48
	printf("-XMEM init-\n");	
     72a:	8c e3       	ldi	r24, 0x3C	; 60
     72c:	92 e0       	ldi	r25, 0x02	; 2
     72e:	0e 94 57 04 	call	0x8ae	; 0x8ae <puts>
     732:	08 95       	ret

00000734 <do_rand>:
     734:	8f 92       	push	r8
     736:	9f 92       	push	r9
     738:	af 92       	push	r10
     73a:	bf 92       	push	r11
     73c:	cf 92       	push	r12
     73e:	df 92       	push	r13
     740:	ef 92       	push	r14
     742:	ff 92       	push	r15
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	ec 01       	movw	r28, r24
     74a:	68 81       	ld	r22, Y
     74c:	79 81       	ldd	r23, Y+1	; 0x01
     74e:	8a 81       	ldd	r24, Y+2	; 0x02
     750:	9b 81       	ldd	r25, Y+3	; 0x03
     752:	61 15       	cp	r22, r1
     754:	71 05       	cpc	r23, r1
     756:	81 05       	cpc	r24, r1
     758:	91 05       	cpc	r25, r1
     75a:	21 f4       	brne	.+8      	; 0x764 <do_rand+0x30>
     75c:	64 e2       	ldi	r22, 0x24	; 36
     75e:	79 ed       	ldi	r23, 0xD9	; 217
     760:	8b e5       	ldi	r24, 0x5B	; 91
     762:	97 e0       	ldi	r25, 0x07	; 7
     764:	2d e1       	ldi	r18, 0x1D	; 29
     766:	33 ef       	ldi	r19, 0xF3	; 243
     768:	41 e0       	ldi	r20, 0x01	; 1
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__divmodsi4>
     770:	49 01       	movw	r8, r18
     772:	5a 01       	movw	r10, r20
     774:	9b 01       	movw	r18, r22
     776:	ac 01       	movw	r20, r24
     778:	a7 ea       	ldi	r26, 0xA7	; 167
     77a:	b1 e4       	ldi	r27, 0x41	; 65
     77c:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__muluhisi3>
     780:	6b 01       	movw	r12, r22
     782:	7c 01       	movw	r14, r24
     784:	ac ee       	ldi	r26, 0xEC	; 236
     786:	b4 ef       	ldi	r27, 0xF4	; 244
     788:	a5 01       	movw	r20, r10
     78a:	94 01       	movw	r18, r8
     78c:	0e 94 89 08 	call	0x1112	; 0x1112 <__mulohisi3>
     790:	dc 01       	movw	r26, r24
     792:	cb 01       	movw	r24, r22
     794:	8c 0d       	add	r24, r12
     796:	9d 1d       	adc	r25, r13
     798:	ae 1d       	adc	r26, r14
     79a:	bf 1d       	adc	r27, r15
     79c:	b7 ff       	sbrs	r27, 7
     79e:	03 c0       	rjmp	.+6      	; 0x7a6 <do_rand+0x72>
     7a0:	01 97       	sbiw	r24, 0x01	; 1
     7a2:	a1 09       	sbc	r26, r1
     7a4:	b0 48       	sbci	r27, 0x80	; 128
     7a6:	88 83       	st	Y, r24
     7a8:	99 83       	std	Y+1, r25	; 0x01
     7aa:	aa 83       	std	Y+2, r26	; 0x02
     7ac:	bb 83       	std	Y+3, r27	; 0x03
     7ae:	9f 77       	andi	r25, 0x7F	; 127
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	df 90       	pop	r13
     7ba:	cf 90       	pop	r12
     7bc:	bf 90       	pop	r11
     7be:	af 90       	pop	r10
     7c0:	9f 90       	pop	r9
     7c2:	8f 90       	pop	r8
     7c4:	08 95       	ret

000007c6 <rand_r>:
     7c6:	0e 94 9a 03 	call	0x734	; 0x734 <do_rand>
     7ca:	08 95       	ret

000007cc <rand>:
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	91 e0       	ldi	r25, 0x01	; 1
     7d0:	0e 94 9a 03 	call	0x734	; 0x734 <do_rand>
     7d4:	08 95       	ret

000007d6 <srand>:
     7d6:	a0 e0       	ldi	r26, 0x00	; 0
     7d8:	b0 e0       	ldi	r27, 0x00	; 0
     7da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     7de:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7e2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     7e6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     7ea:	08 95       	ret

000007ec <fdevopen>:
     7ec:	0f 93       	push	r16
     7ee:	1f 93       	push	r17
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	00 97       	sbiw	r24, 0x00	; 0
     7f6:	31 f4       	brne	.+12     	; 0x804 <fdevopen+0x18>
     7f8:	61 15       	cp	r22, r1
     7fa:	71 05       	cpc	r23, r1
     7fc:	19 f4       	brne	.+6      	; 0x804 <fdevopen+0x18>
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	3a c0       	rjmp	.+116    	; 0x878 <fdevopen+0x8c>
     804:	8b 01       	movw	r16, r22
     806:	ec 01       	movw	r28, r24
     808:	6e e0       	ldi	r22, 0x0E	; 14
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	0e 94 68 06 	call	0xcd0	; 0xcd0 <calloc>
     814:	fc 01       	movw	r30, r24
     816:	89 2b       	or	r24, r25
     818:	91 f3       	breq	.-28     	; 0x7fe <fdevopen+0x12>
     81a:	80 e8       	ldi	r24, 0x80	; 128
     81c:	83 83       	std	Z+3, r24	; 0x03
     81e:	01 15       	cp	r16, r1
     820:	11 05       	cpc	r17, r1
     822:	71 f0       	breq	.+28     	; 0x840 <fdevopen+0x54>
     824:	13 87       	std	Z+11, r17	; 0x0b
     826:	02 87       	std	Z+10, r16	; 0x0a
     828:	81 e8       	ldi	r24, 0x81	; 129
     82a:	83 83       	std	Z+3, r24	; 0x03
     82c:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <__data_end>
     830:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <__data_end+0x1>
     834:	89 2b       	or	r24, r25
     836:	21 f4       	brne	.+8      	; 0x840 <fdevopen+0x54>
     838:	f0 93 49 02 	sts	0x0249, r31	; 0x800249 <__data_end+0x1>
     83c:	e0 93 48 02 	sts	0x0248, r30	; 0x800248 <__data_end>
     840:	20 97       	sbiw	r28, 0x00	; 0
     842:	c9 f0       	breq	.+50     	; 0x876 <fdevopen+0x8a>
     844:	d1 87       	std	Z+9, r29	; 0x09
     846:	c0 87       	std	Z+8, r28	; 0x08
     848:	83 81       	ldd	r24, Z+3	; 0x03
     84a:	82 60       	ori	r24, 0x02	; 2
     84c:	83 83       	std	Z+3, r24	; 0x03
     84e:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <__data_end+0x2>
     852:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <__data_end+0x3>
     856:	89 2b       	or	r24, r25
     858:	71 f4       	brne	.+28     	; 0x876 <fdevopen+0x8a>
     85a:	f0 93 4b 02 	sts	0x024B, r31	; 0x80024b <__data_end+0x3>
     85e:	e0 93 4a 02 	sts	0x024A, r30	; 0x80024a <__data_end+0x2>
     862:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <__data_end+0x4>
     866:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <__data_end+0x5>
     86a:	89 2b       	or	r24, r25
     86c:	21 f4       	brne	.+8      	; 0x876 <fdevopen+0x8a>
     86e:	f0 93 4d 02 	sts	0x024D, r31	; 0x80024d <__data_end+0x5>
     872:	e0 93 4c 02 	sts	0x024C, r30	; 0x80024c <__data_end+0x4>
     876:	cf 01       	movw	r24, r30
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	1f 91       	pop	r17
     87e:	0f 91       	pop	r16
     880:	08 95       	ret

00000882 <printf>:
     882:	a0 e0       	ldi	r26, 0x00	; 0
     884:	b0 e0       	ldi	r27, 0x00	; 0
     886:	e7 e4       	ldi	r30, 0x47	; 71
     888:	f4 e0       	ldi	r31, 0x04	; 4
     88a:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__prologue_saves__+0x20>
     88e:	ae 01       	movw	r20, r28
     890:	4b 5f       	subi	r20, 0xFB	; 251
     892:	5f 4f       	sbci	r21, 0xFF	; 255
     894:	fa 01       	movw	r30, r20
     896:	61 91       	ld	r22, Z+
     898:	71 91       	ld	r23, Z+
     89a:	af 01       	movw	r20, r30
     89c:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <__data_end+0x2>
     8a0:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <__data_end+0x3>
     8a4:	0e 94 87 04 	call	0x90e	; 0x90e <vfprintf>
     8a8:	e2 e0       	ldi	r30, 0x02	; 2
     8aa:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__epilogue_restores__+0x20>

000008ae <puts>:
     8ae:	0f 93       	push	r16
     8b0:	1f 93       	push	r17
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <__data_end+0x2>
     8ba:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <__data_end+0x3>
     8be:	23 81       	ldd	r18, Z+3	; 0x03
     8c0:	21 ff       	sbrs	r18, 1
     8c2:	1b c0       	rjmp	.+54     	; 0x8fa <puts+0x4c>
     8c4:	8c 01       	movw	r16, r24
     8c6:	d0 e0       	ldi	r29, 0x00	; 0
     8c8:	c0 e0       	ldi	r28, 0x00	; 0
     8ca:	f8 01       	movw	r30, r16
     8cc:	81 91       	ld	r24, Z+
     8ce:	8f 01       	movw	r16, r30
     8d0:	60 91 4a 02 	lds	r22, 0x024A	; 0x80024a <__data_end+0x2>
     8d4:	70 91 4b 02 	lds	r23, 0x024B	; 0x80024b <__data_end+0x3>
     8d8:	db 01       	movw	r26, r22
     8da:	18 96       	adiw	r26, 0x08	; 8
     8dc:	ed 91       	ld	r30, X+
     8de:	fc 91       	ld	r31, X
     8e0:	19 97       	sbiw	r26, 0x09	; 9
     8e2:	88 23       	and	r24, r24
     8e4:	31 f0       	breq	.+12     	; 0x8f2 <puts+0x44>
     8e6:	09 95       	icall
     8e8:	89 2b       	or	r24, r25
     8ea:	79 f3       	breq	.-34     	; 0x8ca <puts+0x1c>
     8ec:	df ef       	ldi	r29, 0xFF	; 255
     8ee:	cf ef       	ldi	r28, 0xFF	; 255
     8f0:	ec cf       	rjmp	.-40     	; 0x8ca <puts+0x1c>
     8f2:	8a e0       	ldi	r24, 0x0A	; 10
     8f4:	09 95       	icall
     8f6:	89 2b       	or	r24, r25
     8f8:	19 f0       	breq	.+6      	; 0x900 <puts+0x52>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	9f ef       	ldi	r25, 0xFF	; 255
     8fe:	02 c0       	rjmp	.+4      	; 0x904 <puts+0x56>
     900:	8d 2f       	mov	r24, r29
     902:	9c 2f       	mov	r25, r28
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	1f 91       	pop	r17
     90a:	0f 91       	pop	r16
     90c:	08 95       	ret

0000090e <vfprintf>:
     90e:	ab e0       	ldi	r26, 0x0B	; 11
     910:	b0 e0       	ldi	r27, 0x00	; 0
     912:	ed e8       	ldi	r30, 0x8D	; 141
     914:	f4 e0       	ldi	r31, 0x04	; 4
     916:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__prologue_saves__>
     91a:	6c 01       	movw	r12, r24
     91c:	7b 01       	movw	r14, r22
     91e:	8a 01       	movw	r16, r20
     920:	fc 01       	movw	r30, r24
     922:	17 82       	std	Z+7, r1	; 0x07
     924:	16 82       	std	Z+6, r1	; 0x06
     926:	83 81       	ldd	r24, Z+3	; 0x03
     928:	81 ff       	sbrs	r24, 1
     92a:	cc c1       	rjmp	.+920    	; 0xcc4 <vfprintf+0x3b6>
     92c:	ce 01       	movw	r24, r28
     92e:	01 96       	adiw	r24, 0x01	; 1
     930:	3c 01       	movw	r6, r24
     932:	f6 01       	movw	r30, r12
     934:	93 81       	ldd	r25, Z+3	; 0x03
     936:	f7 01       	movw	r30, r14
     938:	93 fd       	sbrc	r25, 3
     93a:	85 91       	lpm	r24, Z+
     93c:	93 ff       	sbrs	r25, 3
     93e:	81 91       	ld	r24, Z+
     940:	7f 01       	movw	r14, r30
     942:	88 23       	and	r24, r24
     944:	09 f4       	brne	.+2      	; 0x948 <vfprintf+0x3a>
     946:	ba c1       	rjmp	.+884    	; 0xcbc <vfprintf+0x3ae>
     948:	85 32       	cpi	r24, 0x25	; 37
     94a:	39 f4       	brne	.+14     	; 0x95a <vfprintf+0x4c>
     94c:	93 fd       	sbrc	r25, 3
     94e:	85 91       	lpm	r24, Z+
     950:	93 ff       	sbrs	r25, 3
     952:	81 91       	ld	r24, Z+
     954:	7f 01       	movw	r14, r30
     956:	85 32       	cpi	r24, 0x25	; 37
     958:	29 f4       	brne	.+10     	; 0x964 <vfprintf+0x56>
     95a:	b6 01       	movw	r22, r12
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     962:	e7 cf       	rjmp	.-50     	; 0x932 <vfprintf+0x24>
     964:	91 2c       	mov	r9, r1
     966:	21 2c       	mov	r2, r1
     968:	31 2c       	mov	r3, r1
     96a:	ff e1       	ldi	r31, 0x1F	; 31
     96c:	f3 15       	cp	r31, r3
     96e:	d8 f0       	brcs	.+54     	; 0x9a6 <vfprintf+0x98>
     970:	8b 32       	cpi	r24, 0x2B	; 43
     972:	79 f0       	breq	.+30     	; 0x992 <vfprintf+0x84>
     974:	38 f4       	brcc	.+14     	; 0x984 <vfprintf+0x76>
     976:	80 32       	cpi	r24, 0x20	; 32
     978:	79 f0       	breq	.+30     	; 0x998 <vfprintf+0x8a>
     97a:	83 32       	cpi	r24, 0x23	; 35
     97c:	a1 f4       	brne	.+40     	; 0x9a6 <vfprintf+0x98>
     97e:	23 2d       	mov	r18, r3
     980:	20 61       	ori	r18, 0x10	; 16
     982:	1d c0       	rjmp	.+58     	; 0x9be <vfprintf+0xb0>
     984:	8d 32       	cpi	r24, 0x2D	; 45
     986:	61 f0       	breq	.+24     	; 0x9a0 <vfprintf+0x92>
     988:	80 33       	cpi	r24, 0x30	; 48
     98a:	69 f4       	brne	.+26     	; 0x9a6 <vfprintf+0x98>
     98c:	23 2d       	mov	r18, r3
     98e:	21 60       	ori	r18, 0x01	; 1
     990:	16 c0       	rjmp	.+44     	; 0x9be <vfprintf+0xb0>
     992:	83 2d       	mov	r24, r3
     994:	82 60       	ori	r24, 0x02	; 2
     996:	38 2e       	mov	r3, r24
     998:	e3 2d       	mov	r30, r3
     99a:	e4 60       	ori	r30, 0x04	; 4
     99c:	3e 2e       	mov	r3, r30
     99e:	2a c0       	rjmp	.+84     	; 0x9f4 <vfprintf+0xe6>
     9a0:	f3 2d       	mov	r31, r3
     9a2:	f8 60       	ori	r31, 0x08	; 8
     9a4:	1d c0       	rjmp	.+58     	; 0x9e0 <vfprintf+0xd2>
     9a6:	37 fc       	sbrc	r3, 7
     9a8:	2d c0       	rjmp	.+90     	; 0xa04 <vfprintf+0xf6>
     9aa:	20 ed       	ldi	r18, 0xD0	; 208
     9ac:	28 0f       	add	r18, r24
     9ae:	2a 30       	cpi	r18, 0x0A	; 10
     9b0:	40 f0       	brcs	.+16     	; 0x9c2 <vfprintf+0xb4>
     9b2:	8e 32       	cpi	r24, 0x2E	; 46
     9b4:	b9 f4       	brne	.+46     	; 0x9e4 <vfprintf+0xd6>
     9b6:	36 fc       	sbrc	r3, 6
     9b8:	81 c1       	rjmp	.+770    	; 0xcbc <vfprintf+0x3ae>
     9ba:	23 2d       	mov	r18, r3
     9bc:	20 64       	ori	r18, 0x40	; 64
     9be:	32 2e       	mov	r3, r18
     9c0:	19 c0       	rjmp	.+50     	; 0x9f4 <vfprintf+0xe6>
     9c2:	36 fe       	sbrs	r3, 6
     9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <vfprintf+0xc4>
     9c6:	8a e0       	ldi	r24, 0x0A	; 10
     9c8:	98 9e       	mul	r9, r24
     9ca:	20 0d       	add	r18, r0
     9cc:	11 24       	eor	r1, r1
     9ce:	92 2e       	mov	r9, r18
     9d0:	11 c0       	rjmp	.+34     	; 0x9f4 <vfprintf+0xe6>
     9d2:	ea e0       	ldi	r30, 0x0A	; 10
     9d4:	2e 9e       	mul	r2, r30
     9d6:	20 0d       	add	r18, r0
     9d8:	11 24       	eor	r1, r1
     9da:	22 2e       	mov	r2, r18
     9dc:	f3 2d       	mov	r31, r3
     9de:	f0 62       	ori	r31, 0x20	; 32
     9e0:	3f 2e       	mov	r3, r31
     9e2:	08 c0       	rjmp	.+16     	; 0x9f4 <vfprintf+0xe6>
     9e4:	8c 36       	cpi	r24, 0x6C	; 108
     9e6:	21 f4       	brne	.+8      	; 0x9f0 <vfprintf+0xe2>
     9e8:	83 2d       	mov	r24, r3
     9ea:	80 68       	ori	r24, 0x80	; 128
     9ec:	38 2e       	mov	r3, r24
     9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <vfprintf+0xe6>
     9f0:	88 36       	cpi	r24, 0x68	; 104
     9f2:	41 f4       	brne	.+16     	; 0xa04 <vfprintf+0xf6>
     9f4:	f7 01       	movw	r30, r14
     9f6:	93 fd       	sbrc	r25, 3
     9f8:	85 91       	lpm	r24, Z+
     9fa:	93 ff       	sbrs	r25, 3
     9fc:	81 91       	ld	r24, Z+
     9fe:	7f 01       	movw	r14, r30
     a00:	81 11       	cpse	r24, r1
     a02:	b3 cf       	rjmp	.-154    	; 0x96a <vfprintf+0x5c>
     a04:	98 2f       	mov	r25, r24
     a06:	9f 7d       	andi	r25, 0xDF	; 223
     a08:	95 54       	subi	r25, 0x45	; 69
     a0a:	93 30       	cpi	r25, 0x03	; 3
     a0c:	28 f4       	brcc	.+10     	; 0xa18 <vfprintf+0x10a>
     a0e:	0c 5f       	subi	r16, 0xFC	; 252
     a10:	1f 4f       	sbci	r17, 0xFF	; 255
     a12:	9f e3       	ldi	r25, 0x3F	; 63
     a14:	99 83       	std	Y+1, r25	; 0x01
     a16:	0d c0       	rjmp	.+26     	; 0xa32 <vfprintf+0x124>
     a18:	83 36       	cpi	r24, 0x63	; 99
     a1a:	31 f0       	breq	.+12     	; 0xa28 <vfprintf+0x11a>
     a1c:	83 37       	cpi	r24, 0x73	; 115
     a1e:	71 f0       	breq	.+28     	; 0xa3c <vfprintf+0x12e>
     a20:	83 35       	cpi	r24, 0x53	; 83
     a22:	09 f0       	breq	.+2      	; 0xa26 <vfprintf+0x118>
     a24:	59 c0       	rjmp	.+178    	; 0xad8 <vfprintf+0x1ca>
     a26:	21 c0       	rjmp	.+66     	; 0xa6a <vfprintf+0x15c>
     a28:	f8 01       	movw	r30, r16
     a2a:	80 81       	ld	r24, Z
     a2c:	89 83       	std	Y+1, r24	; 0x01
     a2e:	0e 5f       	subi	r16, 0xFE	; 254
     a30:	1f 4f       	sbci	r17, 0xFF	; 255
     a32:	88 24       	eor	r8, r8
     a34:	83 94       	inc	r8
     a36:	91 2c       	mov	r9, r1
     a38:	53 01       	movw	r10, r6
     a3a:	13 c0       	rjmp	.+38     	; 0xa62 <vfprintf+0x154>
     a3c:	28 01       	movw	r4, r16
     a3e:	f2 e0       	ldi	r31, 0x02	; 2
     a40:	4f 0e       	add	r4, r31
     a42:	51 1c       	adc	r5, r1
     a44:	f8 01       	movw	r30, r16
     a46:	a0 80       	ld	r10, Z
     a48:	b1 80       	ldd	r11, Z+1	; 0x01
     a4a:	36 fe       	sbrs	r3, 6
     a4c:	03 c0       	rjmp	.+6      	; 0xa54 <vfprintf+0x146>
     a4e:	69 2d       	mov	r22, r9
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	02 c0       	rjmp	.+4      	; 0xa58 <vfprintf+0x14a>
     a54:	6f ef       	ldi	r22, 0xFF	; 255
     a56:	7f ef       	ldi	r23, 0xFF	; 255
     a58:	c5 01       	movw	r24, r10
     a5a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <strnlen>
     a5e:	4c 01       	movw	r8, r24
     a60:	82 01       	movw	r16, r4
     a62:	f3 2d       	mov	r31, r3
     a64:	ff 77       	andi	r31, 0x7F	; 127
     a66:	3f 2e       	mov	r3, r31
     a68:	16 c0       	rjmp	.+44     	; 0xa96 <vfprintf+0x188>
     a6a:	28 01       	movw	r4, r16
     a6c:	22 e0       	ldi	r18, 0x02	; 2
     a6e:	42 0e       	add	r4, r18
     a70:	51 1c       	adc	r5, r1
     a72:	f8 01       	movw	r30, r16
     a74:	a0 80       	ld	r10, Z
     a76:	b1 80       	ldd	r11, Z+1	; 0x01
     a78:	36 fe       	sbrs	r3, 6
     a7a:	03 c0       	rjmp	.+6      	; 0xa82 <vfprintf+0x174>
     a7c:	69 2d       	mov	r22, r9
     a7e:	70 e0       	ldi	r23, 0x00	; 0
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0x178>
     a82:	6f ef       	ldi	r22, 0xFF	; 255
     a84:	7f ef       	ldi	r23, 0xFF	; 255
     a86:	c5 01       	movw	r24, r10
     a88:	0e 94 a5 07 	call	0xf4a	; 0xf4a <strnlen_P>
     a8c:	4c 01       	movw	r8, r24
     a8e:	f3 2d       	mov	r31, r3
     a90:	f0 68       	ori	r31, 0x80	; 128
     a92:	3f 2e       	mov	r3, r31
     a94:	82 01       	movw	r16, r4
     a96:	33 fc       	sbrc	r3, 3
     a98:	1b c0       	rjmp	.+54     	; 0xad0 <vfprintf+0x1c2>
     a9a:	82 2d       	mov	r24, r2
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	88 16       	cp	r8, r24
     aa0:	99 06       	cpc	r9, r25
     aa2:	b0 f4       	brcc	.+44     	; 0xad0 <vfprintf+0x1c2>
     aa4:	b6 01       	movw	r22, r12
     aa6:	80 e2       	ldi	r24, 0x20	; 32
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     aae:	2a 94       	dec	r2
     ab0:	f4 cf       	rjmp	.-24     	; 0xa9a <vfprintf+0x18c>
     ab2:	f5 01       	movw	r30, r10
     ab4:	37 fc       	sbrc	r3, 7
     ab6:	85 91       	lpm	r24, Z+
     ab8:	37 fe       	sbrs	r3, 7
     aba:	81 91       	ld	r24, Z+
     abc:	5f 01       	movw	r10, r30
     abe:	b6 01       	movw	r22, r12
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     ac6:	21 10       	cpse	r2, r1
     ac8:	2a 94       	dec	r2
     aca:	21 e0       	ldi	r18, 0x01	; 1
     acc:	82 1a       	sub	r8, r18
     ace:	91 08       	sbc	r9, r1
     ad0:	81 14       	cp	r8, r1
     ad2:	91 04       	cpc	r9, r1
     ad4:	71 f7       	brne	.-36     	; 0xab2 <vfprintf+0x1a4>
     ad6:	e8 c0       	rjmp	.+464    	; 0xca8 <vfprintf+0x39a>
     ad8:	84 36       	cpi	r24, 0x64	; 100
     ada:	11 f0       	breq	.+4      	; 0xae0 <vfprintf+0x1d2>
     adc:	89 36       	cpi	r24, 0x69	; 105
     ade:	41 f5       	brne	.+80     	; 0xb30 <vfprintf+0x222>
     ae0:	f8 01       	movw	r30, r16
     ae2:	37 fe       	sbrs	r3, 7
     ae4:	07 c0       	rjmp	.+14     	; 0xaf4 <vfprintf+0x1e6>
     ae6:	60 81       	ld	r22, Z
     ae8:	71 81       	ldd	r23, Z+1	; 0x01
     aea:	82 81       	ldd	r24, Z+2	; 0x02
     aec:	93 81       	ldd	r25, Z+3	; 0x03
     aee:	0c 5f       	subi	r16, 0xFC	; 252
     af0:	1f 4f       	sbci	r17, 0xFF	; 255
     af2:	08 c0       	rjmp	.+16     	; 0xb04 <vfprintf+0x1f6>
     af4:	60 81       	ld	r22, Z
     af6:	71 81       	ldd	r23, Z+1	; 0x01
     af8:	07 2e       	mov	r0, r23
     afa:	00 0c       	add	r0, r0
     afc:	88 0b       	sbc	r24, r24
     afe:	99 0b       	sbc	r25, r25
     b00:	0e 5f       	subi	r16, 0xFE	; 254
     b02:	1f 4f       	sbci	r17, 0xFF	; 255
     b04:	f3 2d       	mov	r31, r3
     b06:	ff 76       	andi	r31, 0x6F	; 111
     b08:	3f 2e       	mov	r3, r31
     b0a:	97 ff       	sbrs	r25, 7
     b0c:	09 c0       	rjmp	.+18     	; 0xb20 <vfprintf+0x212>
     b0e:	90 95       	com	r25
     b10:	80 95       	com	r24
     b12:	70 95       	com	r23
     b14:	61 95       	neg	r22
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	8f 4f       	sbci	r24, 0xFF	; 255
     b1a:	9f 4f       	sbci	r25, 0xFF	; 255
     b1c:	f0 68       	ori	r31, 0x80	; 128
     b1e:	3f 2e       	mov	r3, r31
     b20:	2a e0       	ldi	r18, 0x0A	; 10
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	a3 01       	movw	r20, r6
     b26:	0e 94 fe 07 	call	0xffc	; 0xffc <__ultoa_invert>
     b2a:	88 2e       	mov	r8, r24
     b2c:	86 18       	sub	r8, r6
     b2e:	45 c0       	rjmp	.+138    	; 0xbba <vfprintf+0x2ac>
     b30:	85 37       	cpi	r24, 0x75	; 117
     b32:	31 f4       	brne	.+12     	; 0xb40 <vfprintf+0x232>
     b34:	23 2d       	mov	r18, r3
     b36:	2f 7e       	andi	r18, 0xEF	; 239
     b38:	b2 2e       	mov	r11, r18
     b3a:	2a e0       	ldi	r18, 0x0A	; 10
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	25 c0       	rjmp	.+74     	; 0xb8a <vfprintf+0x27c>
     b40:	93 2d       	mov	r25, r3
     b42:	99 7f       	andi	r25, 0xF9	; 249
     b44:	b9 2e       	mov	r11, r25
     b46:	8f 36       	cpi	r24, 0x6F	; 111
     b48:	c1 f0       	breq	.+48     	; 0xb7a <vfprintf+0x26c>
     b4a:	18 f4       	brcc	.+6      	; 0xb52 <vfprintf+0x244>
     b4c:	88 35       	cpi	r24, 0x58	; 88
     b4e:	79 f0       	breq	.+30     	; 0xb6e <vfprintf+0x260>
     b50:	b5 c0       	rjmp	.+362    	; 0xcbc <vfprintf+0x3ae>
     b52:	80 37       	cpi	r24, 0x70	; 112
     b54:	19 f0       	breq	.+6      	; 0xb5c <vfprintf+0x24e>
     b56:	88 37       	cpi	r24, 0x78	; 120
     b58:	21 f0       	breq	.+8      	; 0xb62 <vfprintf+0x254>
     b5a:	b0 c0       	rjmp	.+352    	; 0xcbc <vfprintf+0x3ae>
     b5c:	e9 2f       	mov	r30, r25
     b5e:	e0 61       	ori	r30, 0x10	; 16
     b60:	be 2e       	mov	r11, r30
     b62:	b4 fe       	sbrs	r11, 4
     b64:	0d c0       	rjmp	.+26     	; 0xb80 <vfprintf+0x272>
     b66:	fb 2d       	mov	r31, r11
     b68:	f4 60       	ori	r31, 0x04	; 4
     b6a:	bf 2e       	mov	r11, r31
     b6c:	09 c0       	rjmp	.+18     	; 0xb80 <vfprintf+0x272>
     b6e:	34 fe       	sbrs	r3, 4
     b70:	0a c0       	rjmp	.+20     	; 0xb86 <vfprintf+0x278>
     b72:	29 2f       	mov	r18, r25
     b74:	26 60       	ori	r18, 0x06	; 6
     b76:	b2 2e       	mov	r11, r18
     b78:	06 c0       	rjmp	.+12     	; 0xb86 <vfprintf+0x278>
     b7a:	28 e0       	ldi	r18, 0x08	; 8
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	05 c0       	rjmp	.+10     	; 0xb8a <vfprintf+0x27c>
     b80:	20 e1       	ldi	r18, 0x10	; 16
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0x27c>
     b86:	20 e1       	ldi	r18, 0x10	; 16
     b88:	32 e0       	ldi	r19, 0x02	; 2
     b8a:	f8 01       	movw	r30, r16
     b8c:	b7 fe       	sbrs	r11, 7
     b8e:	07 c0       	rjmp	.+14     	; 0xb9e <vfprintf+0x290>
     b90:	60 81       	ld	r22, Z
     b92:	71 81       	ldd	r23, Z+1	; 0x01
     b94:	82 81       	ldd	r24, Z+2	; 0x02
     b96:	93 81       	ldd	r25, Z+3	; 0x03
     b98:	0c 5f       	subi	r16, 0xFC	; 252
     b9a:	1f 4f       	sbci	r17, 0xFF	; 255
     b9c:	06 c0       	rjmp	.+12     	; 0xbaa <vfprintf+0x29c>
     b9e:	60 81       	ld	r22, Z
     ba0:	71 81       	ldd	r23, Z+1	; 0x01
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 5f       	subi	r16, 0xFE	; 254
     ba8:	1f 4f       	sbci	r17, 0xFF	; 255
     baa:	a3 01       	movw	r20, r6
     bac:	0e 94 fe 07 	call	0xffc	; 0xffc <__ultoa_invert>
     bb0:	88 2e       	mov	r8, r24
     bb2:	86 18       	sub	r8, r6
     bb4:	fb 2d       	mov	r31, r11
     bb6:	ff 77       	andi	r31, 0x7F	; 127
     bb8:	3f 2e       	mov	r3, r31
     bba:	36 fe       	sbrs	r3, 6
     bbc:	0d c0       	rjmp	.+26     	; 0xbd8 <vfprintf+0x2ca>
     bbe:	23 2d       	mov	r18, r3
     bc0:	2e 7f       	andi	r18, 0xFE	; 254
     bc2:	a2 2e       	mov	r10, r18
     bc4:	89 14       	cp	r8, r9
     bc6:	58 f4       	brcc	.+22     	; 0xbde <vfprintf+0x2d0>
     bc8:	34 fe       	sbrs	r3, 4
     bca:	0b c0       	rjmp	.+22     	; 0xbe2 <vfprintf+0x2d4>
     bcc:	32 fc       	sbrc	r3, 2
     bce:	09 c0       	rjmp	.+18     	; 0xbe2 <vfprintf+0x2d4>
     bd0:	83 2d       	mov	r24, r3
     bd2:	8e 7e       	andi	r24, 0xEE	; 238
     bd4:	a8 2e       	mov	r10, r24
     bd6:	05 c0       	rjmp	.+10     	; 0xbe2 <vfprintf+0x2d4>
     bd8:	b8 2c       	mov	r11, r8
     bda:	a3 2c       	mov	r10, r3
     bdc:	03 c0       	rjmp	.+6      	; 0xbe4 <vfprintf+0x2d6>
     bde:	b8 2c       	mov	r11, r8
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <vfprintf+0x2d6>
     be2:	b9 2c       	mov	r11, r9
     be4:	a4 fe       	sbrs	r10, 4
     be6:	0f c0       	rjmp	.+30     	; 0xc06 <vfprintf+0x2f8>
     be8:	fe 01       	movw	r30, r28
     bea:	e8 0d       	add	r30, r8
     bec:	f1 1d       	adc	r31, r1
     bee:	80 81       	ld	r24, Z
     bf0:	80 33       	cpi	r24, 0x30	; 48
     bf2:	21 f4       	brne	.+8      	; 0xbfc <vfprintf+0x2ee>
     bf4:	9a 2d       	mov	r25, r10
     bf6:	99 7e       	andi	r25, 0xE9	; 233
     bf8:	a9 2e       	mov	r10, r25
     bfa:	09 c0       	rjmp	.+18     	; 0xc0e <vfprintf+0x300>
     bfc:	a2 fe       	sbrs	r10, 2
     bfe:	06 c0       	rjmp	.+12     	; 0xc0c <vfprintf+0x2fe>
     c00:	b3 94       	inc	r11
     c02:	b3 94       	inc	r11
     c04:	04 c0       	rjmp	.+8      	; 0xc0e <vfprintf+0x300>
     c06:	8a 2d       	mov	r24, r10
     c08:	86 78       	andi	r24, 0x86	; 134
     c0a:	09 f0       	breq	.+2      	; 0xc0e <vfprintf+0x300>
     c0c:	b3 94       	inc	r11
     c0e:	a3 fc       	sbrc	r10, 3
     c10:	11 c0       	rjmp	.+34     	; 0xc34 <vfprintf+0x326>
     c12:	a0 fe       	sbrs	r10, 0
     c14:	06 c0       	rjmp	.+12     	; 0xc22 <vfprintf+0x314>
     c16:	b2 14       	cp	r11, r2
     c18:	88 f4       	brcc	.+34     	; 0xc3c <vfprintf+0x32e>
     c1a:	28 0c       	add	r2, r8
     c1c:	92 2c       	mov	r9, r2
     c1e:	9b 18       	sub	r9, r11
     c20:	0e c0       	rjmp	.+28     	; 0xc3e <vfprintf+0x330>
     c22:	b2 14       	cp	r11, r2
     c24:	60 f4       	brcc	.+24     	; 0xc3e <vfprintf+0x330>
     c26:	b6 01       	movw	r22, r12
     c28:	80 e2       	ldi	r24, 0x20	; 32
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     c30:	b3 94       	inc	r11
     c32:	f7 cf       	rjmp	.-18     	; 0xc22 <vfprintf+0x314>
     c34:	b2 14       	cp	r11, r2
     c36:	18 f4       	brcc	.+6      	; 0xc3e <vfprintf+0x330>
     c38:	2b 18       	sub	r2, r11
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <vfprintf+0x332>
     c3c:	98 2c       	mov	r9, r8
     c3e:	21 2c       	mov	r2, r1
     c40:	a4 fe       	sbrs	r10, 4
     c42:	10 c0       	rjmp	.+32     	; 0xc64 <vfprintf+0x356>
     c44:	b6 01       	movw	r22, r12
     c46:	80 e3       	ldi	r24, 0x30	; 48
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     c4e:	a2 fe       	sbrs	r10, 2
     c50:	17 c0       	rjmp	.+46     	; 0xc80 <vfprintf+0x372>
     c52:	a1 fc       	sbrc	r10, 1
     c54:	03 c0       	rjmp	.+6      	; 0xc5c <vfprintf+0x34e>
     c56:	88 e7       	ldi	r24, 0x78	; 120
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0x352>
     c5c:	88 e5       	ldi	r24, 0x58	; 88
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	b6 01       	movw	r22, r12
     c62:	0c c0       	rjmp	.+24     	; 0xc7c <vfprintf+0x36e>
     c64:	8a 2d       	mov	r24, r10
     c66:	86 78       	andi	r24, 0x86	; 134
     c68:	59 f0       	breq	.+22     	; 0xc80 <vfprintf+0x372>
     c6a:	a1 fe       	sbrs	r10, 1
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <vfprintf+0x364>
     c6e:	8b e2       	ldi	r24, 0x2B	; 43
     c70:	01 c0       	rjmp	.+2      	; 0xc74 <vfprintf+0x366>
     c72:	80 e2       	ldi	r24, 0x20	; 32
     c74:	a7 fc       	sbrc	r10, 7
     c76:	8d e2       	ldi	r24, 0x2D	; 45
     c78:	b6 01       	movw	r22, r12
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     c80:	89 14       	cp	r8, r9
     c82:	38 f4       	brcc	.+14     	; 0xc92 <vfprintf+0x384>
     c84:	b6 01       	movw	r22, r12
     c86:	80 e3       	ldi	r24, 0x30	; 48
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     c8e:	9a 94       	dec	r9
     c90:	f7 cf       	rjmp	.-18     	; 0xc80 <vfprintf+0x372>
     c92:	8a 94       	dec	r8
     c94:	f3 01       	movw	r30, r6
     c96:	e8 0d       	add	r30, r8
     c98:	f1 1d       	adc	r31, r1
     c9a:	80 81       	ld	r24, Z
     c9c:	b6 01       	movw	r22, r12
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     ca4:	81 10       	cpse	r8, r1
     ca6:	f5 cf       	rjmp	.-22     	; 0xc92 <vfprintf+0x384>
     ca8:	22 20       	and	r2, r2
     caa:	09 f4       	brne	.+2      	; 0xcae <vfprintf+0x3a0>
     cac:	42 ce       	rjmp	.-892    	; 0x932 <vfprintf+0x24>
     cae:	b6 01       	movw	r22, r12
     cb0:	80 e2       	ldi	r24, 0x20	; 32
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	0e 94 c2 07 	call	0xf84	; 0xf84 <fputc>
     cb8:	2a 94       	dec	r2
     cba:	f6 cf       	rjmp	.-20     	; 0xca8 <vfprintf+0x39a>
     cbc:	f6 01       	movw	r30, r12
     cbe:	86 81       	ldd	r24, Z+6	; 0x06
     cc0:	97 81       	ldd	r25, Z+7	; 0x07
     cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x3ba>
     cc4:	8f ef       	ldi	r24, 0xFF	; 255
     cc6:	9f ef       	ldi	r25, 0xFF	; 255
     cc8:	2b 96       	adiw	r28, 0x0b	; 11
     cca:	e2 e1       	ldi	r30, 0x12	; 18
     ccc:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__epilogue_restores__>

00000cd0 <calloc>:
     cd0:	0f 93       	push	r16
     cd2:	1f 93       	push	r17
     cd4:	cf 93       	push	r28
     cd6:	df 93       	push	r29
     cd8:	86 9f       	mul	r24, r22
     cda:	80 01       	movw	r16, r0
     cdc:	87 9f       	mul	r24, r23
     cde:	10 0d       	add	r17, r0
     ce0:	96 9f       	mul	r25, r22
     ce2:	10 0d       	add	r17, r0
     ce4:	11 24       	eor	r1, r1
     ce6:	c8 01       	movw	r24, r16
     ce8:	0e 94 84 06 	call	0xd08	; 0xd08 <malloc>
     cec:	ec 01       	movw	r28, r24
     cee:	00 97       	sbiw	r24, 0x00	; 0
     cf0:	29 f0       	breq	.+10     	; 0xcfc <calloc+0x2c>
     cf2:	a8 01       	movw	r20, r16
     cf4:	60 e0       	ldi	r22, 0x00	; 0
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	0e 94 b0 07 	call	0xf60	; 0xf60 <memset>
     cfc:	ce 01       	movw	r24, r28
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	1f 91       	pop	r17
     d04:	0f 91       	pop	r16
     d06:	08 95       	ret

00000d08 <malloc>:
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	82 30       	cpi	r24, 0x02	; 2
     d12:	91 05       	cpc	r25, r1
     d14:	10 f4       	brcc	.+4      	; 0xd1a <malloc+0x12>
     d16:	82 e0       	ldi	r24, 0x02	; 2
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <__flp>
     d1e:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <__flp+0x1>
     d22:	20 e0       	ldi	r18, 0x00	; 0
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	a0 e0       	ldi	r26, 0x00	; 0
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	30 97       	sbiw	r30, 0x00	; 0
     d2c:	19 f1       	breq	.+70     	; 0xd74 <malloc+0x6c>
     d2e:	40 81       	ld	r20, Z
     d30:	51 81       	ldd	r21, Z+1	; 0x01
     d32:	02 81       	ldd	r16, Z+2	; 0x02
     d34:	13 81       	ldd	r17, Z+3	; 0x03
     d36:	48 17       	cp	r20, r24
     d38:	59 07       	cpc	r21, r25
     d3a:	c8 f0       	brcs	.+50     	; 0xd6e <malloc+0x66>
     d3c:	84 17       	cp	r24, r20
     d3e:	95 07       	cpc	r25, r21
     d40:	69 f4       	brne	.+26     	; 0xd5c <malloc+0x54>
     d42:	10 97       	sbiw	r26, 0x00	; 0
     d44:	31 f0       	breq	.+12     	; 0xd52 <malloc+0x4a>
     d46:	12 96       	adiw	r26, 0x02	; 2
     d48:	0c 93       	st	X, r16
     d4a:	12 97       	sbiw	r26, 0x02	; 2
     d4c:	13 96       	adiw	r26, 0x03	; 3
     d4e:	1c 93       	st	X, r17
     d50:	27 c0       	rjmp	.+78     	; 0xda0 <malloc+0x98>
     d52:	00 93 50 02 	sts	0x0250, r16	; 0x800250 <__flp>
     d56:	10 93 51 02 	sts	0x0251, r17	; 0x800251 <__flp+0x1>
     d5a:	22 c0       	rjmp	.+68     	; 0xda0 <malloc+0x98>
     d5c:	21 15       	cp	r18, r1
     d5e:	31 05       	cpc	r19, r1
     d60:	19 f0       	breq	.+6      	; 0xd68 <malloc+0x60>
     d62:	42 17       	cp	r20, r18
     d64:	53 07       	cpc	r21, r19
     d66:	18 f4       	brcc	.+6      	; 0xd6e <malloc+0x66>
     d68:	9a 01       	movw	r18, r20
     d6a:	bd 01       	movw	r22, r26
     d6c:	ef 01       	movw	r28, r30
     d6e:	df 01       	movw	r26, r30
     d70:	f8 01       	movw	r30, r16
     d72:	db cf       	rjmp	.-74     	; 0xd2a <malloc+0x22>
     d74:	21 15       	cp	r18, r1
     d76:	31 05       	cpc	r19, r1
     d78:	f9 f0       	breq	.+62     	; 0xdb8 <malloc+0xb0>
     d7a:	28 1b       	sub	r18, r24
     d7c:	39 0b       	sbc	r19, r25
     d7e:	24 30       	cpi	r18, 0x04	; 4
     d80:	31 05       	cpc	r19, r1
     d82:	80 f4       	brcc	.+32     	; 0xda4 <malloc+0x9c>
     d84:	8a 81       	ldd	r24, Y+2	; 0x02
     d86:	9b 81       	ldd	r25, Y+3	; 0x03
     d88:	61 15       	cp	r22, r1
     d8a:	71 05       	cpc	r23, r1
     d8c:	21 f0       	breq	.+8      	; 0xd96 <malloc+0x8e>
     d8e:	fb 01       	movw	r30, r22
     d90:	93 83       	std	Z+3, r25	; 0x03
     d92:	82 83       	std	Z+2, r24	; 0x02
     d94:	04 c0       	rjmp	.+8      	; 0xd9e <malloc+0x96>
     d96:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <__flp+0x1>
     d9a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <__flp>
     d9e:	fe 01       	movw	r30, r28
     da0:	32 96       	adiw	r30, 0x02	; 2
     da2:	44 c0       	rjmp	.+136    	; 0xe2c <malloc+0x124>
     da4:	fe 01       	movw	r30, r28
     da6:	e2 0f       	add	r30, r18
     da8:	f3 1f       	adc	r31, r19
     daa:	81 93       	st	Z+, r24
     dac:	91 93       	st	Z+, r25
     dae:	22 50       	subi	r18, 0x02	; 2
     db0:	31 09       	sbc	r19, r1
     db2:	39 83       	std	Y+1, r19	; 0x01
     db4:	28 83       	st	Y, r18
     db6:	3a c0       	rjmp	.+116    	; 0xe2c <malloc+0x124>
     db8:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <__brkval>
     dbc:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <__brkval+0x1>
     dc0:	23 2b       	or	r18, r19
     dc2:	41 f4       	brne	.+16     	; 0xdd4 <malloc+0xcc>
     dc4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
     dc8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
     dcc:	30 93 4f 02 	sts	0x024F, r19	; 0x80024f <__brkval+0x1>
     dd0:	20 93 4e 02 	sts	0x024E, r18	; 0x80024e <__brkval>
     dd4:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
     dd8:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
     ddc:	21 15       	cp	r18, r1
     dde:	31 05       	cpc	r19, r1
     de0:	41 f4       	brne	.+16     	; 0xdf2 <malloc+0xea>
     de2:	2d b7       	in	r18, 0x3d	; 61
     de4:	3e b7       	in	r19, 0x3e	; 62
     de6:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
     dea:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
     dee:	24 1b       	sub	r18, r20
     df0:	35 0b       	sbc	r19, r21
     df2:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <__brkval>
     df6:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <__brkval+0x1>
     dfa:	e2 17       	cp	r30, r18
     dfc:	f3 07       	cpc	r31, r19
     dfe:	a0 f4       	brcc	.+40     	; 0xe28 <malloc+0x120>
     e00:	2e 1b       	sub	r18, r30
     e02:	3f 0b       	sbc	r19, r31
     e04:	28 17       	cp	r18, r24
     e06:	39 07       	cpc	r19, r25
     e08:	78 f0       	brcs	.+30     	; 0xe28 <malloc+0x120>
     e0a:	ac 01       	movw	r20, r24
     e0c:	4e 5f       	subi	r20, 0xFE	; 254
     e0e:	5f 4f       	sbci	r21, 0xFF	; 255
     e10:	24 17       	cp	r18, r20
     e12:	35 07       	cpc	r19, r21
     e14:	48 f0       	brcs	.+18     	; 0xe28 <malloc+0x120>
     e16:	4e 0f       	add	r20, r30
     e18:	5f 1f       	adc	r21, r31
     e1a:	50 93 4f 02 	sts	0x024F, r21	; 0x80024f <__brkval+0x1>
     e1e:	40 93 4e 02 	sts	0x024E, r20	; 0x80024e <__brkval>
     e22:	81 93       	st	Z+, r24
     e24:	91 93       	st	Z+, r25
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <malloc+0x124>
     e28:	e0 e0       	ldi	r30, 0x00	; 0
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	cf 01       	movw	r24, r30
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	08 95       	ret

00000e38 <free>:
     e38:	cf 93       	push	r28
     e3a:	df 93       	push	r29
     e3c:	00 97       	sbiw	r24, 0x00	; 0
     e3e:	09 f4       	brne	.+2      	; 0xe42 <free+0xa>
     e40:	81 c0       	rjmp	.+258    	; 0xf44 <free+0x10c>
     e42:	fc 01       	movw	r30, r24
     e44:	32 97       	sbiw	r30, 0x02	; 2
     e46:	13 82       	std	Z+3, r1	; 0x03
     e48:	12 82       	std	Z+2, r1	; 0x02
     e4a:	a0 91 50 02 	lds	r26, 0x0250	; 0x800250 <__flp>
     e4e:	b0 91 51 02 	lds	r27, 0x0251	; 0x800251 <__flp+0x1>
     e52:	10 97       	sbiw	r26, 0x00	; 0
     e54:	81 f4       	brne	.+32     	; 0xe76 <free+0x3e>
     e56:	20 81       	ld	r18, Z
     e58:	31 81       	ldd	r19, Z+1	; 0x01
     e5a:	82 0f       	add	r24, r18
     e5c:	93 1f       	adc	r25, r19
     e5e:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <__brkval>
     e62:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <__brkval+0x1>
     e66:	28 17       	cp	r18, r24
     e68:	39 07       	cpc	r19, r25
     e6a:	51 f5       	brne	.+84     	; 0xec0 <free+0x88>
     e6c:	f0 93 4f 02 	sts	0x024F, r31	; 0x80024f <__brkval+0x1>
     e70:	e0 93 4e 02 	sts	0x024E, r30	; 0x80024e <__brkval>
     e74:	67 c0       	rjmp	.+206    	; 0xf44 <free+0x10c>
     e76:	ed 01       	movw	r28, r26
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	ce 17       	cp	r28, r30
     e7e:	df 07       	cpc	r29, r31
     e80:	40 f4       	brcc	.+16     	; 0xe92 <free+0x5a>
     e82:	4a 81       	ldd	r20, Y+2	; 0x02
     e84:	5b 81       	ldd	r21, Y+3	; 0x03
     e86:	9e 01       	movw	r18, r28
     e88:	41 15       	cp	r20, r1
     e8a:	51 05       	cpc	r21, r1
     e8c:	f1 f0       	breq	.+60     	; 0xeca <free+0x92>
     e8e:	ea 01       	movw	r28, r20
     e90:	f5 cf       	rjmp	.-22     	; 0xe7c <free+0x44>
     e92:	d3 83       	std	Z+3, r29	; 0x03
     e94:	c2 83       	std	Z+2, r28	; 0x02
     e96:	40 81       	ld	r20, Z
     e98:	51 81       	ldd	r21, Z+1	; 0x01
     e9a:	84 0f       	add	r24, r20
     e9c:	95 1f       	adc	r25, r21
     e9e:	c8 17       	cp	r28, r24
     ea0:	d9 07       	cpc	r29, r25
     ea2:	59 f4       	brne	.+22     	; 0xeba <free+0x82>
     ea4:	88 81       	ld	r24, Y
     ea6:	99 81       	ldd	r25, Y+1	; 0x01
     ea8:	84 0f       	add	r24, r20
     eaa:	95 1f       	adc	r25, r21
     eac:	02 96       	adiw	r24, 0x02	; 2
     eae:	91 83       	std	Z+1, r25	; 0x01
     eb0:	80 83       	st	Z, r24
     eb2:	8a 81       	ldd	r24, Y+2	; 0x02
     eb4:	9b 81       	ldd	r25, Y+3	; 0x03
     eb6:	93 83       	std	Z+3, r25	; 0x03
     eb8:	82 83       	std	Z+2, r24	; 0x02
     eba:	21 15       	cp	r18, r1
     ebc:	31 05       	cpc	r19, r1
     ebe:	29 f4       	brne	.+10     	; 0xeca <free+0x92>
     ec0:	f0 93 51 02 	sts	0x0251, r31	; 0x800251 <__flp+0x1>
     ec4:	e0 93 50 02 	sts	0x0250, r30	; 0x800250 <__flp>
     ec8:	3d c0       	rjmp	.+122    	; 0xf44 <free+0x10c>
     eca:	e9 01       	movw	r28, r18
     ecc:	fb 83       	std	Y+3, r31	; 0x03
     ece:	ea 83       	std	Y+2, r30	; 0x02
     ed0:	49 91       	ld	r20, Y+
     ed2:	59 91       	ld	r21, Y+
     ed4:	c4 0f       	add	r28, r20
     ed6:	d5 1f       	adc	r29, r21
     ed8:	ec 17       	cp	r30, r28
     eda:	fd 07       	cpc	r31, r29
     edc:	61 f4       	brne	.+24     	; 0xef6 <free+0xbe>
     ede:	80 81       	ld	r24, Z
     ee0:	91 81       	ldd	r25, Z+1	; 0x01
     ee2:	84 0f       	add	r24, r20
     ee4:	95 1f       	adc	r25, r21
     ee6:	02 96       	adiw	r24, 0x02	; 2
     ee8:	e9 01       	movw	r28, r18
     eea:	99 83       	std	Y+1, r25	; 0x01
     eec:	88 83       	st	Y, r24
     eee:	82 81       	ldd	r24, Z+2	; 0x02
     ef0:	93 81       	ldd	r25, Z+3	; 0x03
     ef2:	9b 83       	std	Y+3, r25	; 0x03
     ef4:	8a 83       	std	Y+2, r24	; 0x02
     ef6:	e0 e0       	ldi	r30, 0x00	; 0
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	12 96       	adiw	r26, 0x02	; 2
     efc:	8d 91       	ld	r24, X+
     efe:	9c 91       	ld	r25, X
     f00:	13 97       	sbiw	r26, 0x03	; 3
     f02:	00 97       	sbiw	r24, 0x00	; 0
     f04:	19 f0       	breq	.+6      	; 0xf0c <free+0xd4>
     f06:	fd 01       	movw	r30, r26
     f08:	dc 01       	movw	r26, r24
     f0a:	f7 cf       	rjmp	.-18     	; 0xefa <free+0xc2>
     f0c:	8d 91       	ld	r24, X+
     f0e:	9c 91       	ld	r25, X
     f10:	11 97       	sbiw	r26, 0x01	; 1
     f12:	9d 01       	movw	r18, r26
     f14:	2e 5f       	subi	r18, 0xFE	; 254
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	82 0f       	add	r24, r18
     f1a:	93 1f       	adc	r25, r19
     f1c:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <__brkval>
     f20:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <__brkval+0x1>
     f24:	28 17       	cp	r18, r24
     f26:	39 07       	cpc	r19, r25
     f28:	69 f4       	brne	.+26     	; 0xf44 <free+0x10c>
     f2a:	30 97       	sbiw	r30, 0x00	; 0
     f2c:	29 f4       	brne	.+10     	; 0xf38 <free+0x100>
     f2e:	10 92 51 02 	sts	0x0251, r1	; 0x800251 <__flp+0x1>
     f32:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <__flp>
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <free+0x104>
     f38:	13 82       	std	Z+3, r1	; 0x03
     f3a:	12 82       	std	Z+2, r1	; 0x02
     f3c:	b0 93 4f 02 	sts	0x024F, r27	; 0x80024f <__brkval+0x1>
     f40:	a0 93 4e 02 	sts	0x024E, r26	; 0x80024e <__brkval>
     f44:	df 91       	pop	r29
     f46:	cf 91       	pop	r28
     f48:	08 95       	ret

00000f4a <strnlen_P>:
     f4a:	fc 01       	movw	r30, r24
     f4c:	05 90       	lpm	r0, Z+
     f4e:	61 50       	subi	r22, 0x01	; 1
     f50:	70 40       	sbci	r23, 0x00	; 0
     f52:	01 10       	cpse	r0, r1
     f54:	d8 f7       	brcc	.-10     	; 0xf4c <strnlen_P+0x2>
     f56:	80 95       	com	r24
     f58:	90 95       	com	r25
     f5a:	8e 0f       	add	r24, r30
     f5c:	9f 1f       	adc	r25, r31
     f5e:	08 95       	ret

00000f60 <memset>:
     f60:	dc 01       	movw	r26, r24
     f62:	01 c0       	rjmp	.+2      	; 0xf66 <memset+0x6>
     f64:	6d 93       	st	X+, r22
     f66:	41 50       	subi	r20, 0x01	; 1
     f68:	50 40       	sbci	r21, 0x00	; 0
     f6a:	e0 f7       	brcc	.-8      	; 0xf64 <memset+0x4>
     f6c:	08 95       	ret

00000f6e <strnlen>:
     f6e:	fc 01       	movw	r30, r24
     f70:	61 50       	subi	r22, 0x01	; 1
     f72:	70 40       	sbci	r23, 0x00	; 0
     f74:	01 90       	ld	r0, Z+
     f76:	01 10       	cpse	r0, r1
     f78:	d8 f7       	brcc	.-10     	; 0xf70 <strnlen+0x2>
     f7a:	80 95       	com	r24
     f7c:	90 95       	com	r25
     f7e:	8e 0f       	add	r24, r30
     f80:	9f 1f       	adc	r25, r31
     f82:	08 95       	ret

00000f84 <fputc>:
     f84:	0f 93       	push	r16
     f86:	1f 93       	push	r17
     f88:	cf 93       	push	r28
     f8a:	df 93       	push	r29
     f8c:	fb 01       	movw	r30, r22
     f8e:	23 81       	ldd	r18, Z+3	; 0x03
     f90:	21 fd       	sbrc	r18, 1
     f92:	03 c0       	rjmp	.+6      	; 0xf9a <fputc+0x16>
     f94:	8f ef       	ldi	r24, 0xFF	; 255
     f96:	9f ef       	ldi	r25, 0xFF	; 255
     f98:	2c c0       	rjmp	.+88     	; 0xff2 <fputc+0x6e>
     f9a:	22 ff       	sbrs	r18, 2
     f9c:	16 c0       	rjmp	.+44     	; 0xfca <fputc+0x46>
     f9e:	46 81       	ldd	r20, Z+6	; 0x06
     fa0:	57 81       	ldd	r21, Z+7	; 0x07
     fa2:	24 81       	ldd	r18, Z+4	; 0x04
     fa4:	35 81       	ldd	r19, Z+5	; 0x05
     fa6:	42 17       	cp	r20, r18
     fa8:	53 07       	cpc	r21, r19
     faa:	44 f4       	brge	.+16     	; 0xfbc <fputc+0x38>
     fac:	a0 81       	ld	r26, Z
     fae:	b1 81       	ldd	r27, Z+1	; 0x01
     fb0:	9d 01       	movw	r18, r26
     fb2:	2f 5f       	subi	r18, 0xFF	; 255
     fb4:	3f 4f       	sbci	r19, 0xFF	; 255
     fb6:	31 83       	std	Z+1, r19	; 0x01
     fb8:	20 83       	st	Z, r18
     fba:	8c 93       	st	X, r24
     fbc:	26 81       	ldd	r18, Z+6	; 0x06
     fbe:	37 81       	ldd	r19, Z+7	; 0x07
     fc0:	2f 5f       	subi	r18, 0xFF	; 255
     fc2:	3f 4f       	sbci	r19, 0xFF	; 255
     fc4:	37 83       	std	Z+7, r19	; 0x07
     fc6:	26 83       	std	Z+6, r18	; 0x06
     fc8:	14 c0       	rjmp	.+40     	; 0xff2 <fputc+0x6e>
     fca:	8b 01       	movw	r16, r22
     fcc:	ec 01       	movw	r28, r24
     fce:	fb 01       	movw	r30, r22
     fd0:	00 84       	ldd	r0, Z+8	; 0x08
     fd2:	f1 85       	ldd	r31, Z+9	; 0x09
     fd4:	e0 2d       	mov	r30, r0
     fd6:	09 95       	icall
     fd8:	89 2b       	or	r24, r25
     fda:	e1 f6       	brne	.-72     	; 0xf94 <fputc+0x10>
     fdc:	d8 01       	movw	r26, r16
     fde:	16 96       	adiw	r26, 0x06	; 6
     fe0:	8d 91       	ld	r24, X+
     fe2:	9c 91       	ld	r25, X
     fe4:	17 97       	sbiw	r26, 0x07	; 7
     fe6:	01 96       	adiw	r24, 0x01	; 1
     fe8:	17 96       	adiw	r26, 0x07	; 7
     fea:	9c 93       	st	X, r25
     fec:	8e 93       	st	-X, r24
     fee:	16 97       	sbiw	r26, 0x06	; 6
     ff0:	ce 01       	movw	r24, r28
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	08 95       	ret

00000ffc <__ultoa_invert>:
     ffc:	fa 01       	movw	r30, r20
     ffe:	aa 27       	eor	r26, r26
    1000:	28 30       	cpi	r18, 0x08	; 8
    1002:	51 f1       	breq	.+84     	; 0x1058 <__ultoa_invert+0x5c>
    1004:	20 31       	cpi	r18, 0x10	; 16
    1006:	81 f1       	breq	.+96     	; 0x1068 <__ultoa_invert+0x6c>
    1008:	e8 94       	clt
    100a:	6f 93       	push	r22
    100c:	6e 7f       	andi	r22, 0xFE	; 254
    100e:	6e 5f       	subi	r22, 0xFE	; 254
    1010:	7f 4f       	sbci	r23, 0xFF	; 255
    1012:	8f 4f       	sbci	r24, 0xFF	; 255
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	af 4f       	sbci	r26, 0xFF	; 255
    1018:	b1 e0       	ldi	r27, 0x01	; 1
    101a:	3e d0       	rcall	.+124    	; 0x1098 <__ultoa_invert+0x9c>
    101c:	b4 e0       	ldi	r27, 0x04	; 4
    101e:	3c d0       	rcall	.+120    	; 0x1098 <__ultoa_invert+0x9c>
    1020:	67 0f       	add	r22, r23
    1022:	78 1f       	adc	r23, r24
    1024:	89 1f       	adc	r24, r25
    1026:	9a 1f       	adc	r25, r26
    1028:	a1 1d       	adc	r26, r1
    102a:	68 0f       	add	r22, r24
    102c:	79 1f       	adc	r23, r25
    102e:	8a 1f       	adc	r24, r26
    1030:	91 1d       	adc	r25, r1
    1032:	a1 1d       	adc	r26, r1
    1034:	6a 0f       	add	r22, r26
    1036:	71 1d       	adc	r23, r1
    1038:	81 1d       	adc	r24, r1
    103a:	91 1d       	adc	r25, r1
    103c:	a1 1d       	adc	r26, r1
    103e:	20 d0       	rcall	.+64     	; 0x1080 <__ultoa_invert+0x84>
    1040:	09 f4       	brne	.+2      	; 0x1044 <__ultoa_invert+0x48>
    1042:	68 94       	set
    1044:	3f 91       	pop	r19
    1046:	2a e0       	ldi	r18, 0x0A	; 10
    1048:	26 9f       	mul	r18, r22
    104a:	11 24       	eor	r1, r1
    104c:	30 19       	sub	r19, r0
    104e:	30 5d       	subi	r19, 0xD0	; 208
    1050:	31 93       	st	Z+, r19
    1052:	de f6       	brtc	.-74     	; 0x100a <__ultoa_invert+0xe>
    1054:	cf 01       	movw	r24, r30
    1056:	08 95       	ret
    1058:	46 2f       	mov	r20, r22
    105a:	47 70       	andi	r20, 0x07	; 7
    105c:	40 5d       	subi	r20, 0xD0	; 208
    105e:	41 93       	st	Z+, r20
    1060:	b3 e0       	ldi	r27, 0x03	; 3
    1062:	0f d0       	rcall	.+30     	; 0x1082 <__ultoa_invert+0x86>
    1064:	c9 f7       	brne	.-14     	; 0x1058 <__ultoa_invert+0x5c>
    1066:	f6 cf       	rjmp	.-20     	; 0x1054 <__ultoa_invert+0x58>
    1068:	46 2f       	mov	r20, r22
    106a:	4f 70       	andi	r20, 0x0F	; 15
    106c:	40 5d       	subi	r20, 0xD0	; 208
    106e:	4a 33       	cpi	r20, 0x3A	; 58
    1070:	18 f0       	brcs	.+6      	; 0x1078 <__ultoa_invert+0x7c>
    1072:	49 5d       	subi	r20, 0xD9	; 217
    1074:	31 fd       	sbrc	r19, 1
    1076:	40 52       	subi	r20, 0x20	; 32
    1078:	41 93       	st	Z+, r20
    107a:	02 d0       	rcall	.+4      	; 0x1080 <__ultoa_invert+0x84>
    107c:	a9 f7       	brne	.-22     	; 0x1068 <__ultoa_invert+0x6c>
    107e:	ea cf       	rjmp	.-44     	; 0x1054 <__ultoa_invert+0x58>
    1080:	b4 e0       	ldi	r27, 0x04	; 4
    1082:	a6 95       	lsr	r26
    1084:	97 95       	ror	r25
    1086:	87 95       	ror	r24
    1088:	77 95       	ror	r23
    108a:	67 95       	ror	r22
    108c:	ba 95       	dec	r27
    108e:	c9 f7       	brne	.-14     	; 0x1082 <__ultoa_invert+0x86>
    1090:	00 97       	sbiw	r24, 0x00	; 0
    1092:	61 05       	cpc	r22, r1
    1094:	71 05       	cpc	r23, r1
    1096:	08 95       	ret
    1098:	9b 01       	movw	r18, r22
    109a:	ac 01       	movw	r20, r24
    109c:	0a 2e       	mov	r0, r26
    109e:	06 94       	lsr	r0
    10a0:	57 95       	ror	r21
    10a2:	47 95       	ror	r20
    10a4:	37 95       	ror	r19
    10a6:	27 95       	ror	r18
    10a8:	ba 95       	dec	r27
    10aa:	c9 f7       	brne	.-14     	; 0x109e <__ultoa_invert+0xa2>
    10ac:	62 0f       	add	r22, r18
    10ae:	73 1f       	adc	r23, r19
    10b0:	84 1f       	adc	r24, r20
    10b2:	95 1f       	adc	r25, r21
    10b4:	a0 1d       	adc	r26, r0
    10b6:	08 95       	ret

000010b8 <__divmodsi4>:
    10b8:	05 2e       	mov	r0, r21
    10ba:	97 fb       	bst	r25, 7
    10bc:	1e f4       	brtc	.+6      	; 0x10c4 <__divmodsi4+0xc>
    10be:	00 94       	com	r0
    10c0:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__negsi2>
    10c4:	57 fd       	sbrc	r21, 7
    10c6:	07 d0       	rcall	.+14     	; 0x10d6 <__divmodsi4_neg2>
    10c8:	0e 94 c5 08 	call	0x118a	; 0x118a <__udivmodsi4>
    10cc:	07 fc       	sbrc	r0, 7
    10ce:	03 d0       	rcall	.+6      	; 0x10d6 <__divmodsi4_neg2>
    10d0:	4e f4       	brtc	.+18     	; 0x10e4 <__divmodsi4_exit>
    10d2:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__negsi2>

000010d6 <__divmodsi4_neg2>:
    10d6:	50 95       	com	r21
    10d8:	40 95       	com	r20
    10da:	30 95       	com	r19
    10dc:	21 95       	neg	r18
    10de:	3f 4f       	sbci	r19, 0xFF	; 255
    10e0:	4f 4f       	sbci	r20, 0xFF	; 255
    10e2:	5f 4f       	sbci	r21, 0xFF	; 255

000010e4 <__divmodsi4_exit>:
    10e4:	08 95       	ret

000010e6 <__negsi2>:
    10e6:	90 95       	com	r25
    10e8:	80 95       	com	r24
    10ea:	70 95       	com	r23
    10ec:	61 95       	neg	r22
    10ee:	7f 4f       	sbci	r23, 0xFF	; 255
    10f0:	8f 4f       	sbci	r24, 0xFF	; 255
    10f2:	9f 4f       	sbci	r25, 0xFF	; 255
    10f4:	08 95       	ret

000010f6 <__muluhisi3>:
    10f6:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__umulhisi3>
    10fa:	a5 9f       	mul	r26, r21
    10fc:	90 0d       	add	r25, r0
    10fe:	b4 9f       	mul	r27, r20
    1100:	90 0d       	add	r25, r0
    1102:	a4 9f       	mul	r26, r20
    1104:	80 0d       	add	r24, r0
    1106:	91 1d       	adc	r25, r1
    1108:	11 24       	eor	r1, r1
    110a:	08 95       	ret

0000110c <__mulshisi3>:
    110c:	b7 ff       	sbrs	r27, 7
    110e:	0c 94 7b 08 	jmp	0x10f6	; 0x10f6 <__muluhisi3>

00001112 <__mulohisi3>:
    1112:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__muluhisi3>
    1116:	82 1b       	sub	r24, r18
    1118:	93 0b       	sbc	r25, r19
    111a:	08 95       	ret

0000111c <__prologue_saves__>:
    111c:	2f 92       	push	r2
    111e:	3f 92       	push	r3
    1120:	4f 92       	push	r4
    1122:	5f 92       	push	r5
    1124:	6f 92       	push	r6
    1126:	7f 92       	push	r7
    1128:	8f 92       	push	r8
    112a:	9f 92       	push	r9
    112c:	af 92       	push	r10
    112e:	bf 92       	push	r11
    1130:	cf 92       	push	r12
    1132:	df 92       	push	r13
    1134:	ef 92       	push	r14
    1136:	ff 92       	push	r15
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	ca 1b       	sub	r28, r26
    1146:	db 0b       	sbc	r29, r27
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
    1152:	09 94       	ijmp

00001154 <__epilogue_restores__>:
    1154:	2a 88       	ldd	r2, Y+18	; 0x12
    1156:	39 88       	ldd	r3, Y+17	; 0x11
    1158:	48 88       	ldd	r4, Y+16	; 0x10
    115a:	5f 84       	ldd	r5, Y+15	; 0x0f
    115c:	6e 84       	ldd	r6, Y+14	; 0x0e
    115e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1160:	8c 84       	ldd	r8, Y+12	; 0x0c
    1162:	9b 84       	ldd	r9, Y+11	; 0x0b
    1164:	aa 84       	ldd	r10, Y+10	; 0x0a
    1166:	b9 84       	ldd	r11, Y+9	; 0x09
    1168:	c8 84       	ldd	r12, Y+8	; 0x08
    116a:	df 80       	ldd	r13, Y+7	; 0x07
    116c:	ee 80       	ldd	r14, Y+6	; 0x06
    116e:	fd 80       	ldd	r15, Y+5	; 0x05
    1170:	0c 81       	ldd	r16, Y+4	; 0x04
    1172:	1b 81       	ldd	r17, Y+3	; 0x03
    1174:	aa 81       	ldd	r26, Y+2	; 0x02
    1176:	b9 81       	ldd	r27, Y+1	; 0x01
    1178:	ce 0f       	add	r28, r30
    117a:	d1 1d       	adc	r29, r1
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	f8 94       	cli
    1180:	de bf       	out	0x3e, r29	; 62
    1182:	0f be       	out	0x3f, r0	; 63
    1184:	cd bf       	out	0x3d, r28	; 61
    1186:	ed 01       	movw	r28, r26
    1188:	08 95       	ret

0000118a <__udivmodsi4>:
    118a:	a1 e2       	ldi	r26, 0x21	; 33
    118c:	1a 2e       	mov	r1, r26
    118e:	aa 1b       	sub	r26, r26
    1190:	bb 1b       	sub	r27, r27
    1192:	fd 01       	movw	r30, r26
    1194:	0d c0       	rjmp	.+26     	; 0x11b0 <__udivmodsi4_ep>

00001196 <__udivmodsi4_loop>:
    1196:	aa 1f       	adc	r26, r26
    1198:	bb 1f       	adc	r27, r27
    119a:	ee 1f       	adc	r30, r30
    119c:	ff 1f       	adc	r31, r31
    119e:	a2 17       	cp	r26, r18
    11a0:	b3 07       	cpc	r27, r19
    11a2:	e4 07       	cpc	r30, r20
    11a4:	f5 07       	cpc	r31, r21
    11a6:	20 f0       	brcs	.+8      	; 0x11b0 <__udivmodsi4_ep>
    11a8:	a2 1b       	sub	r26, r18
    11aa:	b3 0b       	sbc	r27, r19
    11ac:	e4 0b       	sbc	r30, r20
    11ae:	f5 0b       	sbc	r31, r21

000011b0 <__udivmodsi4_ep>:
    11b0:	66 1f       	adc	r22, r22
    11b2:	77 1f       	adc	r23, r23
    11b4:	88 1f       	adc	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	1a 94       	dec	r1
    11ba:	69 f7       	brne	.-38     	; 0x1196 <__udivmodsi4_loop>
    11bc:	60 95       	com	r22
    11be:	70 95       	com	r23
    11c0:	80 95       	com	r24
    11c2:	90 95       	com	r25
    11c4:	9b 01       	movw	r18, r22
    11c6:	ac 01       	movw	r20, r24
    11c8:	bd 01       	movw	r22, r26
    11ca:	cf 01       	movw	r24, r30
    11cc:	08 95       	ret

000011ce <__umulhisi3>:
    11ce:	a2 9f       	mul	r26, r18
    11d0:	b0 01       	movw	r22, r0
    11d2:	b3 9f       	mul	r27, r19
    11d4:	c0 01       	movw	r24, r0
    11d6:	a3 9f       	mul	r26, r19
    11d8:	70 0d       	add	r23, r0
    11da:	81 1d       	adc	r24, r1
    11dc:	11 24       	eor	r1, r1
    11de:	91 1d       	adc	r25, r1
    11e0:	b2 9f       	mul	r27, r18
    11e2:	70 0d       	add	r23, r0
    11e4:	81 1d       	adc	r24, r1
    11e6:	11 24       	eor	r1, r1
    11e8:	91 1d       	adc	r25, r1
    11ea:	08 95       	ret

000011ec <_exit>:
    11ec:	f8 94       	cli

000011ee <__stop_program>:
    11ee:	ff cf       	rjmp	.-2      	; 0x11ee <__stop_program>
