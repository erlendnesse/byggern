
uart-driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ba  00800100  00001548  000015dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001548  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002ba  008002ba  00001796  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001796  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000180d  00000000  00000000  000019b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cbc  00000000  00000000  000031c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c87  00000000  00000000  00003e81  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a8  00000000  00000000  00004b08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000697  00000000  00000000  00004eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ac5  00000000  00000000  00005547  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  0000600c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a2 02 	jmp	0x544	; 0x544 <__ctors_end>
       4:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
       8:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
       c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      10:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      14:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      18:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      1c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      20:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      24:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      28:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      2c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      30:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      34:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      38:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      3c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      40:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      44:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      48:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      4c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      50:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      54:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      58:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      5c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      60:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      64:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      68:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>
      6c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 5f       	subi	r16, 0xF0	; 240
      78:	00 00       	nop
      7a:	00 07       	cpc	r16, r16
      7c:	00 07       	cpc	r16, r16
      7e:	00 14       	cp	r0, r0
      80:	7f 14       	cp	r7, r15
      82:	7f 14       	cp	r7, r15
      84:	24 2a       	or	r2, r20
      86:	7f 2a       	or	r7, r31
      88:	12 23       	and	r17, r18
      8a:	13 08       	sbc	r1, r3
      8c:	64 62       	ori	r22, 0x24	; 36
      8e:	36 49       	sbci	r19, 0x96	; 150
      90:	55 22       	and	r5, r21
      92:	50 00       	.word	0x0050	; ????
      94:	05 03       	mulsu	r16, r21
      96:	00 00       	nop
      98:	00 1c       	adc	r0, r0
      9a:	22 41       	sbci	r18, 0x12	; 18
      9c:	00 00       	nop
      9e:	41 22       	and	r4, r17
      a0:	1c 00       	.word	0x001c	; ????
      a2:	08 2a       	or	r0, r24
      a4:	1c 2a       	or	r1, r28
      a6:	08 08       	sbc	r0, r8
      a8:	08 3e       	cpi	r16, 0xE8	; 232
      aa:	08 08       	sbc	r0, r8
      ac:	00 50       	subi	r16, 0x00	; 0
      ae:	30 00       	.word	0x0030	; ????
      b0:	00 08       	sbc	r0, r0
      b2:	08 08       	sbc	r0, r8
      b4:	08 08       	sbc	r0, r8
      b6:	00 60       	ori	r16, 0x00	; 0
      b8:	60 00       	.word	0x0060	; ????
      ba:	00 20       	and	r0, r0
      bc:	10 08       	sbc	r1, r0
      be:	04 02       	muls	r16, r20
      c0:	3e 51       	subi	r19, 0x1E	; 30
      c2:	49 45       	sbci	r20, 0x59	; 89
      c4:	3e 00       	.word	0x003e	; ????
      c6:	42 7f       	andi	r20, 0xF2	; 242
      c8:	40 00       	.word	0x0040	; ????
      ca:	42 61       	ori	r20, 0x12	; 18
      cc:	51 49       	sbci	r21, 0x91	; 145
      ce:	46 21       	and	r20, r6
      d0:	41 45       	sbci	r20, 0x51	; 81
      d2:	4b 31       	cpi	r20, 0x1B	; 27
      d4:	18 14       	cp	r1, r8
      d6:	12 7f       	andi	r17, 0xF2	; 242
      d8:	10 27       	eor	r17, r16
      da:	45 45       	sbci	r20, 0x55	; 85
      dc:	45 39       	cpi	r20, 0x95	; 149
      de:	3c 4a       	sbci	r19, 0xAC	; 172
      e0:	49 49       	sbci	r20, 0x99	; 153
      e2:	30 01       	movw	r6, r0
      e4:	71 09       	sbc	r23, r1
      e6:	05 03       	mulsu	r16, r21
      e8:	36 49       	sbci	r19, 0x96	; 150
      ea:	49 49       	sbci	r20, 0x99	; 153
      ec:	36 06       	cpc	r3, r22
      ee:	49 49       	sbci	r20, 0x99	; 153
      f0:	29 1e       	adc	r2, r25
      f2:	00 36       	cpi	r16, 0x60	; 96
      f4:	36 00       	.word	0x0036	; ????
      f6:	00 00       	nop
      f8:	56 36       	cpi	r21, 0x66	; 102
      fa:	00 00       	nop
      fc:	00 08       	sbc	r0, r0
      fe:	14 22       	and	r1, r20
     100:	41 14       	cp	r4, r1
     102:	14 14       	cp	r1, r4
     104:	14 14       	cp	r1, r4
     106:	41 22       	and	r4, r17
     108:	14 08       	sbc	r1, r4
     10a:	00 02       	muls	r16, r16
     10c:	01 51       	subi	r16, 0x11	; 17
     10e:	09 06       	cpc	r0, r25
     110:	32 49       	sbci	r19, 0x92	; 146
     112:	79 41       	sbci	r23, 0x19	; 25
     114:	3e 7e       	andi	r19, 0xEE	; 238
     116:	11 11       	cpse	r17, r1
     118:	11 7e       	andi	r17, 0xE1	; 225
     11a:	7f 49       	sbci	r23, 0x9F	; 159
     11c:	49 49       	sbci	r20, 0x99	; 153
     11e:	36 3e       	cpi	r19, 0xE6	; 230
     120:	41 41       	sbci	r20, 0x11	; 17
     122:	41 22       	and	r4, r17
     124:	7f 41       	sbci	r23, 0x1F	; 31
     126:	41 22       	and	r4, r17
     128:	1c 7f       	andi	r17, 0xFC	; 252
     12a:	49 49       	sbci	r20, 0x99	; 153
     12c:	49 41       	sbci	r20, 0x19	; 25
     12e:	7f 09       	sbc	r23, r15
     130:	09 01       	movw	r0, r18
     132:	01 3e       	cpi	r16, 0xE1	; 225
     134:	41 41       	sbci	r20, 0x11	; 17
     136:	51 32       	cpi	r21, 0x21	; 33
     138:	7f 08       	sbc	r7, r15
     13a:	08 08       	sbc	r0, r8
     13c:	7f 00       	.word	0x007f	; ????
     13e:	41 7f       	andi	r20, 0xF1	; 241
     140:	41 00       	.word	0x0041	; ????
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	41 3f       	cpi	r20, 0xF1	; 241
     146:	01 7f       	andi	r16, 0xF1	; 241
     148:	08 14       	cp	r0, r8
     14a:	22 41       	sbci	r18, 0x12	; 18
     14c:	7f 40       	sbci	r23, 0x0F	; 15
     14e:	40 40       	sbci	r20, 0x00	; 0
     150:	40 7f       	andi	r20, 0xF0	; 240
     152:	02 04       	cpc	r0, r2
     154:	02 7f       	andi	r16, 0xF2	; 242
     156:	7f 04       	cpc	r7, r15
     158:	08 10       	cpse	r0, r8
     15a:	7f 3e       	cpi	r23, 0xEF	; 239
     15c:	41 41       	sbci	r20, 0x11	; 17
     15e:	41 3e       	cpi	r20, 0xE1	; 225
     160:	7f 09       	sbc	r23, r15
     162:	09 09       	sbc	r16, r9
     164:	06 3e       	cpi	r16, 0xE6	; 230
     166:	41 51       	subi	r20, 0x11	; 17
     168:	21 5e       	subi	r18, 0xE1	; 225
     16a:	7f 09       	sbc	r23, r15
     16c:	19 29       	or	r17, r9
     16e:	46 46       	sbci	r20, 0x66	; 102
     170:	49 49       	sbci	r20, 0x99	; 153
     172:	49 31       	cpi	r20, 0x19	; 25
     174:	01 01       	movw	r0, r2
     176:	7f 01       	movw	r14, r30
     178:	01 3f       	cpi	r16, 0xF1	; 241
     17a:	40 40       	sbci	r20, 0x00	; 0
     17c:	40 3f       	cpi	r20, 0xF0	; 240
     17e:	1f 20       	and	r1, r15
     180:	40 20       	and	r4, r0
     182:	1f 7f       	andi	r17, 0xFF	; 255
     184:	20 18       	sub	r2, r0
     186:	20 7f       	andi	r18, 0xF0	; 240
     188:	63 14       	cp	r6, r3
     18a:	08 14       	cp	r0, r8
     18c:	63 03       	mulsu	r22, r19
     18e:	04 78       	andi	r16, 0x84	; 132
     190:	04 03       	mulsu	r16, r20
     192:	61 51       	subi	r22, 0x11	; 17
     194:	49 45       	sbci	r20, 0x59	; 89
     196:	43 00       	.word	0x0043	; ????
     198:	00 7f       	andi	r16, 0xF0	; 240
     19a:	41 41       	sbci	r20, 0x11	; 17
     19c:	02 04       	cpc	r0, r2
     19e:	08 10       	cpse	r0, r8
     1a0:	20 41       	sbci	r18, 0x10	; 16
     1a2:	41 7f       	andi	r20, 0xF1	; 241
     1a4:	00 00       	nop
     1a6:	04 02       	muls	r16, r20
     1a8:	01 02       	muls	r16, r17
     1aa:	04 40       	sbci	r16, 0x04	; 4
     1ac:	40 40       	sbci	r20, 0x00	; 0
     1ae:	40 40       	sbci	r20, 0x00	; 0
     1b0:	00 01       	movw	r0, r0
     1b2:	02 04       	cpc	r0, r2
     1b4:	00 20       	and	r0, r0
     1b6:	54 54       	subi	r21, 0x44	; 68
     1b8:	54 78       	andi	r21, 0x84	; 132
     1ba:	7f 48       	sbci	r23, 0x8F	; 143
     1bc:	44 44       	sbci	r20, 0x44	; 68
     1be:	38 38       	cpi	r19, 0x88	; 136
     1c0:	44 44       	sbci	r20, 0x44	; 68
     1c2:	44 20       	and	r4, r4
     1c4:	38 44       	sbci	r19, 0x48	; 72
     1c6:	44 48       	sbci	r20, 0x84	; 132
     1c8:	7f 38       	cpi	r23, 0x8F	; 143
     1ca:	54 54       	subi	r21, 0x44	; 68
     1cc:	54 18       	sub	r5, r4
     1ce:	08 7e       	andi	r16, 0xE8	; 232
     1d0:	09 01       	movw	r0, r18
     1d2:	02 08       	sbc	r0, r2
     1d4:	14 54       	subi	r17, 0x44	; 68
     1d6:	54 3c       	cpi	r21, 0xC4	; 196
     1d8:	7f 08       	sbc	r7, r15
     1da:	04 04       	cpc	r0, r4
     1dc:	78 00       	.word	0x0078	; ????
     1de:	44 7d       	andi	r20, 0xD4	; 212
     1e0:	40 00       	.word	0x0040	; ????
     1e2:	20 40       	sbci	r18, 0x00	; 0
     1e4:	44 3d       	cpi	r20, 0xD4	; 212
     1e6:	00 00       	nop
     1e8:	7f 10       	cpse	r7, r15
     1ea:	28 44       	sbci	r18, 0x48	; 72
     1ec:	00 41       	sbci	r16, 0x10	; 16
     1ee:	7f 40       	sbci	r23, 0x0F	; 15
     1f0:	00 7c       	andi	r16, 0xC0	; 192
     1f2:	04 18       	sub	r0, r4
     1f4:	04 78       	andi	r16, 0x84	; 132
     1f6:	7c 08       	sbc	r7, r12
     1f8:	04 04       	cpc	r0, r4
     1fa:	78 38       	cpi	r23, 0x88	; 136
     1fc:	44 44       	sbci	r20, 0x44	; 68
     1fe:	44 38       	cpi	r20, 0x84	; 132
     200:	7c 14       	cp	r7, r12
     202:	14 14       	cp	r1, r4
     204:	08 08       	sbc	r0, r8
     206:	14 14       	cp	r1, r4
     208:	18 7c       	andi	r17, 0xC8	; 200
     20a:	7c 08       	sbc	r7, r12
     20c:	04 04       	cpc	r0, r4
     20e:	08 48       	sbci	r16, 0x88	; 136
     210:	54 54       	subi	r21, 0x44	; 68
     212:	54 20       	and	r5, r4
     214:	04 3f       	cpi	r16, 0xF4	; 244
     216:	44 40       	sbci	r20, 0x04	; 4
     218:	20 3c       	cpi	r18, 0xC0	; 192
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	20 7c       	andi	r18, 0xC0	; 192
     21e:	1c 20       	and	r1, r12
     220:	40 20       	and	r4, r0
     222:	1c 3c       	cpi	r17, 0xCC	; 204
     224:	40 30       	cpi	r20, 0x00	; 0
     226:	40 3c       	cpi	r20, 0xC0	; 192
     228:	44 28       	or	r4, r4
     22a:	10 28       	or	r1, r0
     22c:	44 0c       	add	r4, r4
     22e:	50 50       	subi	r21, 0x00	; 0
     230:	50 3c       	cpi	r21, 0xC0	; 192
     232:	44 64       	ori	r20, 0x44	; 68
     234:	54 4c       	sbci	r21, 0xC4	; 196
     236:	44 00       	.word	0x0044	; ????
     238:	08 36       	cpi	r16, 0x68	; 104
     23a:	41 00       	.word	0x0041	; ????
     23c:	00 00       	nop
     23e:	7f 00       	.word	0x007f	; ????
     240:	00 00       	nop
     242:	41 36       	cpi	r20, 0x61	; 97
     244:	08 00       	.word	0x0008	; ????
     246:	02 01       	movw	r0, r4
     248:	03 02       	muls	r16, r19
     24a:	01 00       	Address 0x0000024a is out of bounds.
.word	0xffff	; ????

0000024b <font8>:
	...
     253:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     263:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     273:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     283:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     293:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     2a3:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     2b3:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     2c3:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     2d3:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     2e3:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     2f3:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     303:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     313:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     323:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     333:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     343:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     353:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     363:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     373:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     383:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     393:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     3a3:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     3b3:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     3c3:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     3d3:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     3e3:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     3f3:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     403:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     413:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     423:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     433:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     443:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     453:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     463:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     473:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     483:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     493:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     4a3:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     4b3:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     4c3:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     4d3:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     4e3:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     4f3:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     503:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     513:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     523:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     533:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

00000544 <__ctors_end>:
     544:	11 24       	eor	r1, r1
     546:	1f be       	out	0x3f, r1	; 63
     548:	cf ef       	ldi	r28, 0xFF	; 255
     54a:	d4 e0       	ldi	r29, 0x04	; 4
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	cd bf       	out	0x3d, r28	; 61

00000550 <__do_copy_data>:
     550:	12 e0       	ldi	r17, 0x02	; 2
     552:	a0 e0       	ldi	r26, 0x00	; 0
     554:	b1 e0       	ldi	r27, 0x01	; 1
     556:	e8 e4       	ldi	r30, 0x48	; 72
     558:	f5 e1       	ldi	r31, 0x15	; 21
     55a:	02 c0       	rjmp	.+4      	; 0x560 <__do_copy_data+0x10>
     55c:	05 90       	lpm	r0, Z+
     55e:	0d 92       	st	X+, r0
     560:	aa 3b       	cpi	r26, 0xBA	; 186
     562:	b1 07       	cpc	r27, r17
     564:	d9 f7       	brne	.-10     	; 0x55c <__do_copy_data+0xc>

00000566 <__do_clear_bss>:
     566:	22 e0       	ldi	r18, 0x02	; 2
     568:	aa eb       	ldi	r26, 0xBA	; 186
     56a:	b2 e0       	ldi	r27, 0x02	; 2
     56c:	01 c0       	rjmp	.+2      	; 0x570 <.do_clear_bss_start>

0000056e <.do_clear_bss_loop>:
     56e:	1d 92       	st	X+, r1

00000570 <.do_clear_bss_start>:
     570:	a4 3c       	cpi	r26, 0xC4	; 196
     572:	b2 07       	cpc	r27, r18
     574:	e1 f7       	brne	.-8      	; 0x56e <.do_clear_bss_loop>
     576:	0e 94 04 03 	call	0x608	; 0x608 <main>
     57a:	0c 94 a2 0a 	jmp	0x1544	; 0x1544 <_exit>

0000057e <__bad_interrupt>:
     57e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000582 <adc_init>:
	//TCCR3A |= (1 << WGM31);
	//TCCR3A |= (1 << WGM30);

void adc_init() {
	//All code in function inits pwm
	OCR3A = 0x02;
     582:	82 e0       	ldi	r24, 0x02	; 2
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     58a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	DDRD |= (1 << PD4);
     58e:	81 b3       	in	r24, 0x11	; 17
     590:	80 61       	ori	r24, 0x10	; 16
     592:	81 bb       	out	0x11, r24	; 17
	//TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
	TCCR3B |= (1 << WGM32); //Setting CTC
     594:	ea e8       	ldi	r30, 0x8A	; 138
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	88 60       	ori	r24, 0x08	; 8
     59c:	80 83       	st	Z, r24
	TCCR3A |= (1 << COM3A0); //Clear OC3A on Compare Match, set OC3A at TOP. or toggle or smth.
     59e:	ab e8       	ldi	r26, 0x8B	; 139
     5a0:	b0 e0       	ldi	r27, 0x00	; 0
     5a2:	8c 91       	ld	r24, X
     5a4:	80 64       	ori	r24, 0x40	; 64
     5a6:	8c 93       	st	X, r24
	TCCR3B |= (1 << CS30);
     5a8:	80 81       	ld	r24, Z
     5aa:	81 60       	ori	r24, 0x01	; 1
     5ac:	80 83       	st	Z, r24
	printf("-PWM init-\n");
     5ae:	8a e0       	ldi	r24, 0x0A	; 10
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	0e 94 03 06 	call	0xc06	; 0xc06 <puts>
     5b6:	08 95       	ret

000005b8 <adc_read>:
}

uint8_t adc_read(uint8_t channel) {
	volatile uint8_t *ADC = (uint8_t*)0x1401;
	*ADC = 1;
     5b8:	e1 e0       	ldi	r30, 0x01	; 1
     5ba:	f4 e1       	ldi	r31, 0x14	; 20
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	90 83       	st	Z, r25
	
	int ch0 = *ADC;
     5c0:	20 81       	ld	r18, Z
	int ch1 = *ADC;
     5c2:	90 81       	ld	r25, Z
	int ch2 = *ADC;
     5c4:	40 81       	ld	r20, Z
	int ch3 = *ADC;
     5c6:	30 81       	ld	r19, Z
	
	switch(channel) {
     5c8:	81 30       	cpi	r24, 0x01	; 1
     5ca:	c1 f0       	breq	.+48     	; 0x5fc <adc_read+0x44>
     5cc:	b0 f0       	brcs	.+44     	; 0x5fa <adc_read+0x42>
     5ce:	82 30       	cpi	r24, 0x02	; 2
     5d0:	19 f0       	breq	.+6      	; 0x5d8 <adc_read+0x20>
     5d2:	83 30       	cpi	r24, 0x03	; 3
     5d4:	19 f0       	breq	.+6      	; 0x5dc <adc_read+0x24>
     5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <adc_read+0x28>
		case 0:
			return ch0;
		case 1:
			return ch1;
		case 2:
			return ch2;
     5d8:	94 2f       	mov	r25, r20
     5da:	10 c0       	rjmp	.+32     	; 0x5fc <adc_read+0x44>
		case 3:
			return ch3;
     5dc:	93 2f       	mov	r25, r19
     5de:	0e c0       	rjmp	.+28     	; 0x5fc <adc_read+0x44>
		default:
			printf("Channel not found, arg given: %d", channel);
     5e0:	1f 92       	push	r1
     5e2:	8f 93       	push	r24
     5e4:	85 e1       	ldi	r24, 0x15	; 21
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	9f 93       	push	r25
     5ea:	8f 93       	push	r24
     5ec:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
			break;

	}
}
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	08 95       	ret
	int ch2 = *ADC;
	int ch3 = *ADC;
	
	switch(channel) {
		case 0:
			return ch0;
     5fa:	92 2f       	mov	r25, r18
     5fc:	89 2f       	mov	r24, r25
		default:
			printf("Channel not found, arg given: %d", channel);
			break;

	}
}
     5fe:	08 95       	ret

00000600 <joystick_init>:
#include "joystick.h"
#include "adc.h"
#include <avr/io.h>

void joystick_init(){
	PORTD |= (1 << PD5); //setup pullup for PD5 which is button input from Joystick
     600:	82 b3       	in	r24, 0x12	; 18
     602:	80 62       	ori	r24, 0x20	; 32
     604:	82 bb       	out	0x12, r24	; 18
     606:	08 95       	ret

00000608 <main>:
	// Set main sleep time
	//int sleep_time = 1000;
    //_delay_ms(sleep_time);
	
	// Initialize functions
	usart_init(MYUBRR);
     608:	8f e1       	ldi	r24, 0x1F	; 31
     60a:	0e 94 2e 05 	call	0xa5c	; 0xa5c <usart_init>
	xmem_init();
     60e:	0e 94 3b 05 	call	0xa76	; 0xa76 <xmem_init>
	adc_init();
     612:	0e 94 c1 02 	call	0x582	; 0x582 <adc_init>
	joystick_init();
     616:	0e 94 00 03 	call	0x600	; 0x600 <joystick_init>
	oled_init();
     61a:	0e 94 91 03 	call	0x722	; 0x722 <oled_init>
	
	// Test SRAM functionality
	if (SRAM_test()) {
     61e:	0e 94 9d 04 	call	0x93a	; 0x93a <SRAM_test>
     622:	89 2b       	or	r24, r25
     624:	09 f5       	brne	.+66     	; 0x668 <main+0x60>
		printf("SRAM test failed\r\n");
		return 0;
	}
	// MAIN LOOP
    while (1) {
		printf("leftslide : %d\t", adc_read(2));
     626:	82 e0       	ldi	r24, 0x02	; 2
     628:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <adc_read>
     62c:	1f 92       	push	r1
     62e:	8f 93       	push	r24
     630:	88 e4       	ldi	r24, 0x48	; 72
     632:	91 e0       	ldi	r25, 0x01	; 1
     634:	9f 93       	push	r25
     636:	8f 93       	push	r24
     638:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
		printf("rightslide : %d\r\n",adc_read(3));
     63c:	83 e0       	ldi	r24, 0x03	; 3
     63e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <adc_read>
     642:	1f 92       	push	r1
     644:	8f 93       	push	r24
     646:	88 e5       	ldi	r24, 0x58	; 88
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	9f 93       	push	r25
     64c:	8f 93       	push	r24
     64e:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
		//_delay_ms(sleep_time);
		oled_set_home();
     652:	0e 94 4c 04 	call	0x898	; 0x898 <oled_set_home>
     656:	8d b7       	in	r24, 0x3d	; 61
     658:	9e b7       	in	r25, 0x3e	; 62
     65a:	08 96       	adiw	r24, 0x08	; 8
     65c:	0f b6       	in	r0, 0x3f	; 63
     65e:	f8 94       	cli
     660:	9e bf       	out	0x3e, r25	; 62
     662:	0f be       	out	0x3f, r0	; 63
     664:	8d bf       	out	0x3d, r24	; 61
     666:	df cf       	rjmp	.-66     	; 0x626 <main+0x1e>
	joystick_init();
	oled_init();
	
	// Test SRAM functionality
	if (SRAM_test()) {
		printf("SRAM test failed\r\n");
     668:	86 e3       	ldi	r24, 0x36	; 54
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	0e 94 03 06 	call	0xc06	; 0xc06 <puts>
		

	}

	return 0;
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	08 95       	ret

00000676 <write_command>:
	int i = 0;
	while (string[i] != '\0') {
		oled_print_char_small(string[i]);
		++i;
	}
}
     676:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd3c>
     67a:	08 95       	ret

0000067c <oled_goto_column>:
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	80 38       	cpi	r24, 0x80	; 128
     682:	91 05       	cpc	r25, r1
     684:	90 f4       	brcc	.+36     	; 0x6aa <oled_goto_column+0x2e>
     686:	ec 01       	movw	r28, r24
     688:	8f 70       	andi	r24, 0x0F	; 15
     68a:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     68e:	ce 01       	movw	r24, r28
     690:	80 7f       	andi	r24, 0xF0	; 240
     692:	99 27       	eor	r25, r25
     694:	95 95       	asr	r25
     696:	87 95       	ror	r24
     698:	95 95       	asr	r25
     69a:	87 95       	ror	r24
     69c:	95 95       	asr	r25
     69e:	87 95       	ror	r24
     6a0:	95 95       	asr	r25
     6a2:	87 95       	ror	r24
     6a4:	80 5f       	subi	r24, 0xF0	; 240
     6a6:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <oled_goto_page>:
     6b0:	28 2f       	mov	r18, r24
     6b2:	39 2f       	mov	r19, r25
     6b4:	28 30       	cpi	r18, 0x08	; 8
     6b6:	31 05       	cpc	r19, r1
     6b8:	18 f4       	brcc	.+6      	; 0x6c0 <oled_goto_page+0x10>
     6ba:	80 55       	subi	r24, 0x50	; 80
     6bc:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     6c0:	08 95       	ret

000006c2 <oled_set_position>:
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
     6c6:	eb 01       	movw	r28, r22
     6c8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <oled_goto_page>
     6cc:	ce 01       	movw	r24, r28
     6ce:	0e 94 3e 03 	call	0x67c	; 0x67c <oled_goto_column>
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	08 95       	ret

000006d8 <write_data>:
     6d8:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf3c>
     6dc:	08 95       	ret

000006de <oled_reset>:
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 e0       	ldi	r16, 0x00	; 0
     6e8:	10 e0       	ldi	r17, 0x00	; 0
     6ea:	13 c0       	rjmp	.+38     	; 0x712 <oled_reset+0x34>
     6ec:	c8 01       	movw	r24, r16
     6ee:	0e 94 58 03 	call	0x6b0	; 0x6b0 <oled_goto_page>
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	0e 94 3e 03 	call	0x67c	; 0x67c <oled_goto_column>
     6fa:	c0 e0       	ldi	r28, 0x00	; 0
     6fc:	d0 e0       	ldi	r29, 0x00	; 0
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <oled_reset+0x2a>
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <write_data>
     706:	21 96       	adiw	r28, 0x01	; 1
     708:	c0 38       	cpi	r28, 0x80	; 128
     70a:	d1 05       	cpc	r29, r1
     70c:	cc f3       	brlt	.-14     	; 0x700 <oled_reset+0x22>
     70e:	0f 5f       	subi	r16, 0xFF	; 255
     710:	1f 4f       	sbci	r17, 0xFF	; 255
     712:	08 30       	cpi	r16, 0x08	; 8
     714:	11 05       	cpc	r17, r1
     716:	54 f3       	brlt	.-44     	; 0x6ec <oled_reset+0xe>
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	08 95       	ret

00000722 <oled_init>:
     722:	8e ea       	ldi	r24, 0xAE	; 174
     724:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     728:	81 ea       	ldi	r24, 0xA1	; 161
     72a:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     72e:	8a ed       	ldi	r24, 0xDA	; 218
     730:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     734:	82 e1       	ldi	r24, 0x12	; 18
     736:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     73a:	88 ec       	ldi	r24, 0xC8	; 200
     73c:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     740:	88 ea       	ldi	r24, 0xA8	; 168
     742:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     746:	8f e3       	ldi	r24, 0x3F	; 63
     748:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     74c:	85 ed       	ldi	r24, 0xD5	; 213
     74e:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     752:	80 e8       	ldi	r24, 0x80	; 128
     754:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     758:	81 e8       	ldi	r24, 0x81	; 129
     75a:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     75e:	80 e5       	ldi	r24, 0x50	; 80
     760:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     764:	89 ed       	ldi	r24, 0xD9	; 217
     766:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     76a:	81 e2       	ldi	r24, 0x21	; 33
     76c:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     770:	80 e2       	ldi	r24, 0x20	; 32
     772:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     776:	82 e0       	ldi	r24, 0x02	; 2
     778:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     77c:	8b ed       	ldi	r24, 0xDB	; 219
     77e:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     782:	80 e3       	ldi	r24, 0x30	; 48
     784:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     788:	8d ea       	ldi	r24, 0xAD	; 173
     78a:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     794:	84 ea       	ldi	r24, 0xA4	; 164
     796:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     79a:	86 ea       	ldi	r24, 0xA6	; 166
     79c:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     7a0:	8f ea       	ldi	r24, 0xAF	; 175
     7a2:	0e 94 3b 03 	call	0x676	; 0x676 <write_command>
     7a6:	0e 94 6f 03 	call	0x6de	; 0x6de <oled_reset>
     7aa:	08 95       	ret

000007ac <oled_print_char_large>:
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	90 ee       	ldi	r25, 0xE0	; 224
     7b4:	98 0f       	add	r25, r24
     7b6:	9f 35       	cpi	r25, 0x5F	; 95
     7b8:	98 f0       	brcs	.+38     	; 0x7e0 <oled_print_char_large+0x34>
     7ba:	18 c0       	rjmp	.+48     	; 0x7ec <oled_print_char_large+0x40>
     7bc:	e1 2f       	mov	r30, r17
     7be:	f0 e0       	ldi	r31, 0x00	; 0
     7c0:	b0 97       	sbiw	r30, 0x20	; 32
     7c2:	ee 0f       	add	r30, r30
     7c4:	ff 1f       	adc	r31, r31
     7c6:	ee 0f       	add	r30, r30
     7c8:	ff 1f       	adc	r31, r31
     7ca:	ee 0f       	add	r30, r30
     7cc:	ff 1f       	adc	r31, r31
     7ce:	ec 0f       	add	r30, r28
     7d0:	fd 1f       	adc	r31, r29
     7d2:	e5 5b       	subi	r30, 0xB5	; 181
     7d4:	fd 4f       	sbci	r31, 0xFD	; 253
     7d6:	84 91       	lpm	r24, Z
     7d8:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <write_data>
     7dc:	21 96       	adiw	r28, 0x01	; 1
     7de:	03 c0       	rjmp	.+6      	; 0x7e6 <oled_print_char_large+0x3a>
     7e0:	18 2f       	mov	r17, r24
     7e2:	c0 e0       	ldi	r28, 0x00	; 0
     7e4:	d0 e0       	ldi	r29, 0x00	; 0
     7e6:	c8 30       	cpi	r28, 0x08	; 8
     7e8:	d1 05       	cpc	r29, r1
     7ea:	44 f3       	brlt	.-48     	; 0x7bc <oled_print_char_large+0x10>
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	1f 91       	pop	r17
     7f2:	08 95       	ret

000007f4 <oled_print_char_normal>:
     7f4:	1f 93       	push	r17
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
     7fa:	90 ee       	ldi	r25, 0xE0	; 224
     7fc:	98 0f       	add	r25, r24
     7fe:	9f 35       	cpi	r25, 0x5F	; 95
     800:	a8 f0       	brcs	.+42     	; 0x82c <oled_print_char_normal+0x38>
     802:	1a c0       	rjmp	.+52     	; 0x838 <oled_print_char_normal+0x44>
     804:	21 2f       	mov	r18, r17
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	20 52       	subi	r18, 0x20	; 32
     80a:	31 09       	sbc	r19, r1
     80c:	f9 01       	movw	r30, r18
     80e:	ee 0f       	add	r30, r30
     810:	ff 1f       	adc	r31, r31
     812:	ee 0f       	add	r30, r30
     814:	ff 1f       	adc	r31, r31
     816:	e2 0f       	add	r30, r18
     818:	f3 1f       	adc	r31, r19
     81a:	ec 0f       	add	r30, r28
     81c:	fd 1f       	adc	r31, r29
     81e:	e0 59       	subi	r30, 0x90	; 144
     820:	ff 4f       	sbci	r31, 0xFF	; 255
     822:	84 91       	lpm	r24, Z
     824:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <write_data>
     828:	21 96       	adiw	r28, 0x01	; 1
     82a:	03 c0       	rjmp	.+6      	; 0x832 <oled_print_char_normal+0x3e>
     82c:	18 2f       	mov	r17, r24
     82e:	c0 e0       	ldi	r28, 0x00	; 0
     830:	d0 e0       	ldi	r29, 0x00	; 0
     832:	c5 30       	cpi	r28, 0x05	; 5
     834:	d1 05       	cpc	r29, r1
     836:	34 f3       	brlt	.-52     	; 0x804 <oled_print_char_normal+0x10>
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	1f 91       	pop	r17
     83e:	08 95       	ret

00000840 <oled_print_string_large>:
     840:	0f 93       	push	r16
     842:	1f 93       	push	r17
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	8c 01       	movw	r16, r24
     84a:	c0 e0       	ldi	r28, 0x00	; 0
     84c:	d0 e0       	ldi	r29, 0x00	; 0
     84e:	03 c0       	rjmp	.+6      	; 0x856 <oled_print_string_large+0x16>
     850:	0e 94 d6 03 	call	0x7ac	; 0x7ac <oled_print_char_large>
     854:	21 96       	adiw	r28, 0x01	; 1
     856:	f8 01       	movw	r30, r16
     858:	ec 0f       	add	r30, r28
     85a:	fd 1f       	adc	r31, r29
     85c:	80 81       	ld	r24, Z
     85e:	81 11       	cpse	r24, r1
     860:	f7 cf       	rjmp	.-18     	; 0x850 <oled_print_string_large+0x10>
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	08 95       	ret

0000086c <oled_print_string_normal>:
     86c:	0f 93       	push	r16
     86e:	1f 93       	push	r17
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	8c 01       	movw	r16, r24
     876:	c0 e0       	ldi	r28, 0x00	; 0
     878:	d0 e0       	ldi	r29, 0x00	; 0
     87a:	03 c0       	rjmp	.+6      	; 0x882 <oled_print_string_normal+0x16>
     87c:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <oled_print_char_normal>
     880:	21 96       	adiw	r28, 0x01	; 1
     882:	f8 01       	movw	r30, r16
     884:	ec 0f       	add	r30, r28
     886:	fd 1f       	adc	r31, r29
     888:	80 81       	ld	r24, Z
     88a:	81 11       	cpse	r24, r1
     88c:	f7 cf       	rjmp	.-18     	; 0x87c <oled_print_string_normal+0x10>
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	1f 91       	pop	r17
     894:	0f 91       	pop	r16
     896:	08 95       	ret

00000898 <oled_set_home>:
		.menu_index4 = " Select team",
		.menu_index5 = " Highscores",
		.menu_index6 = " Settings"
	};
	
	oled_set_position(0,1);
     898:	61 e0       	ldi	r22, 0x01	; 1
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	80 e0       	ldi	r24, 0x00	; 0
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_large("---MAIN MENU---");
     8a4:	8a e6       	ldi	r24, 0x6A	; 106
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	0e 94 20 04 	call	0x840	; 0x840 <oled_print_string_large>
	
	oled_set_position(1,1);
     8ac:	61 e0       	ldi	r22, 0x01	; 1
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index1);
     8b8:	8a e7       	ldi	r24, 0x7A	; 122
     8ba:	91 e0       	ldi	r25, 0x01	; 1
     8bc:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(2,1);
     8c0:	61 e0       	ldi	r22, 0x01	; 1
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	82 e0       	ldi	r24, 0x02	; 2
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index2);
     8cc:	80 e8       	ldi	r24, 0x80	; 128
     8ce:	91 e0       	ldi	r25, 0x01	; 1
     8d0:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(3,1);
     8d4:	61 e0       	ldi	r22, 0x01	; 1
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	83 e0       	ldi	r24, 0x03	; 3
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index3);
     8e0:	8a e8       	ldi	r24, 0x8A	; 138
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(4,1);
     8e8:	61 e0       	ldi	r22, 0x01	; 1
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	84 e0       	ldi	r24, 0x04	; 4
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index4);
     8f4:	84 e9       	ldi	r24, 0x94	; 148
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(5,1);
     8fc:	61 e0       	ldi	r22, 0x01	; 1
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	85 e0       	ldi	r24, 0x05	; 5
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index5);
     908:	81 ea       	ldi	r24, 0xA1	; 161
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(6,1);
     910:	61 e0       	ldi	r22, 0x01	; 1
     912:	70 e0       	ldi	r23, 0x00	; 0
     914:	86 e0       	ldi	r24, 0x06	; 6
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_normal(menu.menu_index6);
     91c:	8d ea       	ldi	r24, 0xAD	; 173
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 36 04 	call	0x86c	; 0x86c <oled_print_string_normal>
	
	oled_set_position(7,1);
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	87 e0       	ldi	r24, 0x07	; 7
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <oled_set_position>
	oled_print_string_large("<< Return");
     930:	87 eb       	ldi	r24, 0xB7	; 183
     932:	91 e0       	ldi	r25, 0x01	; 1
     934:	0e 94 20 04 	call	0x840	; 0x840 <oled_print_string_large>
     938:	08 95       	ret

0000093a <SRAM_test>:
#include "sram_test.h"

#include <stdlib.h>
#include <stdint.h>
int SRAM_test(void)
{
     93a:	ef 92       	push	r14
     93c:	ff 92       	push	r15
     93e:	0f 93       	push	r16
     940:	1f 93       	push	r17
     942:	cf 93       	push	r28
     944:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\r\n");
     946:	81 ec       	ldi	r24, 0xC1	; 193
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	0e 94 03 06 	call	0xc06	; 0xc06 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     94e:	0e 94 92 05 	call	0xb24	; 0xb24 <rand>
     952:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     954:	0e 94 97 05 	call	0xb2e	; 0xb2e <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     958:	c0 e0       	ldi	r28, 0x00	; 0
     95a:	d0 e0       	ldi	r29, 0x00	; 0
#include <stdint.h>
int SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
     95c:	00 e0       	ldi	r16, 0x00	; 0
     95e:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     960:	20 c0       	rjmp	.+64     	; 0x9a2 <SRAM_test+0x68>
		uint8_t some_value = rand();
     962:	0e 94 92 05 	call	0xb24	; 0xb24 <rand>
		ext_ram[i] = some_value;
     966:	fe 01       	movw	r30, r28
     968:	f8 5e       	subi	r31, 0xE8	; 232
     96a:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     96c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     96e:	28 17       	cp	r18, r24
     970:	b9 f0       	breq	.+46     	; 0x9a0 <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
     972:	99 27       	eor	r25, r25
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	1f 92       	push	r1
     97a:	2f 93       	push	r18
     97c:	df 93       	push	r29
     97e:	cf 93       	push	r28
     980:	88 ed       	ldi	r24, 0xD8	; 216
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	9f 93       	push	r25
     986:	8f 93       	push	r24
     988:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
			write_errors++;
     98c:	0f 5f       	subi	r16, 0xFF	; 255
     98e:	1f 4f       	sbci	r17, 0xFF	; 255
     990:	8d b7       	in	r24, 0x3d	; 61
     992:	9e b7       	in	r25, 0x3e	; 62
     994:	08 96       	adiw	r24, 0x08	; 8
     996:	0f b6       	in	r0, 0x3f	; 63
     998:	f8 94       	cli
     99a:	9e bf       	out	0x3e, r25	; 62
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9a0:	21 96       	adiw	r28, 0x01	; 1
     9a2:	c1 15       	cp	r28, r1
     9a4:	98 e0       	ldi	r25, 0x08	; 8
     9a6:	d9 07       	cpc	r29, r25
     9a8:	e0 f2       	brcs	.-72     	; 0x962 <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
     9aa:	c7 01       	movw	r24, r14
     9ac:	0e 94 97 05 	call	0xb2e	; 0xb2e <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9b0:	c0 e0       	ldi	r28, 0x00	; 0
     9b2:	d0 e0       	ldi	r29, 0x00	; 0
int SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
     9b4:	e1 2c       	mov	r14, r1
     9b6:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9b8:	20 c0       	rjmp	.+64     	; 0x9fa <SRAM_test+0xc0>
		uint8_t some_value = rand();
     9ba:	0e 94 92 05 	call	0xb24	; 0xb24 <rand>
		uint8_t retreived_value = ext_ram[i];
     9be:	fe 01       	movw	r30, r28
     9c0:	f8 5e       	subi	r31, 0xE8	; 232
     9c2:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     9c4:	28 17       	cp	r18, r24
     9c6:	c1 f0       	breq	.+48     	; 0x9f8 <SRAM_test+0xbe>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
     9c8:	99 27       	eor	r25, r25
     9ca:	9f 93       	push	r25
     9cc:	8f 93       	push	r24
     9ce:	1f 92       	push	r1
     9d0:	2f 93       	push	r18
     9d2:	df 93       	push	r29
     9d4:	cf 93       	push	r28
     9d6:	82 e1       	ldi	r24, 0x12	; 18
     9d8:	92 e0       	ldi	r25, 0x02	; 2
     9da:	9f 93       	push	r25
     9dc:	8f 93       	push	r24
     9de:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
			retrieval_errors++;
     9e2:	8f ef       	ldi	r24, 0xFF	; 255
     9e4:	e8 1a       	sub	r14, r24
     9e6:	f8 0a       	sbc	r15, r24
     9e8:	8d b7       	in	r24, 0x3d	; 61
     9ea:	9e b7       	in	r25, 0x3e	; 62
     9ec:	08 96       	adiw	r24, 0x08	; 8
     9ee:	0f b6       	in	r0, 0x3f	; 63
     9f0:	f8 94       	cli
     9f2:	9e bf       	out	0x3e, r25	; 62
     9f4:	0f be       	out	0x3f, r0	; 63
     9f6:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9f8:	21 96       	adiw	r28, 0x01	; 1
     9fa:	c1 15       	cp	r28, r1
     9fc:	98 e0       	ldi	r25, 0x08	; 8
     9fe:	d9 07       	cpc	r29, r25
     a00:	e0 f2       	brcs	.-72     	; 0x9ba <SRAM_test+0x80>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	if (retrieval_errors || write_errors) {
     a02:	e1 14       	cp	r14, r1
     a04:	f1 04       	cpc	r15, r1
     a06:	b1 f4       	brne	.+44     	; 0xa34 <SRAM_test+0xfa>
     a08:	01 15       	cp	r16, r1
     a0a:	11 05       	cpc	r17, r1
     a0c:	b1 f4       	brne	.+44     	; 0xa3a <SRAM_test+0x100>
		return 1;
	}
	printf("SRAM test completed with \r\n%4d errors in write phase and \r\n%4d errors in retrieval phase\r\n\r\n", write_errors, retrieval_errors);
     a0e:	ff 92       	push	r15
     a10:	ef 92       	push	r14
     a12:	1f 93       	push	r17
     a14:	0f 93       	push	r16
     a16:	80 e5       	ldi	r24, 0x50	; 80
     a18:	92 e0       	ldi	r25, 0x02	; 2
     a1a:	9f 93       	push	r25
     a1c:	8f 93       	push	r24
     a1e:	0e 94 ed 05 	call	0xbda	; 0xbda <printf>
	return 0;
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	0f 90       	pop	r0
     a28:	0f 90       	pop	r0
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	05 c0       	rjmp	.+10     	; 0xa3e <SRAM_test+0x104>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	if (retrieval_errors || write_errors) {
		return 1;
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	02 c0       	rjmp	.+4      	; 0xa3e <SRAM_test+0x104>
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	90 e0       	ldi	r25, 0x00	; 0
	}
	printf("SRAM test completed with \r\n%4d errors in write phase and \r\n%4d errors in retrieval phase\r\n\r\n", write_errors, retrieval_errors);
	return 0;
     a3e:	df 91       	pop	r29
     a40:	cf 91       	pop	r28
     a42:	1f 91       	pop	r17
     a44:	0f 91       	pop	r16
     a46:	ff 90       	pop	r15
     a48:	ef 90       	pop	r14
     a4a:	08 95       	ret

00000a4c <usart_transmit>:



void usart_transmit(unsigned char data) {
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) ) {	
     a4c:	5d 9b       	sbis	0x0b, 5	; 11
     a4e:	fe cf       	rjmp	.-4      	; 0xa4c <usart_transmit>
	}
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     a50:	8c b9       	out	0x0c, r24	; 12
     a52:	08 95       	ret

00000a54 <usart_receive>:
}

unsigned char usart_receive(void) {
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) ) {
     a54:	5f 9b       	sbis	0x0b, 7	; 11
     a56:	fe cf       	rjmp	.-4      	; 0xa54 <usart_receive>
	}
	/* Get and return received data from buffer */
	return UDR0;
     a58:	8c b1       	in	r24, 0x0c	; 12
}
     a5a:	08 95       	ret

00000a5c <usart_init>:
#include <avr/io.h>
#include "uart_driver.h"

void usart_init(uint8_t ubrr) {
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     a5c:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)ubrr;
     a5e:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a60:	88 e1       	ldi	r24, 0x18	; 24
     a62:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (1<<URSEL0)|(3<<UCSZ00);
     a64:	86 e8       	ldi	r24, 0x86	; 134
     a66:	80 bd       	out	0x20, r24	; 32
	fdevopen(usart_transmit, usart_receive);
     a68:	6a e2       	ldi	r22, 0x2A	; 42
     a6a:	75 e0       	ldi	r23, 0x05	; 5
     a6c:	86 e2       	ldi	r24, 0x26	; 38
     a6e:	95 e0       	ldi	r25, 0x05	; 5
     a70:	0e 94 a2 05 	call	0xb44	; 0xb44 <fdevopen>
     a74:	08 95       	ret

00000a76 <xmem_init>:
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1 << SRE); //enable XMEM
     a76:	85 b7       	in	r24, 0x35	; 53
     a78:	80 68       	ori	r24, 0x80	; 128
     a7a:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //bit masking
     a7c:	80 b7       	in	r24, 0x30	; 48
     a7e:	80 62       	ori	r24, 0x20	; 32
     a80:	80 bf       	out	0x30, r24	; 48
	printf("-XMEM init-\n");	
     a82:	8d ea       	ldi	r24, 0xAD	; 173
     a84:	92 e0       	ldi	r25, 0x02	; 2
     a86:	0e 94 03 06 	call	0xc06	; 0xc06 <puts>
     a8a:	08 95       	ret

00000a8c <do_rand>:
     a8c:	8f 92       	push	r8
     a8e:	9f 92       	push	r9
     a90:	af 92       	push	r10
     a92:	bf 92       	push	r11
     a94:	cf 92       	push	r12
     a96:	df 92       	push	r13
     a98:	ef 92       	push	r14
     a9a:	ff 92       	push	r15
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	ec 01       	movw	r28, r24
     aa2:	68 81       	ld	r22, Y
     aa4:	79 81       	ldd	r23, Y+1	; 0x01
     aa6:	8a 81       	ldd	r24, Y+2	; 0x02
     aa8:	9b 81       	ldd	r25, Y+3	; 0x03
     aaa:	61 15       	cp	r22, r1
     aac:	71 05       	cpc	r23, r1
     aae:	81 05       	cpc	r24, r1
     ab0:	91 05       	cpc	r25, r1
     ab2:	21 f4       	brne	.+8      	; 0xabc <do_rand+0x30>
     ab4:	64 e2       	ldi	r22, 0x24	; 36
     ab6:	79 ed       	ldi	r23, 0xD9	; 217
     ab8:	8b e5       	ldi	r24, 0x5B	; 91
     aba:	97 e0       	ldi	r25, 0x07	; 7
     abc:	2d e1       	ldi	r18, 0x1D	; 29
     abe:	33 ef       	ldi	r19, 0xF3	; 243
     ac0:	41 e0       	ldi	r20, 0x01	; 1
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	0e 94 08 0a 	call	0x1410	; 0x1410 <__divmodsi4>
     ac8:	49 01       	movw	r8, r18
     aca:	5a 01       	movw	r10, r20
     acc:	9b 01       	movw	r18, r22
     ace:	ac 01       	movw	r20, r24
     ad0:	a7 ea       	ldi	r26, 0xA7	; 167
     ad2:	b1 e4       	ldi	r27, 0x41	; 65
     ad4:	0e 94 27 0a 	call	0x144e	; 0x144e <__muluhisi3>
     ad8:	6b 01       	movw	r12, r22
     ada:	7c 01       	movw	r14, r24
     adc:	ac ee       	ldi	r26, 0xEC	; 236
     ade:	b4 ef       	ldi	r27, 0xF4	; 244
     ae0:	a5 01       	movw	r20, r10
     ae2:	94 01       	movw	r18, r8
     ae4:	0e 94 35 0a 	call	0x146a	; 0x146a <__mulohisi3>
     ae8:	dc 01       	movw	r26, r24
     aea:	cb 01       	movw	r24, r22
     aec:	8c 0d       	add	r24, r12
     aee:	9d 1d       	adc	r25, r13
     af0:	ae 1d       	adc	r26, r14
     af2:	bf 1d       	adc	r27, r15
     af4:	b7 ff       	sbrs	r27, 7
     af6:	03 c0       	rjmp	.+6      	; 0xafe <do_rand+0x72>
     af8:	01 97       	sbiw	r24, 0x01	; 1
     afa:	a1 09       	sbc	r26, r1
     afc:	b0 48       	sbci	r27, 0x80	; 128
     afe:	88 83       	st	Y, r24
     b00:	99 83       	std	Y+1, r25	; 0x01
     b02:	aa 83       	std	Y+2, r26	; 0x02
     b04:	bb 83       	std	Y+3, r27	; 0x03
     b06:	9f 77       	andi	r25, 0x7F	; 127
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	ff 90       	pop	r15
     b0e:	ef 90       	pop	r14
     b10:	df 90       	pop	r13
     b12:	cf 90       	pop	r12
     b14:	bf 90       	pop	r11
     b16:	af 90       	pop	r10
     b18:	9f 90       	pop	r9
     b1a:	8f 90       	pop	r8
     b1c:	08 95       	ret

00000b1e <rand_r>:
     b1e:	0e 94 46 05 	call	0xa8c	; 0xa8c <do_rand>
     b22:	08 95       	ret

00000b24 <rand>:
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	0e 94 46 05 	call	0xa8c	; 0xa8c <do_rand>
     b2c:	08 95       	ret

00000b2e <srand>:
     b2e:	a0 e0       	ldi	r26, 0x00	; 0
     b30:	b0 e0       	ldi	r27, 0x00	; 0
     b32:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     b36:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b3a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     b3e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     b42:	08 95       	ret

00000b44 <fdevopen>:
     b44:	0f 93       	push	r16
     b46:	1f 93       	push	r17
     b48:	cf 93       	push	r28
     b4a:	df 93       	push	r29
     b4c:	00 97       	sbiw	r24, 0x00	; 0
     b4e:	31 f4       	brne	.+12     	; 0xb5c <fdevopen+0x18>
     b50:	61 15       	cp	r22, r1
     b52:	71 05       	cpc	r23, r1
     b54:	19 f4       	brne	.+6      	; 0xb5c <fdevopen+0x18>
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	3a c0       	rjmp	.+116    	; 0xbd0 <fdevopen+0x8c>
     b5c:	8b 01       	movw	r16, r22
     b5e:	ec 01       	movw	r28, r24
     b60:	6e e0       	ldi	r22, 0x0E	; 14
     b62:	70 e0       	ldi	r23, 0x00	; 0
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	0e 94 14 08 	call	0x1028	; 0x1028 <calloc>
     b6c:	fc 01       	movw	r30, r24
     b6e:	89 2b       	or	r24, r25
     b70:	91 f3       	breq	.-28     	; 0xb56 <fdevopen+0x12>
     b72:	80 e8       	ldi	r24, 0x80	; 128
     b74:	83 83       	std	Z+3, r24	; 0x03
     b76:	01 15       	cp	r16, r1
     b78:	11 05       	cpc	r17, r1
     b7a:	71 f0       	breq	.+28     	; 0xb98 <fdevopen+0x54>
     b7c:	13 87       	std	Z+11, r17	; 0x0b
     b7e:	02 87       	std	Z+10, r16	; 0x0a
     b80:	81 e8       	ldi	r24, 0x81	; 129
     b82:	83 83       	std	Z+3, r24	; 0x03
     b84:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     b88:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     b8c:	89 2b       	or	r24, r25
     b8e:	21 f4       	brne	.+8      	; 0xb98 <fdevopen+0x54>
     b90:	f0 93 bb 02 	sts	0x02BB, r31	; 0x8002bb <__data_end+0x1>
     b94:	e0 93 ba 02 	sts	0x02BA, r30	; 0x8002ba <__data_end>
     b98:	20 97       	sbiw	r28, 0x00	; 0
     b9a:	c9 f0       	breq	.+50     	; 0xbce <fdevopen+0x8a>
     b9c:	d1 87       	std	Z+9, r29	; 0x09
     b9e:	c0 87       	std	Z+8, r28	; 0x08
     ba0:	83 81       	ldd	r24, Z+3	; 0x03
     ba2:	82 60       	ori	r24, 0x02	; 2
     ba4:	83 83       	std	Z+3, r24	; 0x03
     ba6:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <__data_end+0x2>
     baa:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <__data_end+0x3>
     bae:	89 2b       	or	r24, r25
     bb0:	71 f4       	brne	.+28     	; 0xbce <fdevopen+0x8a>
     bb2:	f0 93 bd 02 	sts	0x02BD, r31	; 0x8002bd <__data_end+0x3>
     bb6:	e0 93 bc 02 	sts	0x02BC, r30	; 0x8002bc <__data_end+0x2>
     bba:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end+0x4>
     bbe:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x5>
     bc2:	89 2b       	or	r24, r25
     bc4:	21 f4       	brne	.+8      	; 0xbce <fdevopen+0x8a>
     bc6:	f0 93 bf 02 	sts	0x02BF, r31	; 0x8002bf <__data_end+0x5>
     bca:	e0 93 be 02 	sts	0x02BE, r30	; 0x8002be <__data_end+0x4>
     bce:	cf 01       	movw	r24, r30
     bd0:	df 91       	pop	r29
     bd2:	cf 91       	pop	r28
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	08 95       	ret

00000bda <printf>:
     bda:	a0 e0       	ldi	r26, 0x00	; 0
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e3 ef       	ldi	r30, 0xF3	; 243
     be0:	f5 e0       	ldi	r31, 0x05	; 5
     be2:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__prologue_saves__+0x20>
     be6:	ae 01       	movw	r20, r28
     be8:	4b 5f       	subi	r20, 0xFB	; 251
     bea:	5f 4f       	sbci	r21, 0xFF	; 255
     bec:	fa 01       	movw	r30, r20
     bee:	61 91       	ld	r22, Z+
     bf0:	71 91       	ld	r23, Z+
     bf2:	af 01       	movw	r20, r30
     bf4:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <__data_end+0x2>
     bf8:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <__data_end+0x3>
     bfc:	0e 94 33 06 	call	0xc66	; 0xc66 <vfprintf>
     c00:	e2 e0       	ldi	r30, 0x02	; 2
     c02:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__epilogue_restores__+0x20>

00000c06 <puts>:
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	e0 91 bc 02 	lds	r30, 0x02BC	; 0x8002bc <__data_end+0x2>
     c12:	f0 91 bd 02 	lds	r31, 0x02BD	; 0x8002bd <__data_end+0x3>
     c16:	23 81       	ldd	r18, Z+3	; 0x03
     c18:	21 ff       	sbrs	r18, 1
     c1a:	1b c0       	rjmp	.+54     	; 0xc52 <puts+0x4c>
     c1c:	8c 01       	movw	r16, r24
     c1e:	d0 e0       	ldi	r29, 0x00	; 0
     c20:	c0 e0       	ldi	r28, 0x00	; 0
     c22:	f8 01       	movw	r30, r16
     c24:	81 91       	ld	r24, Z+
     c26:	8f 01       	movw	r16, r30
     c28:	60 91 bc 02 	lds	r22, 0x02BC	; 0x8002bc <__data_end+0x2>
     c2c:	70 91 bd 02 	lds	r23, 0x02BD	; 0x8002bd <__data_end+0x3>
     c30:	db 01       	movw	r26, r22
     c32:	18 96       	adiw	r26, 0x08	; 8
     c34:	ed 91       	ld	r30, X+
     c36:	fc 91       	ld	r31, X
     c38:	19 97       	sbiw	r26, 0x09	; 9
     c3a:	88 23       	and	r24, r24
     c3c:	31 f0       	breq	.+12     	; 0xc4a <puts+0x44>
     c3e:	09 95       	icall
     c40:	89 2b       	or	r24, r25
     c42:	79 f3       	breq	.-34     	; 0xc22 <puts+0x1c>
     c44:	df ef       	ldi	r29, 0xFF	; 255
     c46:	cf ef       	ldi	r28, 0xFF	; 255
     c48:	ec cf       	rjmp	.-40     	; 0xc22 <puts+0x1c>
     c4a:	8a e0       	ldi	r24, 0x0A	; 10
     c4c:	09 95       	icall
     c4e:	89 2b       	or	r24, r25
     c50:	19 f0       	breq	.+6      	; 0xc58 <puts+0x52>
     c52:	8f ef       	ldi	r24, 0xFF	; 255
     c54:	9f ef       	ldi	r25, 0xFF	; 255
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <puts+0x56>
     c58:	8d 2f       	mov	r24, r29
     c5a:	9c 2f       	mov	r25, r28
     c5c:	df 91       	pop	r29
     c5e:	cf 91       	pop	r28
     c60:	1f 91       	pop	r17
     c62:	0f 91       	pop	r16
     c64:	08 95       	ret

00000c66 <vfprintf>:
     c66:	ab e0       	ldi	r26, 0x0B	; 11
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	e9 e3       	ldi	r30, 0x39	; 57
     c6c:	f6 e0       	ldi	r31, 0x06	; 6
     c6e:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <__prologue_saves__>
     c72:	6c 01       	movw	r12, r24
     c74:	7b 01       	movw	r14, r22
     c76:	8a 01       	movw	r16, r20
     c78:	fc 01       	movw	r30, r24
     c7a:	17 82       	std	Z+7, r1	; 0x07
     c7c:	16 82       	std	Z+6, r1	; 0x06
     c7e:	83 81       	ldd	r24, Z+3	; 0x03
     c80:	81 ff       	sbrs	r24, 1
     c82:	cc c1       	rjmp	.+920    	; 0x101c <vfprintf+0x3b6>
     c84:	ce 01       	movw	r24, r28
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	3c 01       	movw	r6, r24
     c8a:	f6 01       	movw	r30, r12
     c8c:	93 81       	ldd	r25, Z+3	; 0x03
     c8e:	f7 01       	movw	r30, r14
     c90:	93 fd       	sbrc	r25, 3
     c92:	85 91       	lpm	r24, Z+
     c94:	93 ff       	sbrs	r25, 3
     c96:	81 91       	ld	r24, Z+
     c98:	7f 01       	movw	r14, r30
     c9a:	88 23       	and	r24, r24
     c9c:	09 f4       	brne	.+2      	; 0xca0 <vfprintf+0x3a>
     c9e:	ba c1       	rjmp	.+884    	; 0x1014 <vfprintf+0x3ae>
     ca0:	85 32       	cpi	r24, 0x25	; 37
     ca2:	39 f4       	brne	.+14     	; 0xcb2 <vfprintf+0x4c>
     ca4:	93 fd       	sbrc	r25, 3
     ca6:	85 91       	lpm	r24, Z+
     ca8:	93 ff       	sbrs	r25, 3
     caa:	81 91       	ld	r24, Z+
     cac:	7f 01       	movw	r14, r30
     cae:	85 32       	cpi	r24, 0x25	; 37
     cb0:	29 f4       	brne	.+10     	; 0xcbc <vfprintf+0x56>
     cb2:	b6 01       	movw	r22, r12
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     cba:	e7 cf       	rjmp	.-50     	; 0xc8a <vfprintf+0x24>
     cbc:	91 2c       	mov	r9, r1
     cbe:	21 2c       	mov	r2, r1
     cc0:	31 2c       	mov	r3, r1
     cc2:	ff e1       	ldi	r31, 0x1F	; 31
     cc4:	f3 15       	cp	r31, r3
     cc6:	d8 f0       	brcs	.+54     	; 0xcfe <vfprintf+0x98>
     cc8:	8b 32       	cpi	r24, 0x2B	; 43
     cca:	79 f0       	breq	.+30     	; 0xcea <vfprintf+0x84>
     ccc:	38 f4       	brcc	.+14     	; 0xcdc <vfprintf+0x76>
     cce:	80 32       	cpi	r24, 0x20	; 32
     cd0:	79 f0       	breq	.+30     	; 0xcf0 <vfprintf+0x8a>
     cd2:	83 32       	cpi	r24, 0x23	; 35
     cd4:	a1 f4       	brne	.+40     	; 0xcfe <vfprintf+0x98>
     cd6:	23 2d       	mov	r18, r3
     cd8:	20 61       	ori	r18, 0x10	; 16
     cda:	1d c0       	rjmp	.+58     	; 0xd16 <vfprintf+0xb0>
     cdc:	8d 32       	cpi	r24, 0x2D	; 45
     cde:	61 f0       	breq	.+24     	; 0xcf8 <vfprintf+0x92>
     ce0:	80 33       	cpi	r24, 0x30	; 48
     ce2:	69 f4       	brne	.+26     	; 0xcfe <vfprintf+0x98>
     ce4:	23 2d       	mov	r18, r3
     ce6:	21 60       	ori	r18, 0x01	; 1
     ce8:	16 c0       	rjmp	.+44     	; 0xd16 <vfprintf+0xb0>
     cea:	83 2d       	mov	r24, r3
     cec:	82 60       	ori	r24, 0x02	; 2
     cee:	38 2e       	mov	r3, r24
     cf0:	e3 2d       	mov	r30, r3
     cf2:	e4 60       	ori	r30, 0x04	; 4
     cf4:	3e 2e       	mov	r3, r30
     cf6:	2a c0       	rjmp	.+84     	; 0xd4c <vfprintf+0xe6>
     cf8:	f3 2d       	mov	r31, r3
     cfa:	f8 60       	ori	r31, 0x08	; 8
     cfc:	1d c0       	rjmp	.+58     	; 0xd38 <vfprintf+0xd2>
     cfe:	37 fc       	sbrc	r3, 7
     d00:	2d c0       	rjmp	.+90     	; 0xd5c <vfprintf+0xf6>
     d02:	20 ed       	ldi	r18, 0xD0	; 208
     d04:	28 0f       	add	r18, r24
     d06:	2a 30       	cpi	r18, 0x0A	; 10
     d08:	40 f0       	brcs	.+16     	; 0xd1a <vfprintf+0xb4>
     d0a:	8e 32       	cpi	r24, 0x2E	; 46
     d0c:	b9 f4       	brne	.+46     	; 0xd3c <vfprintf+0xd6>
     d0e:	36 fc       	sbrc	r3, 6
     d10:	81 c1       	rjmp	.+770    	; 0x1014 <vfprintf+0x3ae>
     d12:	23 2d       	mov	r18, r3
     d14:	20 64       	ori	r18, 0x40	; 64
     d16:	32 2e       	mov	r3, r18
     d18:	19 c0       	rjmp	.+50     	; 0xd4c <vfprintf+0xe6>
     d1a:	36 fe       	sbrs	r3, 6
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0xc4>
     d1e:	8a e0       	ldi	r24, 0x0A	; 10
     d20:	98 9e       	mul	r9, r24
     d22:	20 0d       	add	r18, r0
     d24:	11 24       	eor	r1, r1
     d26:	92 2e       	mov	r9, r18
     d28:	11 c0       	rjmp	.+34     	; 0xd4c <vfprintf+0xe6>
     d2a:	ea e0       	ldi	r30, 0x0A	; 10
     d2c:	2e 9e       	mul	r2, r30
     d2e:	20 0d       	add	r18, r0
     d30:	11 24       	eor	r1, r1
     d32:	22 2e       	mov	r2, r18
     d34:	f3 2d       	mov	r31, r3
     d36:	f0 62       	ori	r31, 0x20	; 32
     d38:	3f 2e       	mov	r3, r31
     d3a:	08 c0       	rjmp	.+16     	; 0xd4c <vfprintf+0xe6>
     d3c:	8c 36       	cpi	r24, 0x6C	; 108
     d3e:	21 f4       	brne	.+8      	; 0xd48 <vfprintf+0xe2>
     d40:	83 2d       	mov	r24, r3
     d42:	80 68       	ori	r24, 0x80	; 128
     d44:	38 2e       	mov	r3, r24
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <vfprintf+0xe6>
     d48:	88 36       	cpi	r24, 0x68	; 104
     d4a:	41 f4       	brne	.+16     	; 0xd5c <vfprintf+0xf6>
     d4c:	f7 01       	movw	r30, r14
     d4e:	93 fd       	sbrc	r25, 3
     d50:	85 91       	lpm	r24, Z+
     d52:	93 ff       	sbrs	r25, 3
     d54:	81 91       	ld	r24, Z+
     d56:	7f 01       	movw	r14, r30
     d58:	81 11       	cpse	r24, r1
     d5a:	b3 cf       	rjmp	.-154    	; 0xcc2 <vfprintf+0x5c>
     d5c:	98 2f       	mov	r25, r24
     d5e:	9f 7d       	andi	r25, 0xDF	; 223
     d60:	95 54       	subi	r25, 0x45	; 69
     d62:	93 30       	cpi	r25, 0x03	; 3
     d64:	28 f4       	brcc	.+10     	; 0xd70 <vfprintf+0x10a>
     d66:	0c 5f       	subi	r16, 0xFC	; 252
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	9f e3       	ldi	r25, 0x3F	; 63
     d6c:	99 83       	std	Y+1, r25	; 0x01
     d6e:	0d c0       	rjmp	.+26     	; 0xd8a <vfprintf+0x124>
     d70:	83 36       	cpi	r24, 0x63	; 99
     d72:	31 f0       	breq	.+12     	; 0xd80 <vfprintf+0x11a>
     d74:	83 37       	cpi	r24, 0x73	; 115
     d76:	71 f0       	breq	.+28     	; 0xd94 <vfprintf+0x12e>
     d78:	83 35       	cpi	r24, 0x53	; 83
     d7a:	09 f0       	breq	.+2      	; 0xd7e <vfprintf+0x118>
     d7c:	59 c0       	rjmp	.+178    	; 0xe30 <vfprintf+0x1ca>
     d7e:	21 c0       	rjmp	.+66     	; 0xdc2 <vfprintf+0x15c>
     d80:	f8 01       	movw	r30, r16
     d82:	80 81       	ld	r24, Z
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	0e 5f       	subi	r16, 0xFE	; 254
     d88:	1f 4f       	sbci	r17, 0xFF	; 255
     d8a:	88 24       	eor	r8, r8
     d8c:	83 94       	inc	r8
     d8e:	91 2c       	mov	r9, r1
     d90:	53 01       	movw	r10, r6
     d92:	13 c0       	rjmp	.+38     	; 0xdba <vfprintf+0x154>
     d94:	28 01       	movw	r4, r16
     d96:	f2 e0       	ldi	r31, 0x02	; 2
     d98:	4f 0e       	add	r4, r31
     d9a:	51 1c       	adc	r5, r1
     d9c:	f8 01       	movw	r30, r16
     d9e:	a0 80       	ld	r10, Z
     da0:	b1 80       	ldd	r11, Z+1	; 0x01
     da2:	36 fe       	sbrs	r3, 6
     da4:	03 c0       	rjmp	.+6      	; 0xdac <vfprintf+0x146>
     da6:	69 2d       	mov	r22, r9
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	02 c0       	rjmp	.+4      	; 0xdb0 <vfprintf+0x14a>
     dac:	6f ef       	ldi	r22, 0xFF	; 255
     dae:	7f ef       	ldi	r23, 0xFF	; 255
     db0:	c5 01       	movw	r24, r10
     db2:	0e 94 63 09 	call	0x12c6	; 0x12c6 <strnlen>
     db6:	4c 01       	movw	r8, r24
     db8:	82 01       	movw	r16, r4
     dba:	f3 2d       	mov	r31, r3
     dbc:	ff 77       	andi	r31, 0x7F	; 127
     dbe:	3f 2e       	mov	r3, r31
     dc0:	16 c0       	rjmp	.+44     	; 0xdee <vfprintf+0x188>
     dc2:	28 01       	movw	r4, r16
     dc4:	22 e0       	ldi	r18, 0x02	; 2
     dc6:	42 0e       	add	r4, r18
     dc8:	51 1c       	adc	r5, r1
     dca:	f8 01       	movw	r30, r16
     dcc:	a0 80       	ld	r10, Z
     dce:	b1 80       	ldd	r11, Z+1	; 0x01
     dd0:	36 fe       	sbrs	r3, 6
     dd2:	03 c0       	rjmp	.+6      	; 0xdda <vfprintf+0x174>
     dd4:	69 2d       	mov	r22, r9
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <vfprintf+0x178>
     dda:	6f ef       	ldi	r22, 0xFF	; 255
     ddc:	7f ef       	ldi	r23, 0xFF	; 255
     dde:	c5 01       	movw	r24, r10
     de0:	0e 94 51 09 	call	0x12a2	; 0x12a2 <strnlen_P>
     de4:	4c 01       	movw	r8, r24
     de6:	f3 2d       	mov	r31, r3
     de8:	f0 68       	ori	r31, 0x80	; 128
     dea:	3f 2e       	mov	r3, r31
     dec:	82 01       	movw	r16, r4
     dee:	33 fc       	sbrc	r3, 3
     df0:	1b c0       	rjmp	.+54     	; 0xe28 <vfprintf+0x1c2>
     df2:	82 2d       	mov	r24, r2
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	88 16       	cp	r8, r24
     df8:	99 06       	cpc	r9, r25
     dfa:	b0 f4       	brcc	.+44     	; 0xe28 <vfprintf+0x1c2>
     dfc:	b6 01       	movw	r22, r12
     dfe:	80 e2       	ldi	r24, 0x20	; 32
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     e06:	2a 94       	dec	r2
     e08:	f4 cf       	rjmp	.-24     	; 0xdf2 <vfprintf+0x18c>
     e0a:	f5 01       	movw	r30, r10
     e0c:	37 fc       	sbrc	r3, 7
     e0e:	85 91       	lpm	r24, Z+
     e10:	37 fe       	sbrs	r3, 7
     e12:	81 91       	ld	r24, Z+
     e14:	5f 01       	movw	r10, r30
     e16:	b6 01       	movw	r22, r12
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     e1e:	21 10       	cpse	r2, r1
     e20:	2a 94       	dec	r2
     e22:	21 e0       	ldi	r18, 0x01	; 1
     e24:	82 1a       	sub	r8, r18
     e26:	91 08       	sbc	r9, r1
     e28:	81 14       	cp	r8, r1
     e2a:	91 04       	cpc	r9, r1
     e2c:	71 f7       	brne	.-36     	; 0xe0a <vfprintf+0x1a4>
     e2e:	e8 c0       	rjmp	.+464    	; 0x1000 <vfprintf+0x39a>
     e30:	84 36       	cpi	r24, 0x64	; 100
     e32:	11 f0       	breq	.+4      	; 0xe38 <vfprintf+0x1d2>
     e34:	89 36       	cpi	r24, 0x69	; 105
     e36:	41 f5       	brne	.+80     	; 0xe88 <vfprintf+0x222>
     e38:	f8 01       	movw	r30, r16
     e3a:	37 fe       	sbrs	r3, 7
     e3c:	07 c0       	rjmp	.+14     	; 0xe4c <vfprintf+0x1e6>
     e3e:	60 81       	ld	r22, Z
     e40:	71 81       	ldd	r23, Z+1	; 0x01
     e42:	82 81       	ldd	r24, Z+2	; 0x02
     e44:	93 81       	ldd	r25, Z+3	; 0x03
     e46:	0c 5f       	subi	r16, 0xFC	; 252
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	08 c0       	rjmp	.+16     	; 0xe5c <vfprintf+0x1f6>
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	07 2e       	mov	r0, r23
     e52:	00 0c       	add	r0, r0
     e54:	88 0b       	sbc	r24, r24
     e56:	99 0b       	sbc	r25, r25
     e58:	0e 5f       	subi	r16, 0xFE	; 254
     e5a:	1f 4f       	sbci	r17, 0xFF	; 255
     e5c:	f3 2d       	mov	r31, r3
     e5e:	ff 76       	andi	r31, 0x6F	; 111
     e60:	3f 2e       	mov	r3, r31
     e62:	97 ff       	sbrs	r25, 7
     e64:	09 c0       	rjmp	.+18     	; 0xe78 <vfprintf+0x212>
     e66:	90 95       	com	r25
     e68:	80 95       	com	r24
     e6a:	70 95       	com	r23
     e6c:	61 95       	neg	r22
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	8f 4f       	sbci	r24, 0xFF	; 255
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	f0 68       	ori	r31, 0x80	; 128
     e76:	3f 2e       	mov	r3, r31
     e78:	2a e0       	ldi	r18, 0x0A	; 10
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	a3 01       	movw	r20, r6
     e7e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__ultoa_invert>
     e82:	88 2e       	mov	r8, r24
     e84:	86 18       	sub	r8, r6
     e86:	45 c0       	rjmp	.+138    	; 0xf12 <vfprintf+0x2ac>
     e88:	85 37       	cpi	r24, 0x75	; 117
     e8a:	31 f4       	brne	.+12     	; 0xe98 <vfprintf+0x232>
     e8c:	23 2d       	mov	r18, r3
     e8e:	2f 7e       	andi	r18, 0xEF	; 239
     e90:	b2 2e       	mov	r11, r18
     e92:	2a e0       	ldi	r18, 0x0A	; 10
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	25 c0       	rjmp	.+74     	; 0xee2 <vfprintf+0x27c>
     e98:	93 2d       	mov	r25, r3
     e9a:	99 7f       	andi	r25, 0xF9	; 249
     e9c:	b9 2e       	mov	r11, r25
     e9e:	8f 36       	cpi	r24, 0x6F	; 111
     ea0:	c1 f0       	breq	.+48     	; 0xed2 <vfprintf+0x26c>
     ea2:	18 f4       	brcc	.+6      	; 0xeaa <vfprintf+0x244>
     ea4:	88 35       	cpi	r24, 0x58	; 88
     ea6:	79 f0       	breq	.+30     	; 0xec6 <vfprintf+0x260>
     ea8:	b5 c0       	rjmp	.+362    	; 0x1014 <vfprintf+0x3ae>
     eaa:	80 37       	cpi	r24, 0x70	; 112
     eac:	19 f0       	breq	.+6      	; 0xeb4 <vfprintf+0x24e>
     eae:	88 37       	cpi	r24, 0x78	; 120
     eb0:	21 f0       	breq	.+8      	; 0xeba <vfprintf+0x254>
     eb2:	b0 c0       	rjmp	.+352    	; 0x1014 <vfprintf+0x3ae>
     eb4:	e9 2f       	mov	r30, r25
     eb6:	e0 61       	ori	r30, 0x10	; 16
     eb8:	be 2e       	mov	r11, r30
     eba:	b4 fe       	sbrs	r11, 4
     ebc:	0d c0       	rjmp	.+26     	; 0xed8 <vfprintf+0x272>
     ebe:	fb 2d       	mov	r31, r11
     ec0:	f4 60       	ori	r31, 0x04	; 4
     ec2:	bf 2e       	mov	r11, r31
     ec4:	09 c0       	rjmp	.+18     	; 0xed8 <vfprintf+0x272>
     ec6:	34 fe       	sbrs	r3, 4
     ec8:	0a c0       	rjmp	.+20     	; 0xede <vfprintf+0x278>
     eca:	29 2f       	mov	r18, r25
     ecc:	26 60       	ori	r18, 0x06	; 6
     ece:	b2 2e       	mov	r11, r18
     ed0:	06 c0       	rjmp	.+12     	; 0xede <vfprintf+0x278>
     ed2:	28 e0       	ldi	r18, 0x08	; 8
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <vfprintf+0x27c>
     ed8:	20 e1       	ldi	r18, 0x10	; 16
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <vfprintf+0x27c>
     ede:	20 e1       	ldi	r18, 0x10	; 16
     ee0:	32 e0       	ldi	r19, 0x02	; 2
     ee2:	f8 01       	movw	r30, r16
     ee4:	b7 fe       	sbrs	r11, 7
     ee6:	07 c0       	rjmp	.+14     	; 0xef6 <vfprintf+0x290>
     ee8:	60 81       	ld	r22, Z
     eea:	71 81       	ldd	r23, Z+1	; 0x01
     eec:	82 81       	ldd	r24, Z+2	; 0x02
     eee:	93 81       	ldd	r25, Z+3	; 0x03
     ef0:	0c 5f       	subi	r16, 0xFC	; 252
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	06 c0       	rjmp	.+12     	; 0xf02 <vfprintf+0x29c>
     ef6:	60 81       	ld	r22, Z
     ef8:	71 81       	ldd	r23, Z+1	; 0x01
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 5f       	subi	r16, 0xFE	; 254
     f00:	1f 4f       	sbci	r17, 0xFF	; 255
     f02:	a3 01       	movw	r20, r6
     f04:	0e 94 aa 09 	call	0x1354	; 0x1354 <__ultoa_invert>
     f08:	88 2e       	mov	r8, r24
     f0a:	86 18       	sub	r8, r6
     f0c:	fb 2d       	mov	r31, r11
     f0e:	ff 77       	andi	r31, 0x7F	; 127
     f10:	3f 2e       	mov	r3, r31
     f12:	36 fe       	sbrs	r3, 6
     f14:	0d c0       	rjmp	.+26     	; 0xf30 <vfprintf+0x2ca>
     f16:	23 2d       	mov	r18, r3
     f18:	2e 7f       	andi	r18, 0xFE	; 254
     f1a:	a2 2e       	mov	r10, r18
     f1c:	89 14       	cp	r8, r9
     f1e:	58 f4       	brcc	.+22     	; 0xf36 <vfprintf+0x2d0>
     f20:	34 fe       	sbrs	r3, 4
     f22:	0b c0       	rjmp	.+22     	; 0xf3a <vfprintf+0x2d4>
     f24:	32 fc       	sbrc	r3, 2
     f26:	09 c0       	rjmp	.+18     	; 0xf3a <vfprintf+0x2d4>
     f28:	83 2d       	mov	r24, r3
     f2a:	8e 7e       	andi	r24, 0xEE	; 238
     f2c:	a8 2e       	mov	r10, r24
     f2e:	05 c0       	rjmp	.+10     	; 0xf3a <vfprintf+0x2d4>
     f30:	b8 2c       	mov	r11, r8
     f32:	a3 2c       	mov	r10, r3
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <vfprintf+0x2d6>
     f36:	b8 2c       	mov	r11, r8
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <vfprintf+0x2d6>
     f3a:	b9 2c       	mov	r11, r9
     f3c:	a4 fe       	sbrs	r10, 4
     f3e:	0f c0       	rjmp	.+30     	; 0xf5e <vfprintf+0x2f8>
     f40:	fe 01       	movw	r30, r28
     f42:	e8 0d       	add	r30, r8
     f44:	f1 1d       	adc	r31, r1
     f46:	80 81       	ld	r24, Z
     f48:	80 33       	cpi	r24, 0x30	; 48
     f4a:	21 f4       	brne	.+8      	; 0xf54 <vfprintf+0x2ee>
     f4c:	9a 2d       	mov	r25, r10
     f4e:	99 7e       	andi	r25, 0xE9	; 233
     f50:	a9 2e       	mov	r10, r25
     f52:	09 c0       	rjmp	.+18     	; 0xf66 <vfprintf+0x300>
     f54:	a2 fe       	sbrs	r10, 2
     f56:	06 c0       	rjmp	.+12     	; 0xf64 <vfprintf+0x2fe>
     f58:	b3 94       	inc	r11
     f5a:	b3 94       	inc	r11
     f5c:	04 c0       	rjmp	.+8      	; 0xf66 <vfprintf+0x300>
     f5e:	8a 2d       	mov	r24, r10
     f60:	86 78       	andi	r24, 0x86	; 134
     f62:	09 f0       	breq	.+2      	; 0xf66 <vfprintf+0x300>
     f64:	b3 94       	inc	r11
     f66:	a3 fc       	sbrc	r10, 3
     f68:	11 c0       	rjmp	.+34     	; 0xf8c <vfprintf+0x326>
     f6a:	a0 fe       	sbrs	r10, 0
     f6c:	06 c0       	rjmp	.+12     	; 0xf7a <vfprintf+0x314>
     f6e:	b2 14       	cp	r11, r2
     f70:	88 f4       	brcc	.+34     	; 0xf94 <vfprintf+0x32e>
     f72:	28 0c       	add	r2, r8
     f74:	92 2c       	mov	r9, r2
     f76:	9b 18       	sub	r9, r11
     f78:	0e c0       	rjmp	.+28     	; 0xf96 <vfprintf+0x330>
     f7a:	b2 14       	cp	r11, r2
     f7c:	60 f4       	brcc	.+24     	; 0xf96 <vfprintf+0x330>
     f7e:	b6 01       	movw	r22, r12
     f80:	80 e2       	ldi	r24, 0x20	; 32
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     f88:	b3 94       	inc	r11
     f8a:	f7 cf       	rjmp	.-18     	; 0xf7a <vfprintf+0x314>
     f8c:	b2 14       	cp	r11, r2
     f8e:	18 f4       	brcc	.+6      	; 0xf96 <vfprintf+0x330>
     f90:	2b 18       	sub	r2, r11
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <vfprintf+0x332>
     f94:	98 2c       	mov	r9, r8
     f96:	21 2c       	mov	r2, r1
     f98:	a4 fe       	sbrs	r10, 4
     f9a:	10 c0       	rjmp	.+32     	; 0xfbc <vfprintf+0x356>
     f9c:	b6 01       	movw	r22, r12
     f9e:	80 e3       	ldi	r24, 0x30	; 48
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     fa6:	a2 fe       	sbrs	r10, 2
     fa8:	17 c0       	rjmp	.+46     	; 0xfd8 <vfprintf+0x372>
     faa:	a1 fc       	sbrc	r10, 1
     fac:	03 c0       	rjmp	.+6      	; 0xfb4 <vfprintf+0x34e>
     fae:	88 e7       	ldi	r24, 0x78	; 120
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <vfprintf+0x352>
     fb4:	88 e5       	ldi	r24, 0x58	; 88
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	b6 01       	movw	r22, r12
     fba:	0c c0       	rjmp	.+24     	; 0xfd4 <vfprintf+0x36e>
     fbc:	8a 2d       	mov	r24, r10
     fbe:	86 78       	andi	r24, 0x86	; 134
     fc0:	59 f0       	breq	.+22     	; 0xfd8 <vfprintf+0x372>
     fc2:	a1 fe       	sbrs	r10, 1
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <vfprintf+0x364>
     fc6:	8b e2       	ldi	r24, 0x2B	; 43
     fc8:	01 c0       	rjmp	.+2      	; 0xfcc <vfprintf+0x366>
     fca:	80 e2       	ldi	r24, 0x20	; 32
     fcc:	a7 fc       	sbrc	r10, 7
     fce:	8d e2       	ldi	r24, 0x2D	; 45
     fd0:	b6 01       	movw	r22, r12
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     fd8:	89 14       	cp	r8, r9
     fda:	38 f4       	brcc	.+14     	; 0xfea <vfprintf+0x384>
     fdc:	b6 01       	movw	r22, r12
     fde:	80 e3       	ldi	r24, 0x30	; 48
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     fe6:	9a 94       	dec	r9
     fe8:	f7 cf       	rjmp	.-18     	; 0xfd8 <vfprintf+0x372>
     fea:	8a 94       	dec	r8
     fec:	f3 01       	movw	r30, r6
     fee:	e8 0d       	add	r30, r8
     ff0:	f1 1d       	adc	r31, r1
     ff2:	80 81       	ld	r24, Z
     ff4:	b6 01       	movw	r22, r12
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
     ffc:	81 10       	cpse	r8, r1
     ffe:	f5 cf       	rjmp	.-22     	; 0xfea <vfprintf+0x384>
    1000:	22 20       	and	r2, r2
    1002:	09 f4       	brne	.+2      	; 0x1006 <vfprintf+0x3a0>
    1004:	42 ce       	rjmp	.-892    	; 0xc8a <vfprintf+0x24>
    1006:	b6 01       	movw	r22, r12
    1008:	80 e2       	ldi	r24, 0x20	; 32
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	0e 94 6e 09 	call	0x12dc	; 0x12dc <fputc>
    1010:	2a 94       	dec	r2
    1012:	f6 cf       	rjmp	.-20     	; 0x1000 <vfprintf+0x39a>
    1014:	f6 01       	movw	r30, r12
    1016:	86 81       	ldd	r24, Z+6	; 0x06
    1018:	97 81       	ldd	r25, Z+7	; 0x07
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <vfprintf+0x3ba>
    101c:	8f ef       	ldi	r24, 0xFF	; 255
    101e:	9f ef       	ldi	r25, 0xFF	; 255
    1020:	2b 96       	adiw	r28, 0x0b	; 11
    1022:	e2 e1       	ldi	r30, 0x12	; 18
    1024:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__epilogue_restores__>

00001028 <calloc>:
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	86 9f       	mul	r24, r22
    1032:	80 01       	movw	r16, r0
    1034:	87 9f       	mul	r24, r23
    1036:	10 0d       	add	r17, r0
    1038:	96 9f       	mul	r25, r22
    103a:	10 0d       	add	r17, r0
    103c:	11 24       	eor	r1, r1
    103e:	c8 01       	movw	r24, r16
    1040:	0e 94 30 08 	call	0x1060	; 0x1060 <malloc>
    1044:	ec 01       	movw	r28, r24
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	29 f0       	breq	.+10     	; 0x1054 <calloc+0x2c>
    104a:	a8 01       	movw	r20, r16
    104c:	60 e0       	ldi	r22, 0x00	; 0
    104e:	70 e0       	ldi	r23, 0x00	; 0
    1050:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <memset>
    1054:	ce 01       	movw	r24, r28
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	08 95       	ret

00001060 <malloc>:
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	91 05       	cpc	r25, r1
    106c:	10 f4       	brcc	.+4      	; 0x1072 <malloc+0x12>
    106e:	82 e0       	ldi	r24, 0x02	; 2
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	e0 91 c2 02 	lds	r30, 0x02C2	; 0x8002c2 <__flp>
    1076:	f0 91 c3 02 	lds	r31, 0x02C3	; 0x8002c3 <__flp+0x1>
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	a0 e0       	ldi	r26, 0x00	; 0
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	30 97       	sbiw	r30, 0x00	; 0
    1084:	19 f1       	breq	.+70     	; 0x10cc <malloc+0x6c>
    1086:	40 81       	ld	r20, Z
    1088:	51 81       	ldd	r21, Z+1	; 0x01
    108a:	02 81       	ldd	r16, Z+2	; 0x02
    108c:	13 81       	ldd	r17, Z+3	; 0x03
    108e:	48 17       	cp	r20, r24
    1090:	59 07       	cpc	r21, r25
    1092:	c8 f0       	brcs	.+50     	; 0x10c6 <malloc+0x66>
    1094:	84 17       	cp	r24, r20
    1096:	95 07       	cpc	r25, r21
    1098:	69 f4       	brne	.+26     	; 0x10b4 <malloc+0x54>
    109a:	10 97       	sbiw	r26, 0x00	; 0
    109c:	31 f0       	breq	.+12     	; 0x10aa <malloc+0x4a>
    109e:	12 96       	adiw	r26, 0x02	; 2
    10a0:	0c 93       	st	X, r16
    10a2:	12 97       	sbiw	r26, 0x02	; 2
    10a4:	13 96       	adiw	r26, 0x03	; 3
    10a6:	1c 93       	st	X, r17
    10a8:	27 c0       	rjmp	.+78     	; 0x10f8 <malloc+0x98>
    10aa:	00 93 c2 02 	sts	0x02C2, r16	; 0x8002c2 <__flp>
    10ae:	10 93 c3 02 	sts	0x02C3, r17	; 0x8002c3 <__flp+0x1>
    10b2:	22 c0       	rjmp	.+68     	; 0x10f8 <malloc+0x98>
    10b4:	21 15       	cp	r18, r1
    10b6:	31 05       	cpc	r19, r1
    10b8:	19 f0       	breq	.+6      	; 0x10c0 <malloc+0x60>
    10ba:	42 17       	cp	r20, r18
    10bc:	53 07       	cpc	r21, r19
    10be:	18 f4       	brcc	.+6      	; 0x10c6 <malloc+0x66>
    10c0:	9a 01       	movw	r18, r20
    10c2:	bd 01       	movw	r22, r26
    10c4:	ef 01       	movw	r28, r30
    10c6:	df 01       	movw	r26, r30
    10c8:	f8 01       	movw	r30, r16
    10ca:	db cf       	rjmp	.-74     	; 0x1082 <malloc+0x22>
    10cc:	21 15       	cp	r18, r1
    10ce:	31 05       	cpc	r19, r1
    10d0:	f9 f0       	breq	.+62     	; 0x1110 <malloc+0xb0>
    10d2:	28 1b       	sub	r18, r24
    10d4:	39 0b       	sbc	r19, r25
    10d6:	24 30       	cpi	r18, 0x04	; 4
    10d8:	31 05       	cpc	r19, r1
    10da:	80 f4       	brcc	.+32     	; 0x10fc <malloc+0x9c>
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	9b 81       	ldd	r25, Y+3	; 0x03
    10e0:	61 15       	cp	r22, r1
    10e2:	71 05       	cpc	r23, r1
    10e4:	21 f0       	breq	.+8      	; 0x10ee <malloc+0x8e>
    10e6:	fb 01       	movw	r30, r22
    10e8:	93 83       	std	Z+3, r25	; 0x03
    10ea:	82 83       	std	Z+2, r24	; 0x02
    10ec:	04 c0       	rjmp	.+8      	; 0x10f6 <malloc+0x96>
    10ee:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <__flp+0x1>
    10f2:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <__flp>
    10f6:	fe 01       	movw	r30, r28
    10f8:	32 96       	adiw	r30, 0x02	; 2
    10fa:	44 c0       	rjmp	.+136    	; 0x1184 <malloc+0x124>
    10fc:	fe 01       	movw	r30, r28
    10fe:	e2 0f       	add	r30, r18
    1100:	f3 1f       	adc	r31, r19
    1102:	81 93       	st	Z+, r24
    1104:	91 93       	st	Z+, r25
    1106:	22 50       	subi	r18, 0x02	; 2
    1108:	31 09       	sbc	r19, r1
    110a:	39 83       	std	Y+1, r19	; 0x01
    110c:	28 83       	st	Y, r18
    110e:	3a c0       	rjmp	.+116    	; 0x1184 <malloc+0x124>
    1110:	20 91 c0 02 	lds	r18, 0x02C0	; 0x8002c0 <__brkval>
    1114:	30 91 c1 02 	lds	r19, 0x02C1	; 0x8002c1 <__brkval+0x1>
    1118:	23 2b       	or	r18, r19
    111a:	41 f4       	brne	.+16     	; 0x112c <malloc+0xcc>
    111c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1120:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1124:	30 93 c1 02 	sts	0x02C1, r19	; 0x8002c1 <__brkval+0x1>
    1128:	20 93 c0 02 	sts	0x02C0, r18	; 0x8002c0 <__brkval>
    112c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1130:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1134:	21 15       	cp	r18, r1
    1136:	31 05       	cpc	r19, r1
    1138:	41 f4       	brne	.+16     	; 0x114a <malloc+0xea>
    113a:	2d b7       	in	r18, 0x3d	; 61
    113c:	3e b7       	in	r19, 0x3e	; 62
    113e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1142:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1146:	24 1b       	sub	r18, r20
    1148:	35 0b       	sbc	r19, r21
    114a:	e0 91 c0 02 	lds	r30, 0x02C0	; 0x8002c0 <__brkval>
    114e:	f0 91 c1 02 	lds	r31, 0x02C1	; 0x8002c1 <__brkval+0x1>
    1152:	e2 17       	cp	r30, r18
    1154:	f3 07       	cpc	r31, r19
    1156:	a0 f4       	brcc	.+40     	; 0x1180 <malloc+0x120>
    1158:	2e 1b       	sub	r18, r30
    115a:	3f 0b       	sbc	r19, r31
    115c:	28 17       	cp	r18, r24
    115e:	39 07       	cpc	r19, r25
    1160:	78 f0       	brcs	.+30     	; 0x1180 <malloc+0x120>
    1162:	ac 01       	movw	r20, r24
    1164:	4e 5f       	subi	r20, 0xFE	; 254
    1166:	5f 4f       	sbci	r21, 0xFF	; 255
    1168:	24 17       	cp	r18, r20
    116a:	35 07       	cpc	r19, r21
    116c:	48 f0       	brcs	.+18     	; 0x1180 <malloc+0x120>
    116e:	4e 0f       	add	r20, r30
    1170:	5f 1f       	adc	r21, r31
    1172:	50 93 c1 02 	sts	0x02C1, r21	; 0x8002c1 <__brkval+0x1>
    1176:	40 93 c0 02 	sts	0x02C0, r20	; 0x8002c0 <__brkval>
    117a:	81 93       	st	Z+, r24
    117c:	91 93       	st	Z+, r25
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <malloc+0x124>
    1180:	e0 e0       	ldi	r30, 0x00	; 0
    1182:	f0 e0       	ldi	r31, 0x00	; 0
    1184:	cf 01       	movw	r24, r30
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	1f 91       	pop	r17
    118c:	0f 91       	pop	r16
    118e:	08 95       	ret

00001190 <free>:
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	00 97       	sbiw	r24, 0x00	; 0
    1196:	09 f4       	brne	.+2      	; 0x119a <free+0xa>
    1198:	81 c0       	rjmp	.+258    	; 0x129c <free+0x10c>
    119a:	fc 01       	movw	r30, r24
    119c:	32 97       	sbiw	r30, 0x02	; 2
    119e:	13 82       	std	Z+3, r1	; 0x03
    11a0:	12 82       	std	Z+2, r1	; 0x02
    11a2:	a0 91 c2 02 	lds	r26, 0x02C2	; 0x8002c2 <__flp>
    11a6:	b0 91 c3 02 	lds	r27, 0x02C3	; 0x8002c3 <__flp+0x1>
    11aa:	10 97       	sbiw	r26, 0x00	; 0
    11ac:	81 f4       	brne	.+32     	; 0x11ce <free+0x3e>
    11ae:	20 81       	ld	r18, Z
    11b0:	31 81       	ldd	r19, Z+1	; 0x01
    11b2:	82 0f       	add	r24, r18
    11b4:	93 1f       	adc	r25, r19
    11b6:	20 91 c0 02 	lds	r18, 0x02C0	; 0x8002c0 <__brkval>
    11ba:	30 91 c1 02 	lds	r19, 0x02C1	; 0x8002c1 <__brkval+0x1>
    11be:	28 17       	cp	r18, r24
    11c0:	39 07       	cpc	r19, r25
    11c2:	51 f5       	brne	.+84     	; 0x1218 <free+0x88>
    11c4:	f0 93 c1 02 	sts	0x02C1, r31	; 0x8002c1 <__brkval+0x1>
    11c8:	e0 93 c0 02 	sts	0x02C0, r30	; 0x8002c0 <__brkval>
    11cc:	67 c0       	rjmp	.+206    	; 0x129c <free+0x10c>
    11ce:	ed 01       	movw	r28, r26
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	ce 17       	cp	r28, r30
    11d6:	df 07       	cpc	r29, r31
    11d8:	40 f4       	brcc	.+16     	; 0x11ea <free+0x5a>
    11da:	4a 81       	ldd	r20, Y+2	; 0x02
    11dc:	5b 81       	ldd	r21, Y+3	; 0x03
    11de:	9e 01       	movw	r18, r28
    11e0:	41 15       	cp	r20, r1
    11e2:	51 05       	cpc	r21, r1
    11e4:	f1 f0       	breq	.+60     	; 0x1222 <free+0x92>
    11e6:	ea 01       	movw	r28, r20
    11e8:	f5 cf       	rjmp	.-22     	; 0x11d4 <free+0x44>
    11ea:	d3 83       	std	Z+3, r29	; 0x03
    11ec:	c2 83       	std	Z+2, r28	; 0x02
    11ee:	40 81       	ld	r20, Z
    11f0:	51 81       	ldd	r21, Z+1	; 0x01
    11f2:	84 0f       	add	r24, r20
    11f4:	95 1f       	adc	r25, r21
    11f6:	c8 17       	cp	r28, r24
    11f8:	d9 07       	cpc	r29, r25
    11fa:	59 f4       	brne	.+22     	; 0x1212 <free+0x82>
    11fc:	88 81       	ld	r24, Y
    11fe:	99 81       	ldd	r25, Y+1	; 0x01
    1200:	84 0f       	add	r24, r20
    1202:	95 1f       	adc	r25, r21
    1204:	02 96       	adiw	r24, 0x02	; 2
    1206:	91 83       	std	Z+1, r25	; 0x01
    1208:	80 83       	st	Z, r24
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	9b 81       	ldd	r25, Y+3	; 0x03
    120e:	93 83       	std	Z+3, r25	; 0x03
    1210:	82 83       	std	Z+2, r24	; 0x02
    1212:	21 15       	cp	r18, r1
    1214:	31 05       	cpc	r19, r1
    1216:	29 f4       	brne	.+10     	; 0x1222 <free+0x92>
    1218:	f0 93 c3 02 	sts	0x02C3, r31	; 0x8002c3 <__flp+0x1>
    121c:	e0 93 c2 02 	sts	0x02C2, r30	; 0x8002c2 <__flp>
    1220:	3d c0       	rjmp	.+122    	; 0x129c <free+0x10c>
    1222:	e9 01       	movw	r28, r18
    1224:	fb 83       	std	Y+3, r31	; 0x03
    1226:	ea 83       	std	Y+2, r30	; 0x02
    1228:	49 91       	ld	r20, Y+
    122a:	59 91       	ld	r21, Y+
    122c:	c4 0f       	add	r28, r20
    122e:	d5 1f       	adc	r29, r21
    1230:	ec 17       	cp	r30, r28
    1232:	fd 07       	cpc	r31, r29
    1234:	61 f4       	brne	.+24     	; 0x124e <free+0xbe>
    1236:	80 81       	ld	r24, Z
    1238:	91 81       	ldd	r25, Z+1	; 0x01
    123a:	84 0f       	add	r24, r20
    123c:	95 1f       	adc	r25, r21
    123e:	02 96       	adiw	r24, 0x02	; 2
    1240:	e9 01       	movw	r28, r18
    1242:	99 83       	std	Y+1, r25	; 0x01
    1244:	88 83       	st	Y, r24
    1246:	82 81       	ldd	r24, Z+2	; 0x02
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	9b 83       	std	Y+3, r25	; 0x03
    124c:	8a 83       	std	Y+2, r24	; 0x02
    124e:	e0 e0       	ldi	r30, 0x00	; 0
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	12 96       	adiw	r26, 0x02	; 2
    1254:	8d 91       	ld	r24, X+
    1256:	9c 91       	ld	r25, X
    1258:	13 97       	sbiw	r26, 0x03	; 3
    125a:	00 97       	sbiw	r24, 0x00	; 0
    125c:	19 f0       	breq	.+6      	; 0x1264 <free+0xd4>
    125e:	fd 01       	movw	r30, r26
    1260:	dc 01       	movw	r26, r24
    1262:	f7 cf       	rjmp	.-18     	; 0x1252 <free+0xc2>
    1264:	8d 91       	ld	r24, X+
    1266:	9c 91       	ld	r25, X
    1268:	11 97       	sbiw	r26, 0x01	; 1
    126a:	9d 01       	movw	r18, r26
    126c:	2e 5f       	subi	r18, 0xFE	; 254
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	82 0f       	add	r24, r18
    1272:	93 1f       	adc	r25, r19
    1274:	20 91 c0 02 	lds	r18, 0x02C0	; 0x8002c0 <__brkval>
    1278:	30 91 c1 02 	lds	r19, 0x02C1	; 0x8002c1 <__brkval+0x1>
    127c:	28 17       	cp	r18, r24
    127e:	39 07       	cpc	r19, r25
    1280:	69 f4       	brne	.+26     	; 0x129c <free+0x10c>
    1282:	30 97       	sbiw	r30, 0x00	; 0
    1284:	29 f4       	brne	.+10     	; 0x1290 <free+0x100>
    1286:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <__flp+0x1>
    128a:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <__flp>
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <free+0x104>
    1290:	13 82       	std	Z+3, r1	; 0x03
    1292:	12 82       	std	Z+2, r1	; 0x02
    1294:	b0 93 c1 02 	sts	0x02C1, r27	; 0x8002c1 <__brkval+0x1>
    1298:	a0 93 c0 02 	sts	0x02C0, r26	; 0x8002c0 <__brkval>
    129c:	df 91       	pop	r29
    129e:	cf 91       	pop	r28
    12a0:	08 95       	ret

000012a2 <strnlen_P>:
    12a2:	fc 01       	movw	r30, r24
    12a4:	05 90       	lpm	r0, Z+
    12a6:	61 50       	subi	r22, 0x01	; 1
    12a8:	70 40       	sbci	r23, 0x00	; 0
    12aa:	01 10       	cpse	r0, r1
    12ac:	d8 f7       	brcc	.-10     	; 0x12a4 <strnlen_P+0x2>
    12ae:	80 95       	com	r24
    12b0:	90 95       	com	r25
    12b2:	8e 0f       	add	r24, r30
    12b4:	9f 1f       	adc	r25, r31
    12b6:	08 95       	ret

000012b8 <memset>:
    12b8:	dc 01       	movw	r26, r24
    12ba:	01 c0       	rjmp	.+2      	; 0x12be <memset+0x6>
    12bc:	6d 93       	st	X+, r22
    12be:	41 50       	subi	r20, 0x01	; 1
    12c0:	50 40       	sbci	r21, 0x00	; 0
    12c2:	e0 f7       	brcc	.-8      	; 0x12bc <memset+0x4>
    12c4:	08 95       	ret

000012c6 <strnlen>:
    12c6:	fc 01       	movw	r30, r24
    12c8:	61 50       	subi	r22, 0x01	; 1
    12ca:	70 40       	sbci	r23, 0x00	; 0
    12cc:	01 90       	ld	r0, Z+
    12ce:	01 10       	cpse	r0, r1
    12d0:	d8 f7       	brcc	.-10     	; 0x12c8 <strnlen+0x2>
    12d2:	80 95       	com	r24
    12d4:	90 95       	com	r25
    12d6:	8e 0f       	add	r24, r30
    12d8:	9f 1f       	adc	r25, r31
    12da:	08 95       	ret

000012dc <fputc>:
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	fb 01       	movw	r30, r22
    12e6:	23 81       	ldd	r18, Z+3	; 0x03
    12e8:	21 fd       	sbrc	r18, 1
    12ea:	03 c0       	rjmp	.+6      	; 0x12f2 <fputc+0x16>
    12ec:	8f ef       	ldi	r24, 0xFF	; 255
    12ee:	9f ef       	ldi	r25, 0xFF	; 255
    12f0:	2c c0       	rjmp	.+88     	; 0x134a <fputc+0x6e>
    12f2:	22 ff       	sbrs	r18, 2
    12f4:	16 c0       	rjmp	.+44     	; 0x1322 <fputc+0x46>
    12f6:	46 81       	ldd	r20, Z+6	; 0x06
    12f8:	57 81       	ldd	r21, Z+7	; 0x07
    12fa:	24 81       	ldd	r18, Z+4	; 0x04
    12fc:	35 81       	ldd	r19, Z+5	; 0x05
    12fe:	42 17       	cp	r20, r18
    1300:	53 07       	cpc	r21, r19
    1302:	44 f4       	brge	.+16     	; 0x1314 <fputc+0x38>
    1304:	a0 81       	ld	r26, Z
    1306:	b1 81       	ldd	r27, Z+1	; 0x01
    1308:	9d 01       	movw	r18, r26
    130a:	2f 5f       	subi	r18, 0xFF	; 255
    130c:	3f 4f       	sbci	r19, 0xFF	; 255
    130e:	31 83       	std	Z+1, r19	; 0x01
    1310:	20 83       	st	Z, r18
    1312:	8c 93       	st	X, r24
    1314:	26 81       	ldd	r18, Z+6	; 0x06
    1316:	37 81       	ldd	r19, Z+7	; 0x07
    1318:	2f 5f       	subi	r18, 0xFF	; 255
    131a:	3f 4f       	sbci	r19, 0xFF	; 255
    131c:	37 83       	std	Z+7, r19	; 0x07
    131e:	26 83       	std	Z+6, r18	; 0x06
    1320:	14 c0       	rjmp	.+40     	; 0x134a <fputc+0x6e>
    1322:	8b 01       	movw	r16, r22
    1324:	ec 01       	movw	r28, r24
    1326:	fb 01       	movw	r30, r22
    1328:	00 84       	ldd	r0, Z+8	; 0x08
    132a:	f1 85       	ldd	r31, Z+9	; 0x09
    132c:	e0 2d       	mov	r30, r0
    132e:	09 95       	icall
    1330:	89 2b       	or	r24, r25
    1332:	e1 f6       	brne	.-72     	; 0x12ec <fputc+0x10>
    1334:	d8 01       	movw	r26, r16
    1336:	16 96       	adiw	r26, 0x06	; 6
    1338:	8d 91       	ld	r24, X+
    133a:	9c 91       	ld	r25, X
    133c:	17 97       	sbiw	r26, 0x07	; 7
    133e:	01 96       	adiw	r24, 0x01	; 1
    1340:	17 96       	adiw	r26, 0x07	; 7
    1342:	9c 93       	st	X, r25
    1344:	8e 93       	st	-X, r24
    1346:	16 97       	sbiw	r26, 0x06	; 6
    1348:	ce 01       	movw	r24, r28
    134a:	df 91       	pop	r29
    134c:	cf 91       	pop	r28
    134e:	1f 91       	pop	r17
    1350:	0f 91       	pop	r16
    1352:	08 95       	ret

00001354 <__ultoa_invert>:
    1354:	fa 01       	movw	r30, r20
    1356:	aa 27       	eor	r26, r26
    1358:	28 30       	cpi	r18, 0x08	; 8
    135a:	51 f1       	breq	.+84     	; 0x13b0 <__ultoa_invert+0x5c>
    135c:	20 31       	cpi	r18, 0x10	; 16
    135e:	81 f1       	breq	.+96     	; 0x13c0 <__ultoa_invert+0x6c>
    1360:	e8 94       	clt
    1362:	6f 93       	push	r22
    1364:	6e 7f       	andi	r22, 0xFE	; 254
    1366:	6e 5f       	subi	r22, 0xFE	; 254
    1368:	7f 4f       	sbci	r23, 0xFF	; 255
    136a:	8f 4f       	sbci	r24, 0xFF	; 255
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	af 4f       	sbci	r26, 0xFF	; 255
    1370:	b1 e0       	ldi	r27, 0x01	; 1
    1372:	3e d0       	rcall	.+124    	; 0x13f0 <__ultoa_invert+0x9c>
    1374:	b4 e0       	ldi	r27, 0x04	; 4
    1376:	3c d0       	rcall	.+120    	; 0x13f0 <__ultoa_invert+0x9c>
    1378:	67 0f       	add	r22, r23
    137a:	78 1f       	adc	r23, r24
    137c:	89 1f       	adc	r24, r25
    137e:	9a 1f       	adc	r25, r26
    1380:	a1 1d       	adc	r26, r1
    1382:	68 0f       	add	r22, r24
    1384:	79 1f       	adc	r23, r25
    1386:	8a 1f       	adc	r24, r26
    1388:	91 1d       	adc	r25, r1
    138a:	a1 1d       	adc	r26, r1
    138c:	6a 0f       	add	r22, r26
    138e:	71 1d       	adc	r23, r1
    1390:	81 1d       	adc	r24, r1
    1392:	91 1d       	adc	r25, r1
    1394:	a1 1d       	adc	r26, r1
    1396:	20 d0       	rcall	.+64     	; 0x13d8 <__ultoa_invert+0x84>
    1398:	09 f4       	brne	.+2      	; 0x139c <__ultoa_invert+0x48>
    139a:	68 94       	set
    139c:	3f 91       	pop	r19
    139e:	2a e0       	ldi	r18, 0x0A	; 10
    13a0:	26 9f       	mul	r18, r22
    13a2:	11 24       	eor	r1, r1
    13a4:	30 19       	sub	r19, r0
    13a6:	30 5d       	subi	r19, 0xD0	; 208
    13a8:	31 93       	st	Z+, r19
    13aa:	de f6       	brtc	.-74     	; 0x1362 <__ultoa_invert+0xe>
    13ac:	cf 01       	movw	r24, r30
    13ae:	08 95       	ret
    13b0:	46 2f       	mov	r20, r22
    13b2:	47 70       	andi	r20, 0x07	; 7
    13b4:	40 5d       	subi	r20, 0xD0	; 208
    13b6:	41 93       	st	Z+, r20
    13b8:	b3 e0       	ldi	r27, 0x03	; 3
    13ba:	0f d0       	rcall	.+30     	; 0x13da <__ultoa_invert+0x86>
    13bc:	c9 f7       	brne	.-14     	; 0x13b0 <__ultoa_invert+0x5c>
    13be:	f6 cf       	rjmp	.-20     	; 0x13ac <__ultoa_invert+0x58>
    13c0:	46 2f       	mov	r20, r22
    13c2:	4f 70       	andi	r20, 0x0F	; 15
    13c4:	40 5d       	subi	r20, 0xD0	; 208
    13c6:	4a 33       	cpi	r20, 0x3A	; 58
    13c8:	18 f0       	brcs	.+6      	; 0x13d0 <__ultoa_invert+0x7c>
    13ca:	49 5d       	subi	r20, 0xD9	; 217
    13cc:	31 fd       	sbrc	r19, 1
    13ce:	40 52       	subi	r20, 0x20	; 32
    13d0:	41 93       	st	Z+, r20
    13d2:	02 d0       	rcall	.+4      	; 0x13d8 <__ultoa_invert+0x84>
    13d4:	a9 f7       	brne	.-22     	; 0x13c0 <__ultoa_invert+0x6c>
    13d6:	ea cf       	rjmp	.-44     	; 0x13ac <__ultoa_invert+0x58>
    13d8:	b4 e0       	ldi	r27, 0x04	; 4
    13da:	a6 95       	lsr	r26
    13dc:	97 95       	ror	r25
    13de:	87 95       	ror	r24
    13e0:	77 95       	ror	r23
    13e2:	67 95       	ror	r22
    13e4:	ba 95       	dec	r27
    13e6:	c9 f7       	brne	.-14     	; 0x13da <__ultoa_invert+0x86>
    13e8:	00 97       	sbiw	r24, 0x00	; 0
    13ea:	61 05       	cpc	r22, r1
    13ec:	71 05       	cpc	r23, r1
    13ee:	08 95       	ret
    13f0:	9b 01       	movw	r18, r22
    13f2:	ac 01       	movw	r20, r24
    13f4:	0a 2e       	mov	r0, r26
    13f6:	06 94       	lsr	r0
    13f8:	57 95       	ror	r21
    13fa:	47 95       	ror	r20
    13fc:	37 95       	ror	r19
    13fe:	27 95       	ror	r18
    1400:	ba 95       	dec	r27
    1402:	c9 f7       	brne	.-14     	; 0x13f6 <__ultoa_invert+0xa2>
    1404:	62 0f       	add	r22, r18
    1406:	73 1f       	adc	r23, r19
    1408:	84 1f       	adc	r24, r20
    140a:	95 1f       	adc	r25, r21
    140c:	a0 1d       	adc	r26, r0
    140e:	08 95       	ret

00001410 <__divmodsi4>:
    1410:	05 2e       	mov	r0, r21
    1412:	97 fb       	bst	r25, 7
    1414:	1e f4       	brtc	.+6      	; 0x141c <__divmodsi4+0xc>
    1416:	00 94       	com	r0
    1418:	0e 94 1f 0a 	call	0x143e	; 0x143e <__negsi2>
    141c:	57 fd       	sbrc	r21, 7
    141e:	07 d0       	rcall	.+14     	; 0x142e <__divmodsi4_neg2>
    1420:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__udivmodsi4>
    1424:	07 fc       	sbrc	r0, 7
    1426:	03 d0       	rcall	.+6      	; 0x142e <__divmodsi4_neg2>
    1428:	4e f4       	brtc	.+18     	; 0x143c <__divmodsi4_exit>
    142a:	0c 94 1f 0a 	jmp	0x143e	; 0x143e <__negsi2>

0000142e <__divmodsi4_neg2>:
    142e:	50 95       	com	r21
    1430:	40 95       	com	r20
    1432:	30 95       	com	r19
    1434:	21 95       	neg	r18
    1436:	3f 4f       	sbci	r19, 0xFF	; 255
    1438:	4f 4f       	sbci	r20, 0xFF	; 255
    143a:	5f 4f       	sbci	r21, 0xFF	; 255

0000143c <__divmodsi4_exit>:
    143c:	08 95       	ret

0000143e <__negsi2>:
    143e:	90 95       	com	r25
    1440:	80 95       	com	r24
    1442:	70 95       	com	r23
    1444:	61 95       	neg	r22
    1446:	7f 4f       	sbci	r23, 0xFF	; 255
    1448:	8f 4f       	sbci	r24, 0xFF	; 255
    144a:	9f 4f       	sbci	r25, 0xFF	; 255
    144c:	08 95       	ret

0000144e <__muluhisi3>:
    144e:	0e 94 93 0a 	call	0x1526	; 0x1526 <__umulhisi3>
    1452:	a5 9f       	mul	r26, r21
    1454:	90 0d       	add	r25, r0
    1456:	b4 9f       	mul	r27, r20
    1458:	90 0d       	add	r25, r0
    145a:	a4 9f       	mul	r26, r20
    145c:	80 0d       	add	r24, r0
    145e:	91 1d       	adc	r25, r1
    1460:	11 24       	eor	r1, r1
    1462:	08 95       	ret

00001464 <__mulshisi3>:
    1464:	b7 ff       	sbrs	r27, 7
    1466:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__muluhisi3>

0000146a <__mulohisi3>:
    146a:	0e 94 27 0a 	call	0x144e	; 0x144e <__muluhisi3>
    146e:	82 1b       	sub	r24, r18
    1470:	93 0b       	sbc	r25, r19
    1472:	08 95       	ret

00001474 <__prologue_saves__>:
    1474:	2f 92       	push	r2
    1476:	3f 92       	push	r3
    1478:	4f 92       	push	r4
    147a:	5f 92       	push	r5
    147c:	6f 92       	push	r6
    147e:	7f 92       	push	r7
    1480:	8f 92       	push	r8
    1482:	9f 92       	push	r9
    1484:	af 92       	push	r10
    1486:	bf 92       	push	r11
    1488:	cf 92       	push	r12
    148a:	df 92       	push	r13
    148c:	ef 92       	push	r14
    148e:	ff 92       	push	r15
    1490:	0f 93       	push	r16
    1492:	1f 93       	push	r17
    1494:	cf 93       	push	r28
    1496:	df 93       	push	r29
    1498:	cd b7       	in	r28, 0x3d	; 61
    149a:	de b7       	in	r29, 0x3e	; 62
    149c:	ca 1b       	sub	r28, r26
    149e:	db 0b       	sbc	r29, r27
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	09 94       	ijmp

000014ac <__epilogue_restores__>:
    14ac:	2a 88       	ldd	r2, Y+18	; 0x12
    14ae:	39 88       	ldd	r3, Y+17	; 0x11
    14b0:	48 88       	ldd	r4, Y+16	; 0x10
    14b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    14b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    14b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    14b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    14bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    14be:	b9 84       	ldd	r11, Y+9	; 0x09
    14c0:	c8 84       	ldd	r12, Y+8	; 0x08
    14c2:	df 80       	ldd	r13, Y+7	; 0x07
    14c4:	ee 80       	ldd	r14, Y+6	; 0x06
    14c6:	fd 80       	ldd	r15, Y+5	; 0x05
    14c8:	0c 81       	ldd	r16, Y+4	; 0x04
    14ca:	1b 81       	ldd	r17, Y+3	; 0x03
    14cc:	aa 81       	ldd	r26, Y+2	; 0x02
    14ce:	b9 81       	ldd	r27, Y+1	; 0x01
    14d0:	ce 0f       	add	r28, r30
    14d2:	d1 1d       	adc	r29, r1
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	ed 01       	movw	r28, r26
    14e0:	08 95       	ret

000014e2 <__udivmodsi4>:
    14e2:	a1 e2       	ldi	r26, 0x21	; 33
    14e4:	1a 2e       	mov	r1, r26
    14e6:	aa 1b       	sub	r26, r26
    14e8:	bb 1b       	sub	r27, r27
    14ea:	fd 01       	movw	r30, r26
    14ec:	0d c0       	rjmp	.+26     	; 0x1508 <__udivmodsi4_ep>

000014ee <__udivmodsi4_loop>:
    14ee:	aa 1f       	adc	r26, r26
    14f0:	bb 1f       	adc	r27, r27
    14f2:	ee 1f       	adc	r30, r30
    14f4:	ff 1f       	adc	r31, r31
    14f6:	a2 17       	cp	r26, r18
    14f8:	b3 07       	cpc	r27, r19
    14fa:	e4 07       	cpc	r30, r20
    14fc:	f5 07       	cpc	r31, r21
    14fe:	20 f0       	brcs	.+8      	; 0x1508 <__udivmodsi4_ep>
    1500:	a2 1b       	sub	r26, r18
    1502:	b3 0b       	sbc	r27, r19
    1504:	e4 0b       	sbc	r30, r20
    1506:	f5 0b       	sbc	r31, r21

00001508 <__udivmodsi4_ep>:
    1508:	66 1f       	adc	r22, r22
    150a:	77 1f       	adc	r23, r23
    150c:	88 1f       	adc	r24, r24
    150e:	99 1f       	adc	r25, r25
    1510:	1a 94       	dec	r1
    1512:	69 f7       	brne	.-38     	; 0x14ee <__udivmodsi4_loop>
    1514:	60 95       	com	r22
    1516:	70 95       	com	r23
    1518:	80 95       	com	r24
    151a:	90 95       	com	r25
    151c:	9b 01       	movw	r18, r22
    151e:	ac 01       	movw	r20, r24
    1520:	bd 01       	movw	r22, r26
    1522:	cf 01       	movw	r24, r30
    1524:	08 95       	ret

00001526 <__umulhisi3>:
    1526:	a2 9f       	mul	r26, r18
    1528:	b0 01       	movw	r22, r0
    152a:	b3 9f       	mul	r27, r19
    152c:	c0 01       	movw	r24, r0
    152e:	a3 9f       	mul	r26, r19
    1530:	70 0d       	add	r23, r0
    1532:	81 1d       	adc	r24, r1
    1534:	11 24       	eor	r1, r1
    1536:	91 1d       	adc	r25, r1
    1538:	b2 9f       	mul	r27, r18
    153a:	70 0d       	add	r23, r0
    153c:	81 1d       	adc	r24, r1
    153e:	11 24       	eor	r1, r1
    1540:	91 1d       	adc	r25, r1
    1542:	08 95       	ret

00001544 <_exit>:
    1544:	f8 94       	cli

00001546 <__stop_program>:
    1546:	ff cf       	rjmp	.-2      	; 0x1546 <__stop_program>
